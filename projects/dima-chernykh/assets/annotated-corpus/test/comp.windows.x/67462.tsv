From from From
: : :
sinclair sinclair sinclair
@ @ @
dcs dcs dc
. . .
glasgow glasgow glasgow
. . .
ac ac ac
. . .
uk uk uk
( ( (
Duncan duncan Duncan
Sinclair sinclair Sinclair
) ) )
Subject subject Subject
: : :
Glasgow glasgow Glasgow
RX rx RX
- - -
remote remot remote
execution execut execution
of of of
X x X
programs program program
, , ,
Part part Part
01 01 01
/ / /
01 01 01
Summary summari Summary
: : :
Nice nice Nice
program program program
to to to
do do do
remote remot remote
xterms xterm xterms
. . .
Keywords keyword Keywords
: : :
perl perl perl
X x X
remote remot remote
execution execut execution
Organization organ Organization
: : :
Glasgow glasgow Glasgow
University univers University
Computing comput Computing
Science scienc Science
Dept dept Dept
. . .
Lines line Lines
: : :
976 976 976
[ [ [
[ [ [
I i I
posted post post
this this this
a a a
few few few
weeks week week
back back back
, , ,
but but but
all all all
I i I
got got get
back back back
was was be
an an an
error error error
message messag message
" " "
pnews pnew pnews
: : :
/ / /
dev dev dev
/ / /
null null null
: : :
Permission permiss Permission
denied deni deny
" " "
. . .
Yep yep Yep
, , ,
/ / /
dev dev dev
/ / /
null null null
had had have
a a a
mode mode mode
of of of
600 600 600
. . .
( ( (
Arrghhh arrghhh Arrghhh
! ! !
! ! !
) ) )
] ] ]
] ] ]
With with With
renewed renew renew
interest interest interest
in in in
" " "
setting set set
the the the
DISPLAY display DISPLAY
variable variabl variable
" " "
, , ,
etc etc etc
. . .
. . .
I i I
thought thought think
I i I
would would would
post post post
my my my
contribution contribut contribution
. . .
This this This
Perl perl Perl
script script script
is is be
my my my
solution solut solution
. . .
It it It
trys trys try
to to to
be be be
intelligent intellig intelligent
about about about
what what what
it it it
' ' '
s s s
doing do do
so so so
that that that
you you you
should should should
be be be
able abl able
to to to
type type type
" " "
rx rx rx
host host host
. . .
domain domain domain
. . .
etc etc etc
" " "
, , ,
and and and
get get get
a a a
xterm xterm xterm
running run running
on on on
" " "
host host host
. . .
domain domain domain
. . .
etc etc etc
" " "
, , ,
with with with
all all all
the the the
difficult difficult difficult
stuff stuff stuff
taken taken take
care care care
of of of
. . .
In in In
theory theori theory
, , ,
this this this
program program program
can can can
do do do
* * *
everything everyth everything
* * *
you you you
ever ever ever
wanted want want
to to to
do do do
when when when
you you you
wanted want want
to to to
run run run
a a a
remote remot remote
command command command
in in in
the the the
background background background
- - -
it it it
doesn doesn doesn
' ' '
t t t
even even even
need need need
to to to
be be be
an an an
X x X
program program program
. . .
Try tri Try
a a a
" " "
rx rx rx
big big big
- - -
machine machin machine
make make make
" " "
for for for
instance instanc instance
, , ,
for for for
a a a
backgrounded background backgrounded
make make make
on on on
the the the
remote remot remote
" " "
big big big
- - -
machine machin machine
" " "
. . .
For for For
more more more
details detail detail
and and and
a a a
full full full
list list list
of of of
features featur feature
read read read
the the the
README readm README
file file file
, , ,
about about about
20 20 20
lines line line
below below below
. . .
. . .
. . .
All all All
comments comment comment
welcome welcom welcome
. . .
Duncan duncan Duncan
. . .
# # #
! ! !
/ / /
bin bin bin
/ / /
sh sh sh
# # #
This this This
is is be
a a a
shell shell shell
archive archiv archive
. . .
Remove remov Remove
anything anyth anything
before befor before
this this this
line line line
, , ,
then then then
unpack unpack unpack
# # #
it it it
by by by
saving save save
it it it
into into into
a a a
file file file
and and and
typing type type
" " "
sh sh sh
file file file
" " "
. . .
To to To
overwrite overwrit overwrite
existing exist exist
# # #
files file file
, , ,
type type type
" " "
sh sh sh
file file file
- - -
c c c
" " "
. . .
You you You
can can can
also also also
feed feed fee
this this this
as as a
standard standard standard
input input input
via via via
# # #
unshar unshar unshar
, , ,
or or or
by by by
typing type type
" " "
sh sh sh
< < <
file file file
" " "
, , ,
e e e
. . .
g g g
. . .
. . .
If if If
this this this
archive archiv archive
is is be
complete complet complete
, , ,
you you you
# # #
will will will
see see see
the the the
following follow following
message messag message
at at at
the the the
end end end
: : :
# # #
" " "
End end End
of of of
archive archiv archive
1 1 1
( ( (
of of of
1 1 1
) ) )
. . .
" " "
# # #
Contents content Contents
: : :
README readm README
Imakefile imakefil Imakefile
MANIFEST manifest MANIFEST
Makefile makefil Makefile
rx rx rx
. . .
man man man
rx rx rx
. . .
pl pl pl
# # #
Wrapped wrap Wrapped
by by by
sinclair sinclair sinclair
@ @ @
dcs dcs dc
. . .
gla gla gla
. . .
ac ac ac
. . .
uk uk uk
on on on
Thu thu Thu
Apr apr Apr
8 8 8
18 18 18
: : :
47 47 47
: : :
48 48 48
1993 1993 1993
PATH path PATH
= = =
/ / /
bin bin bin
: : :
/ / /
usr usr usr
/ / /
bin bin bin
: : :
/ / /
usr usr usr
/ / /
ucb ucb ucb
; ; ;
export export export
PATH path PATH
if if if
test test test
- - -
f f f
' ' '
README readm README
' ' '
- - -
a a a
" " "
$ $ $
{ { {
1 1 1
} } }
" " "
! ! !
= = =
" " "
- - -
c c c
" " "
; ; ;
then then then
echo echo echo
shar shar shar
: : :
Will will Will
not not not
clobber clobber clobber
existing exist exist
file file file
\ \ \
" " "
' ' '
README readm README
' ' '
\ \ \
" " "
else els else
echo echo echo
shar shar shar
: : :
Extracting extract Extracting
\ \ \
" " "
' ' '
README readm README
' ' '
\ \ \
" " "
\ \ \
( ( (
1442 1442 1442
characters charact character
\ \ \
) ) )
sed sed sed
" " "
s s s
/ / /
^ ^ ^
X x X
/ / /
/ / /
" " "
> > >
' ' '
README readm README
' ' '
< < <
< < <
' ' '
END end END
_ _ _
OF of OF
_ _ _
FILE file FILE
' ' '
X x X
X x X
Glasgow glasgow Glasgow
RX rx RX
- - -
remote remot remote
execution execut execution
of of of
X x X
programs program program
. . .
Version version Version
3 3 3
. . .
1 1 1
. . .
7 7 7
X x X
XCopyright xcopyright XCopyright
1992 1992 1992
Duncan duncan Duncan
Sinclair sinclair Sinclair
< < <
sinclair sinclair sinclair
@ @ @
dcs dcs dc
. . .
gla gla gla
. . .
ac ac ac
. . .
uk uk uk
> > >
X x X
XTrivial xtrivial XTrivial
to to to
install instal install
, , ,
but but but
there there there
' ' '
s s s
an an an
Imakefile imakefil Imakefile
to to to
make make make
it it it
even even even
more more more
trivial trivial trivial
. . .
X x X
XThe xthe XThe
perl perl perl
script script script
needs need need
some some some
customisation customis customisation
before befor before
it it it
is is be
installed instal instal
, , ,
just just just
Xedit xedit Xedit
the the the
" " "
rx rx rx
. . .
pl pl pl
" " "
file file file
, , ,
and and and
read read read
the the the
comments comment comment
. . .
Once onc Once
you you you
' ' '
ve ve ve
done done do
Xthis xthis Xthis
you you you
can can can
" " "
xmkmf xmkmf xmkmf
" " "
, , ,
then then then
" " "
make make make
install instal install
install instal install
. . .
man man man
" " "
. . .
X x X
XFEATURES xfeatur XFEATURES
: : :
X x X
X x X
* * *
) ) )
Does doe Does
the the the
right right right
thing thing thing
for for for
off off off
- - -
site site site
remote remot remote
execution execut execution
. . .
Including includ Including
X x X
setting set set
up up up
$ $ $
DISPLAY display DISPLAY
to to to
include includ include
domain domain domain
names name name
, , ,
and and and
passing pass pass
X x X
magic magic magic
cookies cooki cooky
, , ,
or or or
doing do do
the the the
" " "
xhost xhost xhost
" " "
stuff stuff stuff
. . .
X x X
X x X
* * *
) ) )
Allow allow Allow
different differ different
remote remot remote
user user user
name name name
. . .
( ( (
rx rx rx
- - -
l l l
user user user
host host host
. . .
. . .
. . .
) ) )
X x X
X x X
* * *
) ) )
Smart smart Smart
quoting quot quote
of of of
arguments argument argument
- - -
makes make make
passing pass pass
wild wild wild
- - -
cards card card
easy easi easy
. . .
X x X
X x X
* * *
) ) )
Custom custom Custom
command command command
execution execut execution
- - -
link link link
it it it
to to to
" " "
remacs remac remacs
" " "
to to to
get get get
a a a
remote remot remote
X x X
emacs emac emacs
command command command
. . .
X x X
X x X
* * *
) ) )
Automatic automat Automatic
xterm xterm xterm
options option option
- - -
names name names
the the the
xterm xterm xterm
according accord accord
to to to
hostname hostnam hostname
, , ,
X x X
and and and
turns turn turn
on on on
" " "
login login login
shell shell shell
" " "
. . .
X x X
X x X
* * *
) ) )
Default default Default
command command command
is is be
xterm xterm xterm
. . .
X x X
X x X
* * *
) ) )
Propagates propag Propagates
X x X
- - -
ish ish ish
env env env
. . .
variables variabl variable
to to to
remote remot remote
session session session
- - -
user user user
may may may
X x X
extend extend extend
the the the
list list list
of of of
variables variabl variable
to to to
pass pass pass
. . .
X x X
X x X
* * *
) ) )
Special special Special
handling handl handle
for for for
bourne bourn bourne
shell shell shell
users user user
. . .
X x X
X x X
* * *
) ) )
Tries tri Tries
to to to
do do do
remote remot remote
execution execut execution
from from from
same same same
directory directori directory
as as a
local local local
. . .
X x X
That that That
is is be
, , ,
it it it
propagates propag propagate
$ $ $
PWD pwd PWD
, , ,
in in in
an an an
intelligent intellig intelligent
manner manner manner
. . .
X x X
X x X
* * *
) ) )
Logs log Logs
errors error error
in in in
a a a
file file file
. . .
X x X
X x X
* * *
) ) )
Overall overal Overall
Intelligence intellig Intelligence
( ( (
TM tm TM
) ) )
- - -
makes make make
reasoned reason reason
decisions decis decision
about about about
what what what
X x X
you you you
are are be
trying tri try
to to to
do do do
, , ,
and and and
tries tri try
to to to
" " "
do do do
the the the
right right right
thing thing thing
" " "
. . .
X x X
X x X
* * *
) ) )
Written written Written
in in in
Perl perl Perl
, , ,
for for for
portability portabl portability
and and and
hackability hackabl hackability
. . .
X x X
XFor xfor XFor
more more more
info info info
, , ,
read read read
the the the
man man man
page page page
or or or
the the the
source sourc source
. . .
X x X
END end END
_ _ _
OF of OF
_ _ _
FILE file FILE
if if if
test test test
1442 1442 1442
- - -
ne ne ne
` ` `
wc wc wc
- - -
c c c
< < <
' ' '
README readm README
' ' '
` ` `
; ; ;
then then then
echo echo echo
shar shar shar
: : :
\ \ \
" " "
' ' '
README readm README
' ' '
\ \ \
" " "
unpacked unpack unpack
with with with
wrong wrong wrong
size size size
! ! !
fi fi fi
# # #
end end end
of of of
' ' '
README readm README
' ' '
fi fi fi
if if if
test test test
- - -
f f f
' ' '
Imakefile imakefil Imakefile
' ' '
- - -
a a a
" " "
$ $ $
{ { {
1 1 1
} } }
" " "
! ! !
= = =
" " "
- - -
c c c
" " "
; ; ;
then then then
echo echo echo
shar shar shar
: : :
Will will Will
not not not
clobber clobber clobber
existing exist exist
file file file
\ \ \
" " "
' ' '
Imakefile imakefil Imakefile
' ' '
\ \ \
" " "
else els else
echo echo echo
shar shar shar
: : :
Extracting extract Extracting
\ \ \
" " "
' ' '
Imakefile imakefil Imakefile
' ' '
\ \ \
" " "
\ \ \
( ( (
370 370 370
characters charact character
\ \ \
) ) )
sed sed sed
" " "
s s s
/ / /
^ ^ ^
X x X
/ / /
/ / /
" " "
> > >
' ' '
Imakefile imakefil Imakefile
' ' '
< < <
< < <
' ' '
END end END
_ _ _
OF of OF
_ _ _
FILE file FILE
' ' '
X x X
# # #
Glasgow glasgow Glasgow
RX rx RX
Imakefile imakefil Imakefile
. . .
X x X
X x X
PROGRAMS program PROGRAMS
= = =
rx rx rx
X x X
Xall xall Xall
: : :
: : :
$ $ $
( ( (
PROGRAMS program PROGRAMS
) ) )
X x X
Xinstall xinstal Xinstall
: : :
: : :
safe safe safe
X x X
XInstallNamedProg xinstallnamedprog XInstallNamedProg
( ( (
rx rx rx
. . .
pl pl pl
, , ,
rx rx rx
, , ,
$ $ $
( ( (
BINDIR bindir BINDIR
) ) )
) ) )
XInstallManPage xinstallmanpag XInstallManPage
( ( (
rx rx rx
, , ,
$ $ $
( ( (
MANDIR mandir MANDIR
) ) )
) ) )
X x X
Xinstall xinstal Xinstall
: : :
: : :
X x X
$ $ $
( ( (
RM rm RM
) ) )
$ $ $
( ( (
BINDIR bindir BINDIR
) ) )
/ / /
rxterm rxterm rxterm
X x X
$ $ $
( ( (
LN ln LN
) ) )
$ $ $
( ( (
BINDIR bindir BINDIR
) ) )
/ / /
rx rx rx
$ $ $
( ( (
BINDIR bindir BINDIR
) ) )
/ / /
rxterm rxterm rxterm
X x X
Xsafe xsafe Xsafe
: : :
X x X
@ @ @
grep grep grep
- - -
s s s
' ' '
debug debug debug
= = =
0 0 0
' ' '
rx rx rx
. . .
pl pl pl
| | |
| | |
false fals false
X x X
Xshar xshar Xshar
: : :
safe safe safe
X x X
makekit makekit makekit
- - -
m m m
- - -
p p p
X x X
@ @ @
- - -
perl perl perl
- - -
pi pi pi
- - -
e e e
" " "
s s s
/ / /
sinclair sinclair sinclair
@ @ @
dcs dcs dc
. . .
gla gla gla
. . .
ac ac ac
. . .
uk uk uk
/ / /
sinclair sinclair sinclair
@ @ @
dcs dcs dc
. . .
gla gla gla
. . .
ac ac ac
. . .
uk uk uk
/ / /
; ; ;
" " "
Part part Part
* * *
X x X
END end END
_ _ _
OF of OF
_ _ _
FILE file FILE
if if if
test test test
370 370 370
- - -
ne ne ne
` ` `
wc wc wc
- - -
c c c
< < <
' ' '
Imakefile imakefil Imakefile
' ' '
` ` `
; ; ;
then then then
echo echo echo
shar shar shar
: : :
\ \ \
" " "
' ' '
Imakefile imakefil Imakefile
' ' '
\ \ \
" " "
unpacked unpack unpack
with with with
wrong wrong wrong
size size size
! ! !
fi fi fi
# # #
end end end
of of of
' ' '
Imakefile imakefil Imakefile
' ' '
fi fi fi
if if if
test test test
- - -
f f f
' ' '
MANIFEST manifest MANIFEST
' ' '
- - -
a a a
" " "
$ $ $
{ { {
1 1 1
} } }
" " "
! ! !
= = =
" " "
- - -
c c c
" " "
; ; ;
then then then
echo echo echo
shar shar shar
: : :
Will will Will
not not not
clobber clobber clobber
existing exist exist
file file file
\ \ \
" " "
' ' '
MANIFEST manifest MANIFEST
' ' '
\ \ \
" " "
else els else
echo echo echo
shar shar shar
: : :
Extracting extract Extracting
\ \ \
" " "
' ' '
MANIFEST manifest MANIFEST
' ' '
\ \ \
" " "
\ \ \
( ( (
313 313 313
characters charact character
\ \ \
) ) )
sed sed sed
" " "
s s s
/ / /
^ ^ ^
X x X
/ / /
/ / /
" " "
> > >
' ' '
MANIFEST manifest MANIFEST
' ' '
< < <
< < <
' ' '
END end END
_ _ _
OF of OF
_ _ _
FILE file FILE
' ' '
X x X
File file File
Name name Name
Archive archiv Archive
# # #
Description descript Description
X x X
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
X x X
README readm README
1 1 1
Read read Read
me me me
first first first
X x X
Imakefile imakefil Imakefile
1 1 1
X x X
MANIFEST manifest MANIFEST
1 1 1
This this This
shipping ship shipping
list list list
X x X
Makefile makefil Makefile
1 1 1
X x X
rx rx rx
. . .
man man man
1 1 1
X x X
rx rx rx
. . .
pl pl pl
1 1 1
END end END
_ _ _
OF of OF
_ _ _
FILE file FILE
if if if
test test test
313 313 313
- - -
ne ne ne
` ` `
wc wc wc
- - -
c c c
< < <
' ' '
MANIFEST manifest MANIFEST
' ' '
` ` `
; ; ;
then then then
echo echo echo
shar shar shar
: : :
\ \ \
" " "
' ' '
MANIFEST manifest MANIFEST
' ' '
\ \ \
" " "
unpacked unpack unpack
with with with
wrong wrong wrong
size size size
! ! !
fi fi fi
# # #
end end end
of of of
' ' '
MANIFEST manifest MANIFEST
' ' '
fi fi fi
if if if
test test test
- - -
f f f
' ' '
Makefile makefil Makefile
' ' '
- - -
a a a
" " "
$ $ $
{ { {
1 1 1
} } }
" " "
! ! !
= = =
" " "
- - -
c c c
" " "
; ; ;
then then then
echo echo echo
shar shar shar
: : :
Will will Will
not not not
clobber clobber clobber
existing exist exist
file file file
\ \ \
" " "
' ' '
Makefile makefil Makefile
' ' '
\ \ \
" " "
else els else
echo echo echo
shar shar shar
: : :
Extracting extract Extracting
\ \ \
" " "
' ' '
Makefile makefil Makefile
' ' '
\ \ \
" " "
\ \ \
( ( (
10172 10172 10172
characters charact character
\ \ \
) ) )
sed sed sed
" " "
s s s
/ / /
^ ^ ^
X x X
/ / /
/ / /
" " "
> > >
' ' '
Makefile makefil Makefile
' ' '
< < <
< < <
' ' '
END end END
_ _ _
OF of OF
_ _ _
FILE file FILE
' ' '
X x X
# # #
Makefile makefil Makefile
generated generat generate
by by by
imake imak imake
- - -
do do do
not not not
edit edit edit
! ! !
X x X
# # #
$ $ $
XConsortium xconsortium XConsortium
: : :
imake imak imake
. . .
c c c
, , ,
v v v
1 1 1
. . .
65 65 65
91 91 91
/ / /
07 07 07
/ / /
25 25 25
17 17 17
: : :
50 50 50
: : :
17 17 17
rws rws rws
Exp exp Exp
$ $ $
X x X
# # #
X x X
# # #
The the The
cpp cpp cpp
used use use
on on on
this this this
machine machin machine
replaces replac replace
all all all
newlines newlin newlines
and and and
multiple multipl multiple
tabs tab tab
and and and
X x X
# # #
spaces space space
in in in
a a a
macro macro macro
expansion expans expansion
with with with
a a a
single singl single
space space space
. . .
Imake imak Imake
tries tri try
to to to
compensate compens compensate
X x X
# # #
for for for
this this this
, , ,
but but but
is is be
not not not
always alway always
successful success successful
. . .
X x X
# # #
X x X
X x X
# # #
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
X x X
# # #
Makefile makefil Makefile
generated generat generate
from from from
" " "
Imake imak Imake
. . .
tmpl tmpl tmpl
" " "
and and and
< < <
/ / /
tmp tmp tmp
/ / /
IIf iif IIf
. . .
a a a
04196 04196 04196
> > >
X x X
# # #
$ $ $
XConsortium xconsortium XConsortium
: : :
Imake imak Imake
. . .
tmpl tmpl tmpl
, , ,
v v v
1 1 1
. . .
139 139 139
91 91 91
/ / /
09 09 09
/ / /
16 16 16
08 08 08
: : :
52 52 52
: : :
48 48 48
rws rws rws
Exp exp Exp
$ $ $
X x X
# # #
X x X
# # #
Platform platform Platform
- - -
specific specif specific
parameters paramet parameter
may may may
be be be
set set set
in in in
the the the
appropriate appropri appropriate
< < <
vendor vendor vendor
> > >
. . .
cf cf cf
X x X
# # #
configuration configur configuration
files file file
. . .
Site site Site
- - -
specific specif specific
parameters paramet parameter
should should should
be be be
set set set
in in in
the the the
file file file
X x X
# # #
site site site
. . .
def def def
. . .
Full full Full
rebuilds rebuild rebuilds
are are be
recommended recommend recommend
if if if
any ani any
parameters paramet parameter
are are be
changed chang change
. . .
X x X
# # #
X x X
# # #
If if If
your your your
C c C
preprocessor preprocessor preprocessor
does doe do
not not not
define defin define
any ani any
unique uniqu unique
symbols symbol symbol
, , ,
you you you
will will will
need need need
X x X
# # #
to to to
set set set
BOOTSTRAPCFLAGS bootstrapcflag BOOTSTRAPCFLAGS
when when when
rebuilding rebuild rebuild
imake imak imake
( ( (
usually usual usually
when when when
doing do do
X x X
# # #
" " "
make make make
World world World
" " "
the the the
first first first
time time time
) ) )
. . .
X x X
# # #
X x X
X x X
# # #
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
X x X
# # #
site site site
- - -
specific specif specific
configuration configur configuration
parameters paramet parameter
that that that
need need need
to to to
come come come
before befor before
X x X
# # #
the the the
platform platform platform
- - -
specific specif specific
parameters paramet parameter
- - -
edit edit edit
site site site
. . .
def def def
to to to
change chang change
X x X
X x X
# # #
site site site
: : :
$ $ $
XConsortium xconsortium XConsortium
: : :
site site site
. . .
def def def
, , ,
v v v
1 1 1
. . .
2 2 2
91 91 91
/ / /
07 07 07
/ / /
30 30 30
20 20 20
: : :
26 26 26
: : :
44 44 44
rws rws rws
Exp exp Exp
$ $ $
X x X
X x X
# # #
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
X x X
# # #
platform platform platform
- - -
specific specif specific
configuration configur configuration
parameters paramet parameter
- - -
edit edit edit
sun sun sun
. . .
cf cf cf
to to to
change chang change
X x X
X x X
# # #
platform platform platform
: : :
$ $ $
XConsortium xconsortium XConsortium
: : :
sun sun sun
. . .
cf cf cf
, , ,
v v v
1 1 1
. . .
72 72 72
. . .
1 1 1
. . .
1 1 1
92 92 92
/ / /
03 03 03
/ / /
18 18 18
13 13 13
: : :
13 13 13
: : :
37 37 37
rws rws rws
Exp exp Exp
$ $ $
X x X
X x X
# # #
operating oper operate
system system system
: : :
SunOS suno SunOS
4 4 4
. . .
1 1 1
. . .
3 3 3
X x X
X x X
# # #
$ $ $
XConsortium xconsortium XConsortium
: : :
sunLib sunlib sunLib
. . .
rules rule rule
, , ,
v v v
1 1 1
. . .
7 7 7
91 91 91
/ / /
12 12 12
/ / /
20 20 20
11 11 11
: : :
19 19 19
: : :
47 47 47
rws rws rws
Exp exp Exp
$ $ $
X x X
X x X
# # #
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
X x X
# # #
site site site
- - -
specific specif specific
configuration configur configuration
parameters paramet parameter
that that that
go go go
after after after
X x X
# # #
the the the
platform platform platform
- - -
specific specif specific
parameters paramet parameter
- - -
edit edit edit
site site site
. . .
def def def
to to to
change chang change
X x X
X x X
# # #
site site site
: : :
$ $ $
XConsortium xconsortium XConsortium
: : :
site site site
. . .
def def def
, , ,
v v v
1 1 1
. . .
2 2 2
91 91 91
/ / /
07 07 07
/ / /
30 30 30
20 20 20
: : :
26 26 26
: : :
44 44 44
rws rws rws
Exp exp Exp
$ $ $
X x X
X x X
SHELL shell SHELL
= = =
/ / /
bin bin bin
/ / /
sh sh sh
X x X
X x X
TOP top TOP
= = =
. . .
X x X
CURRENT current CURRENT
_ _ _
DIR dir DIR
= = =
. . .
X x X
X x X
AR ar AR
= = =
ar ar ar
cq cq cq
X x X
BOOTSTRAPCFLAGS bootstrapcflag BOOTSTRAPCFLAGS
= = =
X x X
CC cc CC
= = =
gcc gcc gcc
- - -
fpcc fpcc fpcc
- - -
struct struct struct
- - -
return return return
X x X
AS as AS
= = =
as as a
X x X
X x X
COMPRESS compress COMPRESS
= = =
compress compress compress
X x X
CPP cpp CPP
= = =
/ / /
lib lib lib
/ / /
cpp cpp cpp
$ $ $
( ( (
STD std STD
_ _ _
CPP cpp CPP
_ _ _
DEFINES defin DEFINES
) ) )
X x X
PREPROCESSCMD preprocesscmd PREPROCESSCMD
= = =
gcc gcc gcc
- - -
fpcc fpcc fpcc
- - -
struct struct struct
- - -
return return return
- - -
E e E
$ $ $
( ( (
STD std STD
_ _ _
CPP cpp CPP
_ _ _
DEFINES defin DEFINES
) ) )
X x X
INSTALL instal INSTALL
= = =
install instal install
X x X
LD ld LD
= = =
ld ld ld
X x X
LINT lint LINT
= = =
lint lint lint
X x X
LINTLIBFLAG lintlibflag LINTLIBFLAG
= = =
- - -
C c C
X x X
LINTOPTS lintopt LINTOPTS
= = =
- - -
axz axz axz
X x X
LN ln LN
= = =
ln ln ln
- - -
s s s
X x X
MAKE make MAKE
= = =
make make make
X x X
MV mv MV
= = =
mv mv mv
X x X
CP cp CP
= = =
cp cp cp
X x X
X x X
RANLIB ranlib RANLIB
= = =
ranlib ranlib ranlib
X x X
RANLIBINSTFLAGS ranlibinstflag RANLIBINSTFLAGS
= = =
X x X
X x X
RM rm RM
= = =
rm rm rm
- - -
f f f
X x X
TROFF troff TROFF
= = =
psroff psroff psroff
X x X
MSMACROS msmacro MSMACROS
= = =
- - -
ms ms m
X x X
TBL tbl TBL
= = =
tbl tbl tbl
X x X
EQN eqn EQN
= = =
eqn eqn eqn
X x X
STD std STD
_ _ _
INCLUDES includ INCLUDES
= = =
X x X
STD std STD
_ _ _
CPP cpp CPP
_ _ _
DEFINES defin DEFINES
= = =
X x X
STD std STD
_ _ _
DEFINES defin DEFINES
= = =
X x X
EXTRA extra EXTRA
_ _ _
LOAD load LOAD
_ _ _
FLAGS flag FLAGS
= = =
X x X
EXTRA extra EXTRA
_ _ _
LIBRARIES librari LIBRARIES
= = =
X x X
TAGS tag TAGS
= = =
ctags ctag ctags
X x X
X x X
SHAREDCODEDEF sharedcodedef SHAREDCODEDEF
= = =
- - -
DSHAREDCODE dsharedcod DSHAREDCODE
X x X
SHLIBDEF shlibdef SHLIBDEF
= = =
- - -
DSUNSHLIB dsunshlib DSUNSHLIB
X x X
X x X
PROTO proto PROTO
_ _ _
DEFINES defin DEFINES
= = =
X x X
X x X
INSTPGMFLAGS instpgmflag INSTPGMFLAGS
= = =
X x X
X x X
INSTBINFLAGS instbinflag INSTBINFLAGS
= = =
- - -
m m m
0755 0755 0755
X x X
INSTUIDFLAGS instuidflag INSTUIDFLAGS
= = =
- - -
m m m
4755 4755 4755
X x X
INSTLIBFLAGS instlibflag INSTLIBFLAGS
= = =
- - -
m m m
0644 0644 0644
X x X
INSTINCFLAGS instincflag INSTINCFLAGS
= = =
- - -
m m m
0444 0444 0444
X x X
INSTMANFLAGS instmanflag INSTMANFLAGS
= = =
- - -
m m m
0444 0444 0444
X x X
INSTDATFLAGS instdatflag INSTDATFLAGS
= = =
- - -
m m m
0444 0444 0444
X x X
INSTKMEMFLAGS instkmemflag INSTKMEMFLAGS
= = =
- - -
g g g
kmem kmem kmem
- - -
m m m
2755 2755 2755
X x X
X x X
PROJECTROOT projectroot PROJECTROOT
= = =
/ / /
usr usr usr
/ / /
X x X
11 11 11
X x X
X x X
TOP top TOP
_ _ _
INCLUDES includ INCLUDES
= = =
- - -
I i I
$ $ $
( ( (
INCROOT incroot INCROOT
) ) )
X x X
X x X
CDEBUGFLAGS cdebugflag CDEBUGFLAGS
= = =
- - -
O o O
2 2 2
X x X
CCOPTIONS ccoption CCOPTIONS
= = =
X x X
X x X
ALLINCLUDES allinclud ALLINCLUDES
= = =
$ $ $
( ( (
INCLUDES includ INCLUDES
) ) )
$ $ $
( ( (
EXTRA extra EXTRA
_ _ _
INCLUDES includ INCLUDES
) ) )
$ $ $
( ( (
TOP top TOP
_ _ _
INCLUDES includ INCLUDES
) ) )
$ $ $
( ( (
STD std STD
_ _ _
INCLUDES includ INCLUDES
) ) )
X x X
ALLDEFINES alldefin ALLDEFINES
= = =
$ $ $
( ( (
ALLINCLUDES allinclud ALLINCLUDES
) ) )
$ $ $
( ( (
STD std STD
_ _ _
DEFINES defin DEFINES
) ) )
$ $ $
( ( (
EXTRA extra EXTRA
_ _ _
DEFINES defin DEFINES
) ) )
$ $ $
( ( (
PROTO proto PROTO
_ _ _
DEFINES defin DEFINES
) ) )
$ $ $
( ( (
DEFINES defin DEFINES
) ) )
X x X
CFLAGS cflag CFLAGS
= = =
$ $ $
( ( (
CDEBUGFLAGS cdebugflag CDEBUGFLAGS
) ) )
$ $ $
( ( (
CCOPTIONS ccoption CCOPTIONS
) ) )
$ $ $
( ( (
ALLDEFINES alldefin ALLDEFINES
) ) )
X x X
LINTFLAGS lintflag LINTFLAGS
= = =
$ $ $
( ( (
LINTOPTS lintopt LINTOPTS
) ) )
- - -
DLINT dlint DLINT
$ $ $
( ( (
ALLDEFINES alldefin ALLDEFINES
) ) )
X x X
X x X
LDLIBS ldlib LDLIBS
= = =
$ $ $
( ( (
SYS sys SYS
_ _ _
LIBRARIES librari LIBRARIES
) ) )
$ $ $
( ( (
EXTRA extra EXTRA
_ _ _
LIBRARIES librari LIBRARIES
) ) )
X x X
X x X
LDOPTIONS ldoption LDOPTIONS
= = =
$ $ $
( ( (
CDEBUGFLAGS cdebugflag CDEBUGFLAGS
) ) )
$ $ $
( ( (
CCOPTIONS ccoption CCOPTIONS
) ) )
$ $ $
( ( (
LOCAL local LOCAL
_ _ _
LDFLAGS ldflag LDFLAGS
) ) )
- - -
L l L
$ $ $
( ( (
USRLIBDIR usrlibdir USRLIBDIR
) ) )
X x X
X x X
LDCOMBINEFLAGS ldcombineflag LDCOMBINEFLAGS
= = =
- - -
X x X
- - -
r r r
X x X
DEPENDFLAGS dependflag DEPENDFLAGS
= = =
X x X
X x X
MACROFILE macrofil MACROFILE
= = =
sun sun sun
. . .
cf cf cf
X x X
RM rm RM
_ _ _
CMD cmd CMD
= = =
$ $ $
( ( (
RM rm RM
) ) )
* * *
. . .
CKP ckp CKP
* * *
. . .
ln ln ln
* * *
. . .
BAK bak BAK
* * *
. . .
bak bak bak
* * *
. . .
o o o
core core core
errs err errs
, , ,
* * *
* * *
~ ~ ~
* * *
. . .
a a a
. . .
emacs emac emacs
_ _ _
* * *
tags tag tag
TAGS tag TAGS
make make make
. . .
log log log
MakeOut makeout MakeOut
X x X
X x X
IMAKE imak IMAKE
_ _ _
DEFINES defin DEFINES
= = =
X x X
X x X
IRULESRC irulesrc IRULESRC
= = =
$ $ $
( ( (
CONFIGDIR configdir CONFIGDIR
) ) )
X x X
IMAKE imak IMAKE
_ _ _
CMD cmd CMD
= = =
$ $ $
( ( (
IMAKE imak IMAKE
) ) )
- - -
DUseInstalled duseinstal DUseInstalled
- - -
I i I
$ $ $
( ( (
IRULESRC irulesrc IRULESRC
) ) )
$ $ $
( ( (
IMAKE imak IMAKE
_ _ _
DEFINES defin DEFINES
) ) )
X x X
X x X
ICONFIGFILES iconfigfil ICONFIGFILES
= = =
$ $ $
( ( (
IRULESRC irulesrc IRULESRC
) ) )
/ / /
Imake imak Imake
. . .
tmpl tmpl tmpl
$ $ $
( ( (
IRULESRC irulesrc IRULESRC
) ) )
/ / /
Imake imak Imake
. . .
rules rule rule
\ \ \
X x X
$ $ $
( ( (
IRULESRC irulesrc IRULESRC
) ) )
/ / /
Project project Project
. . .
tmpl tmpl tmpl
$ $ $
( ( (
IRULESRC irulesrc IRULESRC
) ) )
/ / /
site site site
. . .
def def def
\ \ \
X x X
$ $ $
( ( (
IRULESRC irulesrc IRULESRC
) ) )
/ / /
$ $ $
( ( (
MACROFILE macrofil MACROFILE
) ) )
$ $ $
( ( (
EXTRA extra EXTRA
_ _ _
ICONFIGFILES iconfigfil ICONFIGFILES
) ) )
X x X
X x X
# # #
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
X x X
# # #
X x X
Window window Window
System system System
Build build Build
Parameters paramet Parameters
X x X
# # #
$ $ $
XConsortium xconsortium XConsortium
: : :
Project project Project
. . .
tmpl tmpl tmpl
, , ,
v v v
1 1 1
. . .
138 138 138
. . .
1 1 1
. . .
1 1 1
92 92 92
/ / /
11 11 11
/ / /
11 11 11
09 09 09
: : :
49 49 49
: : :
19 19 19
rws rws rws
Exp exp Exp
$ $ $
X x X
X x X
# # #
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
X x X
# # #
X x X
Window window Window
System system System
make make make
variables variabl variable
; ; ;
this this this
need need need
to to to
be be be
coordinated coordin coordinate
with with with
rules rule rule
X x X
X x X
PATHSEP pathsep PATHSEP
= = =
/ / /
X x X
USRLIBDIR usrlibdir USRLIBDIR
= = =
/ / /
usr usr usr
/ / /
X x X
11 11 11
/ / /
lib lib lib
X x X
BINDIR bindir BINDIR
= = =
/ / /
usr usr usr
/ / /
X x X
11 11 11
/ / /
local local local
/ / /
bin bin bin
X x X
INCROOT incroot INCROOT
= = =
/ / /
usr usr usr
/ / /
X x X
11 11 11
/ / /
include includ include
X x X
BUILDINCROOT buildincroot BUILDINCROOT
= = =
$ $ $
( ( (
TOP top TOP
) ) )
X x X
BUILDINCDIR buildincdir BUILDINCDIR
= = =
$ $ $
( ( (
BUILDINCROOT buildincroot BUILDINCROOT
) ) )
/ / /
X x X
11 11 11
X x X
BUILDINCTOP buildinctop BUILDINCTOP
= = =
. . .
. . .
X x X
INCDIR incdir INCDIR
= = =
$ $ $
( ( (
INCROOT incroot INCROOT
) ) )
/ / /
X x X
11 11 11
X x X
ADMDIR admdir ADMDIR
= = =
/ / /
usr usr usr
/ / /
adm adm adm
X x X
LIBDIR libdir LIBDIR
= = =
$ $ $
( ( (
USRLIBDIR usrlibdir USRLIBDIR
) ) )
/ / /
X x X
11 11 11
X x X
CONFIGDIR configdir CONFIGDIR
= = =
$ $ $
( ( (
LIBDIR libdir LIBDIR
) ) )
/ / /
config config config
X x X
LINTLIBDIR lintlibdir LINTLIBDIR
= = =
$ $ $
( ( (
USRLIBDIR usrlibdir USRLIBDIR
) ) )
/ / /
lint lint lint
X x X
X x X
FONTDIR fontdir FONTDIR
= = =
$ $ $
( ( (
LIBDIR libdir LIBDIR
) ) )
/ / /
fonts font font
X x X
XINITDIR xinitdir XINITDIR
= = =
$ $ $
( ( (
LIBDIR libdir LIBDIR
) ) )
/ / /
xinit xinit xinit
X x X
XDMDIR xdmdir XDMDIR
= = =
$ $ $
( ( (
LIBDIR libdir LIBDIR
) ) )
/ / /
xdm xdm xdm
X x X
TWMDIR twmdir TWMDIR
= = =
$ $ $
( ( (
LIBDIR libdir LIBDIR
) ) )
/ / /
twm twm twm
X x X
MANPATH manpath MANPATH
= = =
/ / /
usr usr usr
/ / /
X x X
11 11 11
/ / /
man man man
X x X
MANSOURCEPATH mansourcepath MANSOURCEPATH
= = =
$ $ $
( ( (
MANPATH manpath MANPATH
) ) )
/ / /
man man man
X x X
MANSUFFIX mansuffix MANSUFFIX
= = =
n n n
X x X
LIBMANSUFFIX libmansuffix LIBMANSUFFIX
= = =
3 3 3
X x X
MANDIR mandir MANDIR
= = =
$ $ $
( ( (
MANSOURCEPATH mansourcepath MANSOURCEPATH
) ) )
$ $ $
( ( (
MANSUFFIX mansuffix MANSUFFIX
) ) )
X x X
LIBMANDIR libmandir LIBMANDIR
= = =
$ $ $
( ( (
MANSOURCEPATH mansourcepath MANSOURCEPATH
) ) )
$ $ $
( ( (
LIBMANSUFFIX libmansuffix LIBMANSUFFIX
) ) )
X x X
NLSDIR nlsdir NLSDIR
= = =
$ $ $
( ( (
LIBDIR libdir LIBDIR
) ) )
/ / /
nls nls nls
X x X
PEXAPIDIR pexapidir PEXAPIDIR
= = =
$ $ $
( ( (
LIBDIR libdir LIBDIR
) ) )
/ / /
PEX pex PEX
X x X
XAPPLOADDIR xapploaddir XAPPLOADDIR
= = =
$ $ $
( ( (
LIBDIR libdir LIBDIR
) ) )
/ / /
app app app
- - -
defaults default default
X x X
FONTCFLAGS fontcflag FONTCFLAGS
= = =
- - -
t t t
X x X
X x X
INSTAPPFLAGS instappflag INSTAPPFLAGS
= = =
$ $ $
( ( (
INSTDATFLAGS instdatflag INSTDATFLAGS
) ) )
X x X
X x X
IMAKE imak IMAKE
= = =
imake imak imake
X x X
DEPEND depend DEPEND
= = =
makedepend makedepend makedepend
X x X
RGB rgb RGB
= = =
rgb rgb rgb
X x X
X x X
FONTC fontc FONTC
= = =
bdftopcf bdftopcf bdftopcf
X x X
X x X
MKFONTDIR mkfontdir MKFONTDIR
= = =
mkfontdir mkfontdir mkfontdir
X x X
MKDIRHIER mkdirhier MKDIRHIER
= = =
/ / /
bin bin bin
/ / /
sh sh sh
$ $ $
( ( (
BINDIR bindir BINDIR
) ) )
/ / /
mkdirhier mkdirhier mkdirhier
X x X
X x X
CONFIGSRC configsrc CONFIGSRC
= = =
$ $ $
( ( (
TOP top TOP
) ) )
/ / /
config config config
X x X
DOCUTILSRC docutilsrc DOCUTILSRC
= = =
$ $ $
( ( (
TOP top TOP
) ) )
/ / /
doc doc doc
/ / /
util util util
X x X
CLIENTSRC clientsrc CLIENTSRC
= = =
$ $ $
( ( (
TOP top TOP
) ) )
/ / /
clients client client
X x X
DEMOSRC demosrc DEMOSRC
= = =
$ $ $
( ( (
TOP top TOP
) ) )
/ / /
demos demo demos
X x X
LIBSRC libsrc LIBSRC
= = =
$ $ $
( ( (
TOP top TOP
) ) )
/ / /
lib lib lib
X x X
FONTSRC fontsrc FONTSRC
= = =
$ $ $
( ( (
TOP top TOP
) ) )
/ / /
fonts font font
X x X
INCLUDESRC includesrc INCLUDESRC
= = =
$ $ $
( ( (
TOP top TOP
) ) )
/ / /
X x X
11 11 11
X x X
SERVERSRC serversrc SERVERSRC
= = =
$ $ $
( ( (
TOP top TOP
) ) )
/ / /
server server server
X x X
UTILSRC utilsrc UTILSRC
= = =
$ $ $
( ( (
TOP top TOP
) ) )
/ / /
util util util
X x X
SCRIPTSRC scriptsrc SCRIPTSRC
= = =
$ $ $
( ( (
UTILSRC utilsrc UTILSRC
) ) )
/ / /
scripts script script
X x X
EXAMPLESRC examplesrc EXAMPLESRC
= = =
$ $ $
( ( (
TOP top TOP
) ) )
/ / /
examples exampl example
X x X
CONTRIBSRC contribsrc CONTRIBSRC
= = =
$ $ $
( ( (
TOP top TOP
) ) )
/ / /
. . .
. . .
/ / /
contrib contrib contrib
X x X
DOCSRC docsrc DOCSRC
= = =
$ $ $
( ( (
TOP top TOP
) ) )
/ / /
doc doc doc
X x X
RGBSRC rgbsrc RGBSRC
= = =
$ $ $
( ( (
TOP top TOP
) ) )
/ / /
rgb rgb rgb
X x X
DEPENDSRC dependsrc DEPENDSRC
= = =
$ $ $
( ( (
UTILSRC utilsrc UTILSRC
) ) )
/ / /
makedepend makedepend makedepend
X x X
IMAKESRC imakesrc IMAKESRC
= = =
$ $ $
( ( (
CONFIGSRC configsrc CONFIGSRC
) ) )
X x X
XAUTHSRC xauthsrc XAUTHSRC
= = =
$ $ $
( ( (
LIBSRC libsrc LIBSRC
) ) )
/ / /
Xau xau Xau
X x X
XLIBSRC xlibsrc XLIBSRC
= = =
$ $ $
( ( (
LIBSRC libsrc LIBSRC
) ) )
/ / /
X x X
X x X
XMUSRC xmusrc XMUSRC
= = =
$ $ $
( ( (
LIBSRC libsrc LIBSRC
) ) )
/ / /
Xmu xmu Xmu
X x X
TOOLKITSRC toolkitsrc TOOLKITSRC
= = =
$ $ $
( ( (
LIBSRC libsrc LIBSRC
) ) )
/ / /
Xt xt Xt
X x X
AWIDGETSRC awidgetsrc AWIDGETSRC
= = =
$ $ $
( ( (
LIBSRC libsrc LIBSRC
) ) )
/ / /
Xaw xaw Xaw
X x X
OLDXLIBSRC oldxlibsrc OLDXLIBSRC
= = =
$ $ $
( ( (
LIBSRC libsrc LIBSRC
) ) )
/ / /
oldX oldx oldX
X x X
XDMCPLIBSRC xdmcplibsrc XDMCPLIBSRC
= = =
$ $ $
( ( (
LIBSRC libsrc LIBSRC
) ) )
/ / /
Xdmcp xdmcp Xdmcp
X x X
BDFTOSNFSRC bdftosnfsrc BDFTOSNFSRC
= = =
$ $ $
( ( (
FONTSRC fontsrc FONTSRC
) ) )
/ / /
bdftosnf bdftosnf bdftosnf
X x X
BDFTOSNFSRC bdftosnfsrc BDFTOSNFSRC
= = =
$ $ $
( ( (
FONTSRC fontsrc FONTSRC
) ) )
/ / /
clients client client
/ / /
bdftosnf bdftosnf bdftosnf
X x X
BDFTOPCFSRC bdftopcfsrc BDFTOPCFSRC
= = =
$ $ $
( ( (
FONTSRC fontsrc FONTSRC
) ) )
/ / /
clients client client
/ / /
bdftopcf bdftopcf bdftopcf
X x X
MKFONTDIRSRC mkfontdirsrc MKFONTDIRSRC
= = =
$ $ $
( ( (
FONTSRC fontsrc FONTSRC
) ) )
/ / /
clients client client
/ / /
mkfontdir mkfontdir mkfontdir
X x X
FSLIBSRC fslibsrc FSLIBSRC
= = =
$ $ $
( ( (
FONTSRC fontsrc FONTSRC
) ) )
/ / /
lib lib lib
/ / /
fs fs f
X x X
FONTSERVERSRC fontserversrc FONTSERVERSRC
= = =
$ $ $
( ( (
FONTSRC fontsrc FONTSRC
) ) )
/ / /
server server server
X x X
EXTENSIONSRC extensionsrc EXTENSIONSRC
= = =
$ $ $
( ( (
TOP top TOP
) ) )
/ / /
extensions extens extension
X x X
XILIBSRC xilibsrc XILIBSRC
= = =
$ $ $
( ( (
EXTENSIONSRC extensionsrc EXTENSIONSRC
) ) )
/ / /
lib lib lib
/ / /
xinput xinput xinput
X x X
PEXLIBSRC pexlibsrc PEXLIBSRC
= = =
$ $ $
( ( (
EXTENSIONSRC extensionsrc EXTENSIONSRC
) ) )
/ / /
lib lib lib
/ / /
PEXlib pexlib PEXlib
X x X
PHIGSLIBSRC phigslibsrc PHIGSLIBSRC
= = =
$ $ $
( ( (
EXTENSIONSRC extensionsrc EXTENSIONSRC
) ) )
/ / /
lib lib lib
/ / /
PEX pex PEX
X x X
X x X
# # #
$ $ $
XConsortium xconsortium XConsortium
: : :
sunLib sunlib sunLib
. . .
tmpl tmpl tmpl
, , ,
v v v
1 1 1
. . .
14 14 14
. . .
1 1 1
. . .
2 2 2
92 92 92
/ / /
11 11 11
/ / /
11 11 11
09 09 09
: : :
55 55 55
: : :
02 02 02
rws rws rws
Exp exp Exp
$ $ $
X x X
XSHLIBLDFLAGS xshlibldflag XSHLIBLDFLAGS
= = =
- - -
assert assert assert
pure pure pure
- - -
text text text
XPICFLAGS xpicflag XPICFLAGS
= = =
- - -
fpic fpic fpic
X x X
X x X
DEPEXTENSIONLIB depextensionlib DEPEXTENSIONLIB
= = =
X x X
EXTENSIONLIB extensionlib EXTENSIONLIB
= = =
- - -
lXext lxext lXext
X x X
X x X
DEPXLIB depxlib DEPXLIB
= = =
$ $ $
( ( (
DEPEXTENSIONLIB depextensionlib DEPEXTENSIONLIB
) ) )
X x X
XLIB xlib XLIB
= = =
$ $ $
( ( (
EXTENSIONLIB extensionlib EXTENSIONLIB
) ) )
- - -
lX lx lX
11 11 11
X x X
X x X
DEPXMULIB depxmulib DEPXMULIB
= = =
$ $ $
( ( (
USRLIBDIR usrlibdir USRLIBDIR
) ) )
/ / /
libXmu libxmu libXmu
. . .
sa sa sa
. . .
$ $ $
( ( (
SOXMUREV soxmurev SOXMUREV
) ) )
X x X
XMULIBONLY xmulibon XMULIBONLY
= = =
- - -
lXmu lxmu lXmu
X x X
XMULIB xmulib XMULIB
= = =
- - -
lXmu lxmu lXmu
X x X
X x X
DEPOLDXLIB depoldxlib DEPOLDXLIB
= = =
X x X
OLDXLIB oldxlib OLDXLIB
= = =
- - -
loldX loldx loldX
X x X
X x X
DEPXTOOLLIB depxtoollib DEPXTOOLLIB
= = =
$ $ $
( ( (
USRLIBDIR usrlibdir USRLIBDIR
) ) )
/ / /
libXt libxt libXt
. . .
sa sa sa
. . .
$ $ $
( ( (
SOXTREV soxtrev SOXTREV
) ) )
X x X
XTOOLLIB xtoollib XTOOLLIB
= = =
- - -
lXt lxt lXt
X x X
X x X
DEPXAWLIB depxawlib DEPXAWLIB
= = =
$ $ $
( ( (
USRLIBDIR usrlibdir USRLIBDIR
) ) )
/ / /
libXaw libxaw libXaw
. . .
sa sa sa
. . .
$ $ $
( ( (
SOXAWREV soxawrev SOXAWREV
) ) )
X x X
XAWLIB xawlib XAWLIB
= = =
- - -
lXaw lxaw lXaw
X x X
X x X
DEPXILIB depxilib DEPXILIB
= = =
X x X
XILIB xilib XILIB
= = =
- - -
lXi lxi lXi
X x X
X x X
DEPPEXLIB deppexlib DEPPEXLIB
= = =
X x X
PEXLIB pexlib PEXLIB
= = =
- - -
lPEX lpex lPEX
5 5 5
X x X
X x X
SOXLIBREV soxlibrev SOXLIBREV
= = =
4 4 4
. . .
10 10 10
X x X
SOXTREV soxtrev SOXTREV
= = =
4 4 4
. . .
10 10 10
X x X
SOXAWREV soxawrev SOXAWREV
= = =
5 5 5
. . .
0 0 0
X x X
SOOLDXREV sooldxrev SOOLDXREV
= = =
4 4 4
. . .
10 10 10
X x X
SOXMUREV soxmurev SOXMUREV
= = =
4 4 4
. . .
10 10 10
X x X
SOXEXTREV soxextrev SOXEXTREV
= = =
4 4 4
. . .
10 10 10
X x X
SOXINPUTREV soxinputrev SOXINPUTREV
= = =
4 4 4
. . .
10 10 10
X x X
SOPEXREV sopexrev SOPEXREV
= = =
1 1 1
. . .
0 0 0
X x X
X x X
DEPXAUTHLIB depxauthlib DEPXAUTHLIB
= = =
$ $ $
( ( (
USRLIBDIR usrlibdir USRLIBDIR
) ) )
/ / /
libXau libxau libXau
. . .
a a a
X x X
XAUTHLIB xauthlib XAUTHLIB
= = =
- - -
lXau lxau lXau
X x X
DEPXDMCPLIB depxdmcplib DEPXDMCPLIB
= = =
$ $ $
( ( (
USRLIBDIR usrlibdir USRLIBDIR
) ) )
/ / /
libXdmcp libxdmcp libXdmcp
. . .
a a a
X x X
XDMCPLIB xdmcplib XDMCPLIB
= = =
- - -
lXdmcp lxdmcp lXdmcp
X x X
X x X
DEPPHIGSLIB depphigslib DEPPHIGSLIB
= = =
$ $ $
( ( (
USRLIBDIR usrlibdir USRLIBDIR
) ) )
/ / /
libphigs libphig libphigs
. . .
a a a
X x X
PHIGSLIB phigslib PHIGSLIB
= = =
- - -
lphigs lphig lphigs
X x X
X x X
DEPXBSDLIB depxbsdlib DEPXBSDLIB
= = =
$ $ $
( ( (
USRLIBDIR usrlibdir USRLIBDIR
) ) )
/ / /
libXbsd libxbsd libXbsd
. . .
a a a
X x X
XBSDLIB xbsdlib XBSDLIB
= = =
- - -
lXbsd lxbsd lXbsd
X x X
X x X
LINTEXTENSIONLIB lintextensionlib LINTEXTENSIONLIB
= = =
$ $ $
( ( (
LINTLIBDIR lintlibdir LINTLIBDIR
) ) )
/ / /
llib llib llib
- - -
lXext lxext lXext
. . .
ln ln ln
X x X
LINTXLIB lintxlib LINTXLIB
= = =
$ $ $
( ( (
LINTLIBDIR lintlibdir LINTLIBDIR
) ) )
/ / /
llib llib llib
- - -
lX lx lX
11 11 11
. . .
ln ln ln
X x X
LINTXMU lintxmu LINTXMU
= = =
$ $ $
( ( (
LINTLIBDIR lintlibdir LINTLIBDIR
) ) )
/ / /
llib llib llib
- - -
lXmu lxmu lXmu
. . .
ln ln ln
X x X
LINTXTOOL lintxtool LINTXTOOL
= = =
$ $ $
( ( (
LINTLIBDIR lintlibdir LINTLIBDIR
) ) )
/ / /
llib llib llib
- - -
lXt lxt lXt
. . .
ln ln ln
X x X
LINTXAW lintxaw LINTXAW
= = =
$ $ $
( ( (
LINTLIBDIR lintlibdir LINTLIBDIR
) ) )
/ / /
llib llib llib
- - -
lXaw lxaw lXaw
. . .
ln ln ln
X x X
LINTXI lintxi LINTXI
= = =
$ $ $
( ( (
LINTLIBDIR lintlibdir LINTLIBDIR
) ) )
/ / /
llib llib llib
- - -
lXi lxi lXi
. . .
ln ln ln
X x X
LINTPEX lintpex LINTPEX
= = =
$ $ $
( ( (
LINTLIBDIR lintlibdir LINTLIBDIR
) ) )
/ / /
llib llib llib
- - -
lPEX lpex lPEX
5 5 5
. . .
ln ln ln
X x X
LINTPHIGS lintphig LINTPHIGS
= = =
$ $ $
( ( (
LINTLIBDIR lintlibdir LINTLIBDIR
) ) )
/ / /
llib llib llib
- - -
lphigs lphig lphigs
. . .
ln ln ln
X x X
X x X
DEPLIBS deplib DEPLIBS
= = =
$ $ $
( ( (
DEPXAWLIB depxawlib DEPXAWLIB
) ) )
$ $ $
( ( (
DEPXMULIB depxmulib DEPXMULIB
) ) )
$ $ $
( ( (
DEPXTOOLLIB depxtoollib DEPXTOOLLIB
) ) )
$ $ $
( ( (
DEPXLIB depxlib DEPXLIB
) ) )
X x X
X x X
DEPLIBS deplib DEPLIBS
1 1 1
= = =
$ $ $
( ( (
DEPLIBS deplib DEPLIBS
) ) )
X x X
DEPLIBS deplib DEPLIBS
2 2 2
= = =
$ $ $
( ( (
DEPLIBS deplib DEPLIBS
) ) )
X x X
DEPLIBS deplib DEPLIBS
3 3 3
= = =
$ $ $
( ( (
DEPLIBS deplib DEPLIBS
) ) )
X x X
X x X
# # #
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
X x X
# # #
Imake imak Imake
rules rule rule
for for for
building build building
libraries librari library
, , ,
programs program program
, , ,
scripts script script
, , ,
and and and
data data data
files file file
X x X
# # #
rules rule rule
: : :
$ $ $
XConsortium xconsortium XConsortium
: : :
Imake imak Imake
. . .
rules rule rule
, , ,
v v v
1 1 1
. . .
123 123 123
91 91 91
/ / /
09 09 09
/ / /
16 16 16
20 20 20
: : :
12 12 12
: : :
16 16 16
rws rws rws
Exp exp Exp
$ $ $
X x X
X x X
# # #
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
X x X
# # #
start start start
of of of
Imakefile imakefil Imakefile
X x X
X x X
# # #
Glasgow glasgow Glasgow
RX rx RX
Imakefile imakefil Imakefile
. . .
X x X
X x X
PROGRAMS program PROGRAMS
= = =
rx rx rx
X x X
Xall xall Xall
: : :
: : :
$ $ $
( ( (
PROGRAMS program PROGRAMS
) ) )
X x X
Xinstall xinstal Xinstall
: : :
: : :
safe safe safe
X x X
Xinstall xinstal Xinstall
: : :
: : :
rx rx rx
. . .
pl pl pl
X x X
@ @ @
if if if
[ [ [
- - -
d d d
$ $ $
( ( (
DESTDIR destdir DESTDIR
) ) )
$ $ $
( ( (
BINDIR bindir BINDIR
) ) )
] ] ]
; ; ;
then then then
set set set
+ + +
x x x
; ; ;
\ \ \
X x X
else els else
( ( (
set set set
- - -
x x x
; ; ;
$ $ $
( ( (
MKDIRHIER mkdirhier MKDIRHIER
) ) )
$ $ $
( ( (
DESTDIR destdir DESTDIR
) ) )
$ $ $
( ( (
BINDIR bindir BINDIR
) ) )
) ) )
; ; ;
fi fi fi
X x X
$ $ $
( ( (
INSTALL instal INSTALL
) ) )
- - -
c c c
$ $ $
( ( (
INSTBINFLAGS instbinflag INSTBINFLAGS
) ) )
rx rx rx
. . .
pl pl pl
$ $ $
( ( (
DESTDIR destdir DESTDIR
) ) )
$ $ $
( ( (
BINDIR bindir BINDIR
) ) )
/ / /
rx rx rx
X x X
Xinstall xinstal Xinstall
. . .
man man man
: : :
: : :
rx rx rx
. . .
man man man
X x X
@ @ @
if if if
[ [ [
- - -
d d d
$ $ $
( ( (
DESTDIR destdir DESTDIR
) ) )
$ $ $
( ( (
MANDIR mandir MANDIR
) ) )
] ] ]
; ; ;
then then then
set set set
+ + +
x x x
; ; ;
\ \ \
X x X
else els else
( ( (
set set set
- - -
x x x
; ; ;
$ $ $
( ( (
MKDIRHIER mkdirhier MKDIRHIER
) ) )
$ $ $
( ( (
DESTDIR destdir DESTDIR
) ) )
$ $ $
( ( (
MANDIR mandir MANDIR
) ) )
) ) )
; ; ;
fi fi fi
X x X
$ $ $
( ( (
INSTALL instal INSTALL
) ) )
- - -
c c c
$ $ $
( ( (
INSTMANFLAGS instmanflag INSTMANFLAGS
) ) )
rx rx rx
. . .
man man man
$ $ $
( ( (
DESTDIR destdir DESTDIR
) ) )
$ $ $
( ( (
MANDIR mandir MANDIR
) ) )
/ / /
rx rx rx
. . .
$ $ $
( ( (
MANSUFFIX mansuffix MANSUFFIX
) ) )
X x X
Xinstall xinstal Xinstall
: : :
: : :
X x X
$ $ $
( ( (
RM rm RM
) ) )
$ $ $
( ( (
BINDIR bindir BINDIR
) ) )
/ / /
rxterm rxterm rxterm
X x X
$ $ $
( ( (
LN ln LN
) ) )
$ $ $
( ( (
BINDIR bindir BINDIR
) ) )
/ / /
rx rx rx
$ $ $
( ( (
BINDIR bindir BINDIR
) ) )
/ / /
rxterm rxterm rxterm
X x X
Xsafe xsafe Xsafe
: : :
X x X
@ @ @
grep grep grep
- - -
s s s
' ' '
debug debug debug
= = =
0 0 0
' ' '
rx rx rx
. . .
pl pl pl
| | |
| | |
false fals false
X x X
Xshar xshar Xshar
: : :
safe safe safe
X x X
makekit makekit makekit
- - -
m m m
- - -
p p p
X x X
@ @ @
- - -
perl perl perl
- - -
pi pi pi
- - -
e e e
" " "
s s s
/ / /
sinclair sinclair sinclair
@ @ @
dcs dcs dc
. . .
gla gla gla
. . .
ac ac ac
. . .
uk uk uk
/ / /
sinclair sinclair sinclair
@ @ @
dcs dcs dc
. . .
gla gla gla
. . .
ac ac ac
. . .
uk uk uk
/ / /
; ; ;
" " "
Part part Part
* * *
X x X
X x X
# # #
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
X x X
# # #
common common common
rules rule rule
for for for
all all all
Makefiles makefil Makefiles
- - -
do do do
not not not
edit edit edit
X x X
Xemptyrule xemptyrul Xemptyrule
: : :
: : :
X x X
Xclean xclean Xclean
: : :
: : :
X x X
$ $ $
( ( (
RM rm RM
_ _ _
CMD cmd CMD
) ) )
" " "
# # #
" " "
* * *
X x X
XMakefile xmakefil XMakefile
: : :
: : :
X x X
- - -
@ @ @
if if if
[ [ [
- - -
f f f
Makefile makefil Makefile
] ] ]
; ; ;
then then then
set set set
- - -
x x x
; ; ;
\ \ \
X x X
$ $ $
( ( (
RM rm RM
) ) )
Makefile makefil Makefile
. . .
bak bak bak
; ; ;
$ $ $
( ( (
MV mv MV
) ) )
Makefile makefil Makefile
Makefile makefil Makefile
. . .
bak bak bak
; ; ;
\ \ \
X x X
else els else
exit exit exit
0 0 0
; ; ;
fi fi fi
X x X
$ $ $
( ( (
IMAKE imak IMAKE
_ _ _
CMD cmd CMD
) ) )
- - -
DTOPDIR dtopdir DTOPDIR
= = =
$ $ $
( ( (
TOP top TOP
) ) )
- - -
DCURDIR dcurdir DCURDIR
= = =
$ $ $
( ( (
CURRENT current CURRENT
_ _ _
DIR dir DIR
) ) )
X x X
Xtags xtag Xtags
: : :
: : :
X x X
$ $ $
( ( (
TAGS tag TAGS
) ) )
- - -
w w w
* * *
. . .
[ [ [
ch ch ch
] ] ]
X x X
$ $ $
( ( (
TAGS tag TAGS
) ) )
- - -
xw xw xw
* * *
. . .
[ [ [
ch ch ch
] ] ]
> > >
TAGS tag TAGS
X x X
Xsaber xsaber Xsaber
: : :
X x X
# # #
load load load
$ $ $
( ( (
ALLDEFINES alldefin ALLDEFINES
) ) )
$ $ $
( ( (
SRCS srcs SRCS
) ) )
X x X
Xosaber xosab Xosaber
: : :
X x X
# # #
load load load
$ $ $
( ( (
ALLDEFINES alldefin ALLDEFINES
) ) )
$ $ $
( ( (
OBJS obj OBJS
) ) )
X x X
X x X
# # #
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
X x X
# # #
empty empti empty
rules rule rule
for for for
directories directori directory
that that that
do do do
not not not
have have have
SUBDIRS subdir SUBDIRS
- - -
do do do
not not not
edit edit edit
X x X
Xinstall xinstal Xinstall
: : :
: : :
X x X
@ @ @
echo echo echo
" " "
install instal install
in in in
$ $ $
( ( (
CURRENT current CURRENT
_ _ _
DIR dir DIR
) ) )
done done do
" " "
X x X
Xinstall xinstal Xinstall
. . .
man man man
: : :
: : :
X x X
@ @ @
echo echo echo
" " "
install instal install
. . .
man man man
in in in
$ $ $
( ( (
CURRENT current CURRENT
_ _ _
DIR dir DIR
) ) )
done done do
" " "
X x X
XMakefiles xmakefil XMakefiles
: : :
: : :
X x X
Xincludes xinclud Xincludes
: : :
: : :
X x X
X x X
# # #
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
X x X
# # #
dependencies depend dependency
generated generat generate
by by by
makedepend makedepend makedepend
X x X
END end END
_ _ _
OF of OF
_ _ _
FILE file FILE
if if if
test test test
10172 10172 10172
- - -
ne ne ne
` ` `
wc wc wc
- - -
c c c
< < <
' ' '
Makefile makefil Makefile
' ' '
` ` `
; ; ;
then then then
echo echo echo
shar shar shar
: : :
\ \ \
" " "
' ' '
Makefile makefil Makefile
' ' '
\ \ \
" " "
unpacked unpack unpack
with with with
wrong wrong wrong
size size size
! ! !
fi fi fi
# # #
end end end
of of of
' ' '
Makefile makefil Makefile
' ' '
fi fi fi
if if if
test test test
- - -
f f f
' ' '
rx rx rx
. . .
man man man
' ' '
- - -
a a a
" " "
$ $ $
{ { {
1 1 1
} } }
" " "
! ! !
= = =
" " "
- - -
c c c
" " "
; ; ;
then then then
echo echo echo
shar shar shar
: : :
Will will Will
not not not
clobber clobber clobber
existing exist exist
file file file
\ \ \
" " "
' ' '
rx rx rx
. . .
man man man
' ' '
\ \ \
" " "
else els else
echo echo echo
shar shar shar
: : :
Extracting extract Extracting
\ \ \
" " "
' ' '
rx rx rx
. . .
man man man
' ' '
\ \ \
" " "
\ \ \
( ( (
3551 3551 3551
characters charact character
\ \ \
) ) )
sed sed sed
" " "
s s s
/ / /
^ ^ ^
X x X
/ / /
/ / /
" " "
> > >
' ' '
rx rx rx
. . .
man man man
' ' '
< < <
< < <
' ' '
END end END
_ _ _
OF of OF
_ _ _
FILE file FILE
' ' '
X x X
. . .
TH th TH
RX rx RX
1 1 1
" " "
4 4 4
March march March
1993 1993 1993
" " "
" " "
X x X
Version version Version
11 11 11
" " "
X x X
. . .
SH sh SH
NAME name NAME
Xrx xrx Xrx
, , ,
rxterm rxterm rxterm
, , ,
r r r
* * *
- - -
remote remot remote
command command command
, , ,
xterm xterm xterm
, , ,
anything anyth anything
execution execut execution
X x X
. . .
SH sh SH
SYNOPSIS synopsi SYNOPSIS
X x X
. . .
B b B
rx rx rx
X x X
[ [ [
X x X
. . .
B b B
\ \ \
- - -
l l l
X x X
. . .
I i I
username usernam username
X x X
] ] ]
X x X
. . .
I i I
host host host
X x X
[ [ [
X x X
. . .
I i I
command command command
X x X
] ] ]
X x X
. . .
br br br
X x X
. . .
B b B
rxterm rxterm rxterm
X x X
[ [ [
X x X
. . .
B b B
\ \ \
- - -
l l l
X x X
. . .
I i I
username usernam username
X x X
] ] ]
X x X
. . .
I i I
host host host
X x X
[ [ [
X x X
. . .
IR ir IR
args arg args
. . .
\ \ \
| | |
. . .
\ \ \
| | |
. . .
X x X
] ] ]
X x X
. . .
SH sh SH
DESCRIPTION descript DESCRIPTION
XThe xthe XThe
X x X
. . .
B b B
rx rx rx
Xprogram xprogram Xprogram
connect connect connect
to to to
the the the
specified specifi specify
X x X
. . .
I i I
host host host
Xand xand Xand
executes execut execute
the the the
specified specifi specified
X x X
. . .
I i I
command command command
Xin xin Xin
the the the
background background background
, , ,
returning return return
immediately immedi immediately
. . .
To to To
allow allow allow
the the the
execution execut execution
Xof xof Xof
X x X
programs program program
, , ,
it it it
copies copi copy
a a a
number number number
of of of
environmental environment environmental
variables variabl variable
to to to
Xthe xthe Xthe
remote remot remote
session session session
. . .
If if If
you you you
omit omit omit
X x X
. . .
IR ir IR
command command command
, , ,
Xthen xthen Xthen
rx rx rx
will will will
start start start
an an an
xterm xterm xterm
on on on
the the the
remote remot remote
host host host
. . .
The the The
X x X
. . .
B b B
rxterm rxterm rxterm
Xvarient xvarient Xvarient
starts start start
a a a
remote remot remote
xterm xterm xterm
on on on
a a a
host host host
, , ,
and and and
also also also
passes pass pass
X x X
. . .
I i I
args arg args
Xto xto Xto
the the the
remote remot remote
xterm xterm xterm
as as a
arguments argument argument
. . .
X x X
. . .
PP pp PP
XShell xshell XShell
metacharacters metacharact metacharacters
which which which
are are be
not not not
quoted quot quote
are are be
interpreted interpret interpret
on on on
the the the
local local local
Xmachine xmachin Xmachine
, , ,
while while while
quoted quot quote
metacharacters metacharact metacharacters
are are be
interpreted interpret interpret
on on on
the the the
remote remot remote
Xmachine xmachin Xmachine
. . .
X x X
. . .
PP pp PP
XIf xif XIf
the the the
name name name
of of of
the the the
file file file
from from from
which which which
X x X
. . .
B b B
rx rx rx
Xis xis Xis
executed execut execute
is is be
anything anyth anything
other other other
than than than
` ` `
` ` `
rx rx rx
, , ,
' ' '
' ' '
X x X
. . .
B b B
rx rx rx
Xtakes xtake Xtakes
this this this
name name name
, , ,
stripped strip strip
on on on
a a a
leading lead lead
` ` `
` ` `
r r r
' ' '
' ' '
as as a
the the the
command command command
Xto xto Xto
run run run
on on on
the the the
remote remot remote
host host host
, , ,
using use use
any ani any
X x X
. . .
I i I
command command command
Xparameters xparamet Xparameters
as as a
arguments argument argument
for for for
the the the
remote remot remote
command command command
. . .
X x X
. . .
PP pp PP
XIf xif XIf
X x X
. . .
B b B
rx rx rx
Xthinks xthink Xthinks
you you you
are are be
using use use
X x X
. . .
B b B
xauth xauth xauth
Xbased xbase Xbased
X x X
authorisation authoris authorisation
, , ,
and and and
you you you
are are be
calling call call
to to to
a a a
off off off
- - -
site site site
host host host
, , ,
or or or
Xto xto Xto
a a a
different differ different
username usernam username
, , ,
it it it
will will will
attempt attempt attempt
to to to
copy copi copy
an an an
authorization author authorization
Xkey xkey Xkey
to to to
the the the
remote remot remote
account account account
. . .
Otherwise otherwis Otherwise
it it it
will will will
try tri try
to to to
use use use
X x X
. . .
B b B
xhost xhost xhost
( ( (
1 1 1
) ) )
Xto xto Xto
grant grant grant
access access access
to to to
the the the
remote remot remote
host host host
. . .
X x X
. . .
SH sh SH
OPTIONS option OPTIONS
X x X
. . .
TP tp TP
X x X
. . .
BI bi BI
\ \ \
- - -
l l l
" " "
username usernam username
" " "
XUse xuse XUse
X x X
. . .
I i I
username usernam username
Xas xas Xas
the the the
remote remot remote
username usernam username
instead instead instead
of of of
your your your
local local local
username usernam username
. . .
In in In
the the the
absence absenc absence
Xof xof Xof
this this this
option option option
, , ,
the the the
remote remot remote
username usernam username
is is be
the the the
same same same
as as a
your your your
local local local
username usernam username
. . .
X x X
X x X
. . .
SH sh SH
ENVIRONMENT environ ENVIRONMENT
XIf xif XIf
set set set
, , ,
the the the
values valu value
of of of
PATH path PATH
, , ,
DISPLAY display DISPLAY
, , ,
XENVIRONMENT xenviron XENVIRONMENT
, , ,
XAPPLRESDIR xapplresdir XAPPLRESDIR
, , ,
XXFILESEARCHPATH xxfilesearchpath XXFILESEARCHPATH
, , ,
XUSERFILESEARCHPATH xuserfilesearchpath XUSERFILESEARCHPATH
, , ,
OPENWINHOME openwinhom OPENWINHOME
, , ,
LD ld LD
_ _ _
LIBRARY librari LIBRARY
_ _ _
PATH path PATH
, , ,
Xand xand Xand
XAUTHORITY xauthor XAUTHORITY
are are be
exported export export
to to to
the the the
remote remot remote
program program program
, , ,
unless unless unless
the the the
Xremote xremot Xremote
username usernam username
is is be
different differ different
, , ,
or or or
the the the
remote remot remote
host host host
is is be
off off off
- - -
site site site
, , ,
in in in
which which which
Xcase xcase Xcase
only onli only
DISPLAY display DISPLAY
is is be
exported export export
, , ,
with with with
in in in
all all all
cases case case
any ani any
variables variabl variable
named name name
in in in
the the the
Xvariable xvariabl Xvariable
RXENV rxenv RXENV
. . .
X x X
. . .
PP pp PP
XThe xthe XThe
DISPLAY display DISPLAY
variable variabl variable
is is be
tweaked tweak tweak
as as a
appropriate appropri appropriate
, , ,
to to to
contain contain contain
as as a
qualified qualifi qualified
Xa xa Xa
hostname hostnam hostname
as as a
is is be
needed need need
. . .
X x X
. . .
SH sh SH
DIAGNOSTICS diagnost DIAGNOSTICS
X x X
. . .
TP tp TP
X x X
. . .
IB ib IB
command command command
" " "
: : :
don don don
' ' '
t t t
recognise recognis recognise
my my my
name name name
. . .
" " "
X x X
. . .
B b B
rx rx rx
Xcannot xcannot Xcannot
decode decod decode
the the the
name name name
it it it
has has have
been been be
called call call
under under under
. . .
In in In
this this this
case case case
Xit xit Xit
prints print print
a a a
warning warn warning
message messag message
, , ,
and and and
continues continu continue
, , ,
as as a
normal normal normal
. . .
X x X
. . .
TP tp TP
X x X
. . .
B b B
" " "
rx rx rx
: : :
usage usag usage
: : :
rx rx rx
[ [ [
- - -
l l l
username usernam username
] ] ]
hostname hostnam hostname
[ [ [
args arg args
. . .
. . .
. . .
] ] ]
" " "
XThis xthis XThis
means mean mean
it it it
could could could
not not not
decode decod decode
the the the
arguments argument argument
given given give
to to to
it it it
. . .
X x X
. . .
SH sh SH
AUTHOR author AUTHOR
XDuncan xduncan XDuncan
Sinclair sinclair Sinclair
< < <
sinclair sinclair sinclair
@ @ @
dcs dcs dc
. . .
glasgow glasgow glasgow
. . .
ac ac ac
. . .
uk uk uk
> > >
, , ,
July juli July
1992 1992 1992
X x X
. . .
br br br
XOriginally xorigin XOriginally
based base base
on on on
a a a
program program program
with with with
the the the
same same same
name name name
from from from
the the the
X x X
. . .
B b B
gwm gwm gwm
Xdistribution xdistribut Xdistribution
. . .
To to To
distinguish distinguish distinguish
this this this
" " "
rx rx rx
" " "
from from from
other other other
programs program program
Xwith xwith Xwith
similar similar similar
names name name
, , ,
you you you
should should should
refer refer refer
to to to
this this this
program program program
as as a
the the the
X x X
. . .
B b B
Glasgow glasgow Glasgow
X x X
. . .
BR br BR
rx rx rx
. . .
X x X
. . .
SH sh SH
" " "
SEE see SEE
ALSO also ALSO
" " "
XX xx XX
( ( (
1 1 1
) ) )
, , ,
rsh rsh rsh
( ( (
1 1 1
) ) )
, , ,
xterm xterm xterm
( ( (
1 1 1
) ) )
, , ,
xauth xauth xauth
( ( (
1 1 1
) ) )
, , ,
xhost xhost xhost
( ( (
1 1 1
) ) )
, , ,
gwm gwm gwm
( ( (
1 1 1
) ) )
X x X
. . .
SH sh SH
BUGS bug BUGS
X x X
. . .
B b B
Rx rx Rx
Xmakes xmake Xmakes
a a a
number number number
of of of
assumptions assumpt assumption
about about about
the the the
relationship relationship relationship
between between between
the the the
Xlocal xlocal Xlocal
user user user
, , ,
and and and
the the the
remote remot remote
one one one
, , ,
depending depend depend
on on on
whether whether whether
the the the
remote remot remote
Xhost xhost Xhost
is is be
onsite onsit onsite
or or or
not not not
, , ,
and and and
whether whether whether
an an an
alternative altern alternative
username usernam username
was was be
used use use
Xor xor Xor
not not not
. . .
X x X
. . .
PP pp PP
XIn xin XIn
particular particular particular
, , ,
if if if
either either either
the the the
locally local locally
used use use
shell shell shell
, , ,
or or or
the the the
remotely remot remotely
Xused xuse Xused
shell shell shell
is is be
the the the
standard standard standard
Bourne bourn Bourne
Shell shell Shell
, , ,
X x X
. . .
B b B
sh sh sh
( ( (
1 1 1
) ) )
Xthen xthen Xthen
strange strang strange
things thing thing
are are be
more more more
likely like likely
to to to
happen happen happen
. . .
Especially especi Especially
when when when
Xit xit Xit
' ' '
s s s
only onli only
one one one
of of of
them them them
. . .
X x X
. . .
PP pp PP
XSometimes xsometim XSometimes
quoting quot quote
can can can
get get get
messed mess mess
up up up
. . .
X x X
. . .
PP pp PP
XIt xit XIt
' ' '
s s s
too too too
easy easi easy
to to to
fool fool fool
the the the
smarts smart smart
in in in
X x X
. . .
B b B
rx rx rx
Xto xto Xto
make make make
it it it
believe believ believe
something someth something
that that that
is is be
not not not
true true true
, , ,
and and and
fail fail fail
because becaus because
of of of
it it it
. . .
X x X
. . .
PP pp PP
XWhen xwhen XWhen
X x X
. . .
B b B
rx rx rx
Xuses xuse Xuses
X x X
. . .
B b B
xhost xhost xhost
Xto xto Xto
grant grant grant
access access access
, , ,
the the the
X x X
. . .
B b B
xhost xhost xhost
Xcommand xcommand Xcommand
may may may
fail fail fail
silently silent silently
. . .
X x X
. . .
PP pp PP
XIf xif XIf
X x X
. . .
B b B
rx rx rx
Xtries xtri Xtries
to to to
send send send
to to to
large larg large
a a a
command command command
to to to
the the the
remote remot remote
machine machin machine
, , ,
it it it
will will will
Xlikely xlike Xlikely
fail fail fail
with with with
a a a
parse pars parse
error error error
from from from
csh csh csh
. . .
If if If
this this this
happens happen happen
, , ,
you you you
Xwill xwill Xwill
probably probabl probably
have have have
to to to
reduce reduc reduce
the the the
size size size
of of of
the the the
exported export exported
environment environ environment
. . .
END end END
_ _ _
OF of OF
_ _ _
FILE file FILE
if if if
test test test
3551 3551 3551
- - -
ne ne ne
` ` `
wc wc wc
- - -
c c c
< < <
' ' '
rx rx rx
. . .
man man man
' ' '
` ` `
; ; ;
then then then
echo echo echo
shar shar shar
: : :
\ \ \
" " "
' ' '
rx rx rx
. . .
man man man
' ' '
\ \ \
" " "
unpacked unpack unpack
with with with
wrong wrong wrong
size size size
! ! !
fi fi fi
# # #
end end end
of of of
' ' '
rx rx rx
. . .
man man man
' ' '
fi fi fi
if if if
test test test
- - -
f f f
' ' '
rx rx rx
. . .
pl pl pl
' ' '
- - -
a a a
" " "
$ $ $
{ { {
1 1 1
} } }
" " "
! ! !
= = =
" " "
- - -
c c c
" " "
; ; ;
then then then
echo echo echo
shar shar shar
: : :
Will will Will
not not not
clobber clobber clobber
existing exist exist
file file file
\ \ \
" " "
' ' '
rx rx rx
. . .
pl pl pl
' ' '
\ \ \
" " "
else els else
echo echo echo
shar shar shar
: : :
Extracting extract Extracting
\ \ \
" " "
' ' '
rx rx rx
. . .
pl pl pl
' ' '
\ \ \
" " "
\ \ \
( ( (
9028 9028 9028
characters charact character
\ \ \
) ) )
sed sed sed
" " "
s s s
/ / /
^ ^ ^
X x X
/ / /
/ / /
" " "
> > >
' ' '
rx rx rx
. . .
pl pl pl
' ' '
< < <
< < <
' ' '
END end END
_ _ _
OF of OF
_ _ _
FILE file FILE
' ' '
X x X
# # #
! ! !
/ / /
usr usr usr
/ / /
local local local
/ / /
bin bin bin
/ / /
perl perl perl
X x X
# # #
CONFIG config CONFIG
: : :
change chang change
the the the
line line line
above abov above
to to to
point point point
to to to
your your your
copy copi copy
of of of
perl perl perl
. . .
X x X
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
X x X
# # #
Glasgow glasgow Glasgow
RX rx RX
version version version
3 3 3
. . .
1 1 1
. . .
7 7 7
X x X
# # #
X x X
# # #
Copyright copyright Copyright
1992 1992 1992
Duncan duncan Duncan
Sinclair sinclair Sinclair
< < <
sinclair sinclair sinclair
@ @ @
dcs dcs dc
. . .
gla gla gla
. . .
ac ac ac
. . .
uk uk uk
> > >
X x X
# # #
X x X
# # #
Last last Last
Modified modifi Modified
: : :
Early earli Early
April april April
1993 1993 1993
. . .
X x X
# # #
X x X
# # #
Distribution distribut Distribution
limited limit limit
, , ,
as as a
per per per
the the the
usual usual usual
MIT mit MIT
copyright copyright copyright
. . .
X x X
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
X x X
# # #
remote remot remote
execution execut execution
of of of
X x X
programs program program
. . .
Based base Based
on on on
a a a
script script script
in in in
an an an
old old old
version version version
of of of
gwm gwm gwm
. . .
X x X
# # #
X x X
# # #
To to To
install instal install
, , ,
put put put
rx rx rx
in in in
your your your
bin bin bin
and and and
make make make
rxterm rxterm rxterm
a a a
link link link
to to to
it it it
. . .
X x X
# # #
Some some Some
configuration configur configuration
will will will
be be be
necessary necessari necessary
, , ,
see see see
" " "
CONFIG config CONFIG
" " "
comments comment comment
. . .
. . .
. . .
X x X
# # #
X x X
# # #
More more More
and and and
more more more
this this this
is is be
less less less
and and and
less less less
like like like
the the the
original origin original
. . .
. . .
. . .
. . .
X x X
# # #
X x X
# # #
Major major Major
hacked hack hack
to to to
work work work
for for for
our our our
( ( (
my my my
) ) )
set set set
up up up
, , ,
and and and
also also also
partly part partly
X x X
# # #
re re re
- - -
written written write
to to to
work work work
with with with
sh sh sh
, , ,
rather rather rather
than than than
ksh ksh ksh
. . .
X x X
# # #
X x X
# # #
Maybe mayb Maybe
I i I
' ' '
ll ll ll
turn turn turn
this this this
into into into
our our our
first first first
zsh zsh zsh
script script script
! ! !
X x X
# # #
X x X
# # #
Looks look Looks
like like like
it it it
turned turn turn
into into into
a a a
perl perl perl
script script script
at at at
some some some
point point point
- - -
big big big
improvement improv improvement
. . .
X x X
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
X x X
# # #
This this This
code code code
tries tri try
to to to
be be be
intelligent intellig intelligent
in in in
the the the
way way way
it it it
works work work
. . .
This this This
means mean mean
there there there
X x X
# # #
are are be
tons ton ton
of of of
implicit implicit implicit
assumptions assumpt assumption
about about about
the the the
environment environ environment
it it it
is is be
run run run
in in in
. . .
X x X
# # #
These these These
assumptions assumpt assumption
are are be
all all all
valid valid valid
on on on
the the the
machines machin machine
I i I
use use use
, , ,
and and and
in in in
my my my
X x X
# # #
environment environ environment
. . .
At at At
the the the
same same same
time time time
, , ,
I i I
try tri try
to to to
make make make
as as a
few few few
assumptions assumpt assumption
as as a
possible possibl possible
X x X
# # #
about about about
the the the
remote remot remote
machine machin machine
. . .
Here here Here
' ' '
s s s
a a a
list list list
of of of
all all all
the the the
more more more
tricky tricki tricky
ones one one
. . .
. . .
. . .
X x X
# # #
* * *
) ) )
That that That
the the the
remote remot remote
machine machin machine
has has have
csh csh csh
. . .
( ( (
Linux linux Linux
? ? ?
) ) )
X x X
# # #
* * *
) ) )
That that That
$ $ $
RSHELL rshell RSHELL
= = =
/ / /
bin bin bin
/ / /
( ( (
k k k
) ) )
? ? ?
sh sh sh
= = =
= = =
> > >
remote remot remote
shell shell shell
= = =
/ / /
bin bin bin
/ / /
( ( (
k k k
) ) )
? ? ?
sh sh sh
. . .
( ( (
Make make Make
same same same
. . .
) ) )
X x X
# # #
* * *
) ) )
If if If
remote remot remote
shell shell shell
= = =
sh sh sh
, , ,
that that that
$ $ $
PATH path PATH
is is be
compatible compat compatible
. . .
( ( (
Use use Use
csh csh csh
, , ,
etc etc etc
. . .
. . .
) ) )
X x X
# # #
* * *
) ) )
I i I
pass pass pass
a a a
cookie cooki cookie
to to to
the the the
remote remot remote
machine machin machine
if if if
need need need
be be be
, , ,
but but but
does doe do
it it it
X x X
# # #
know know know
what what what
to to to
do do do
with with with
a a a
cookie cooki cookie
. . .
( ( (
eat eat eat
it it it
? ? ?
) ) )
X x X
# # #
* * *
) ) )
There there There
must must must
be be be
others other others
. . .
. . .
. . .
X x X
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
X x X
# # #
Why whi Why
am am be
I i I
using use use
csh csh csh
to to to
run run run
the the the
remote remot remote
commands command command
? ? ?
Simply simpli Simply
because becaus because
it it it
doesn doesn doesn
' ' '
t t t
X x X
# # #
interact interact interact
badly bad badly
with with with
rsh rsh rsh
, , ,
and and and
hang hang hang
waiting wait wait
for for for
a a a
file file file
descriptor descriptor descriptor
to to to
X x X
# # #
be be be
closed close close
. . .
I i I
' ' '
d d d
rather rather rather
use use use
zsh zsh zsh
, , ,
or or or
bash bash bash
, , ,
or or or
even even even
perl perl perl
, , ,
but but but
they they they
are are be
not not not
X x X
# # #
as as as
universal univers universal
as as a
csh csh csh
. . .
X x X
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
# # #
X x X
# # #
Xrequire xrequir Xrequire
" " "
stat stat stat
. . .
pl pl pl
" " "
; ; ;
X x X
# # #
X x X
# # #
What what What
we we we
called call call
? ? ?
X x X
# # #
X x X
$ $ $
argv argv argv
0 0 0
= = =
$ $ $
0 0 0
; ; ;
X x X
$ $ $
argv argv argv
0 0 0
= = =
~ ~ ~
s s s
: : :
. . .
* * *
/ / /
: : :
: : :
; ; ;
X x X
# # #
X x X
# # #
CONFIG config CONFIG
: : :
X x X
# # #
Change chang Change
these these these
variables variabl variable
to to to
be be be
your your your
domain domain domain
name name name
, , ,
and and and
a a a
pattern pattern pattern
that that that
X x X
# # #
will will will
match match match
all all all
variations variat variation
on on on
your your your
domain domain domain
name name name
. . .
You you You
must must must
include includ include
X x X
# # #
those those those
leading lead lead
dots dot dot
! ! !
! ! !
! ! !
If if If
your your your
hostname hostnam hostname
includes includ include
your your your
domain domain domain
, , ,
see see see
X x X
# # #
the the the
code code code
further further far
down down down
, , ,
marked mark mark
" " "
XXX xxx XXX
" " "
X x X
# # #
X x X
$ $ $
DOM dom DOM
= = =
" " "
. . .
dcs dcs dc
. . .
gla gla gla
. . .
ac ac ac
. . .
uk uk uk
" " "
; ; ;
X x X
$ $ $
DOMPAT dompat DOMPAT
= = =
" " "
\ \ \
. . .
dcs dcs dc
( ( (
\ \ \
. . .
gla gla gla
( ( (
sgow sgow sgow
) ) )
? ? ?
( ( (
\ \ \
. . .
ac ac ac
\ \ \
. . .
uk uk uk
) ) )
? ? ?
) ) )
? ? ?
" " "
; ; ;
X x X
# # #
X x X
# # #
CONFIG config CONFIG
: : :
X x X
# # #
Change chang Change
this this this
to to to
your your your
value valu value
of of of
BINDIR bindir BINDIR
, , ,
or or or
set set set
the the the
variable variabl variable
to to to
" " "
" " "
if if if
X x X
# # #
you you you
think think think
your your your
users user user
are are be
smarter smarter smart
than than than
that that that
. . .
X x X
# # #
X x X
$ $ $
XPATHS xpath XPATHS
= = =
" " "
/ / /
usr usr usr
/ / /
X x X
11 11 11
/ / /
bin bin bin
" " "
; ; ;
X x X
# # #
X x X
# # #
CONFIG config CONFIG
: : :
X x X
# # #
Make make Make
this this this
the the the
name name name
of of of
your your your
" " "
remote remot remote
shell shell shell
" " "
command command command
. . .
X x X
# # #
X x X
$ $ $
RSH rsh RSH
= = =
" " "
rsh rsh rsh
" " "
; ; ;
X x X
# # #
X x X
# # #
end end end
of of of
CONFIG config CONFIG
X x X
# # #
X x X
# # #
Some some Some
variables variabl variable
we we we
' ' '
ll ll ll
no no no
doubt doubt doubt
use use use
sometime sometim sometime
. . .
. . .
. . .
X x X
# # #
X x X
$ $ $
usage usag usage
= = =
" " "
$ $ $
argv argv argv
0 0 0
: : :
usage usag usage
: : :
$ $ $
argv argv argv
0 0 0
[ [ [
- - -
l l l
username usernam username
] ] ]
hostname hostnam hostname
[ [ [
args arg args
. . .
. . .
. . .
] ] ]
\ \ \
n n n
" " "
; ; ;
X x X
$ $ $
RSHELL rshell RSHELL
= = =
( ( (
getpwuid getpwuid getpwuid
( ( (
$ $ $
< < <
) ) )
) ) )
[ [ [
8 8 8
] ] ]
| | |
| | |
" " "
/ / /
bin bin bin
/ / /
sh sh sh
" " "
; ; ;
X x X
$ $ $
HOME home HOME
= = =
$ $ $
ENV env ENV
{ { {
" " "
HOME home HOME
" " "
} } }
| | |
| | |
( ( (
getpwuid getpwuid getpwuid
( ( (
$ $ $
< < <
) ) )
) ) )
[ [ [
7 7 7
] ] ]
; ; ;
X x X
$ $ $
XAUTH xauth XAUTH
= = =
$ $ $
ENV env ENV
{ { {
" " "
XAUTHORITY xauthor XAUTHORITY
" " "
} } }
| | |
| | |
$ $ $
HOME home HOME
. . .
" " "
/ / /
. . .
Xauthority xauthor Xauthority
" " "
; ; ;
X x X
$ $ $
LOGF logf LOGF
= = =
" " "
~ ~ ~
/ / /
. . .
rx rx rx
. . .
log log log
" " "
; ; ;
X x X
@ @ @
STUFF stuff STUFF
= = =
( ( (
) ) )
; ; ;
X x X
$ $ $
debug debug debug
= = =
0 0 0
; ; ;
X x X
# # #
X x X
# # #
Before befor Before
anything anyth anything
else els else
, , ,
close close close
stdin stdin stdin
. . .
This this This
might might might
stop stop stop
rx rx rx
hanging hang hang
X x X
# # #
due due due
to to to
rsh rsh rsh
weirdness weird weirdness
. . .
X x X
# # #
Xclose xclose Xclose
( ( (
STDIN stdin STDIN
) ) )
; ; ;
X x X
# # #
X x X
# # #
do do do
a a a
" " "
- - -
l l l
" " "
flag flag flag
. . .
. . .
. . .
X x X
# # #
Xif xif Xif
( ( (
$ $ $
ARGV argv ARGV
[ [ [
0 0 0
] ] ]
eq eq eq
" " "
- - -
l l l
" " "
) ) )
{ { {
X x X
shift shift shift
; ; ;
X x X
$ $ $
User user User
= = =
$ $ $
ARGV argv ARGV
[ [ [
0 0 0
] ] ]
| | |
| | |
die die die
$ $ $
usage usag usage
; ; ;
X x X
@ @ @
LUser luser LUser
= = =
( ( (
" " "
- - -
l l l
" " "
, , ,
$ $ $
User user User
) ) )
; ; ;
X x X
shift shift shift
; ; ;
X x X
} } }
X x X
# # #
X x X
# # #
Pick pick Pick
a a a
host host host
, , ,
any ani any
host host host
. . .
. . .
. . .
X x X
# # #
X x X
$ $ $
MACH mach MACH
= = =
$ $ $
ARGV argv ARGV
[ [ [
0 0 0
] ] ]
| | |
| | |
die die die
$ $ $
usage usag usage
; ; ;
Xshift xshift Xshift
; ; ;
X x X
# # #
X x X
# # #
Things thing Things
to to to
think think think
about about about
for for for
the the the
remote remot remote
machine machin machine
. . .
X x X
# # #
X x X
$ $ $
MACH mach MACH
= = =
~ ~ ~
s s s
/ / /
$ $ $
DOMPAT dompat DOMPAT
/ / /
/ / /
; ; ;
X x X
$ $ $
OffSite offsit OffSite
= = =
$ $ $
MACH mach MACH
= = =
~ ~ ~
/ / /
\ \ \
. . .
/ / /
; ; ;
X x X
# # #
X x X
# # #
Where where Where
am am be
I i I
? ? ?
Seems seem Seems
we we we
can can can
' ' '
t t t
trust trust trust
the the the
dumb dumb dumb
user user user
to to to
set set set
HOSTNAME hostnam HOSTNAME
right right right
! ! !
X x X
# # #
X x X
# # #
$ $ $
HOSTNAME hostnam HOSTNAME
= = =
$ $ $
ENV env ENV
{ { {
HOSTNAME hostnam HOSTNAME
} } }
| | |
| | |
` ` `
hostname hostnam hostname
` ` `
; ; ;
# # #
Current current Current
Host host Host
X x X
$ $ $
HOSTNAME hostnam HOSTNAME
= = =
` ` `
hostname hostnam hostname
` ` `
; ; ;
# # #
Current current Current
Host host Host
X x X
$ $ $
HOSTNAME hostnam HOSTNAME
= = =
~ ~ ~
s s s
/ / /
\ \ \
n n n
/ / /
/ / /
; ; ;
X x X
# # #
X x X
# # #
If if If
all all all
your your your
hostnames hostnam hostnames
include includ include
your your your
domain domain domain
, , ,
comment comment comment
out out out
the the the
next next next
line line line
. . .
X x X
# # #
Xif xif Xif
( ( (
$ $ $
OffSite offsit OffSite
) ) )
{ { {
$ $ $
HOSTNAME hostnam HOSTNAME
= = =
$ $ $
HOSTNAME hostnam HOSTNAME
. . .
$ $ $
DOM dom DOM
; ; ;
} } }
# # #
XXX xxx XXX
X x X
# # #
X x X
# # #
Now now Now
we we we
know know know
where where where
we we we
are are be
, , ,
and and and
they they they
are are be
, , ,
are are be
they they they
different differ different
? ? ?
X x X
# # #
X x X
$ $ $
Diff diff Diff
= = =
$ $ $
HOSTNAME hostnam HOSTNAME
ne ne ne
$ $ $
MACH mach MACH
; ; ;
X x X
# # #
X x X
# # #
What what What
is is be
the the the
display display display
going go go
to to to
be be be
? ? ?
X x X
# # #
! ! !
! ! !
Danger danger Danger
! ! !
! ! !
Heavy heavi Heavy
Regular regular Regular
expressions express expression
follow follow follow
. . .
. . .
. . .
X x X
# # #
This this This
needs need need
to to to
be be be
re re re
- - -
written written write
to to to
be be be
modular modular modular
and and and
can can can
so so so
be be be
extended extend extend
to to to
X x X
# # #
support support support
resetting reset reset
host host host
: : :
* * *
to to to
unix unix unix
: : :
* * *
, , ,
as as a
required requir require
. . .
X x X
# # #
X x X
$ $ $
DISPLAY display DISPLAY
= = =
$ $ $
ENV env ENV
{ { {
" " "
DISPLAY display DISPLAY
" " "
} } }
| | |
| | |
" " "
: : :
0 0 0
. . .
0 0 0
" " "
; ; ;
X x X
$ $ $
DISPLAY display DISPLAY
= = =
~ ~ ~
s s s
/ / /
$ $ $
DOMPAT dompat DOMPAT
/ / /
/ / /
; ; ;
X x X
$ $ $
DISPLAY display DISPLAY
= = =
~ ~ ~
s s s
/ / /
^ ^ ^
( ( (
unix unix unix
) ) )
? ? ?
( ( (
: : :
\ \ \
d d d
( ( (
\ \ \
. . .
\ \ \
d d d
) ) )
? ? ?
) ) )
$ $ $
/ / /
$ $ $
HOSTNAME hostnam HOSTNAME
$ $ $
2 2 2
/ / /
if if if
( ( (
$ $ $
Diff diff Diff
) ) )
; ; ;
X x X
$ $ $
DISPLAY display DISPLAY
= = =
~ ~ ~
s s s
/ / /
^ ^ ^
( ( (
[ [ [
^ ^ ^
. . .
] ] ]
* * *
) ) )
( ( (
: : :
\ \ \
d d d
( ( (
\ \ \
. . .
\ \ \
d d d
) ) )
? ? ?
) ) )
$ $ $
/ / /
$ $ $
1 1 1
$ $ $
DOM dom DOM
$ $ $
2 2 2
/ / /
if if if
( ( (
$ $ $
OffSite offsit OffSite
) ) )
; ; ;
X x X
$ $ $
ENV env ENV
{ { {
" " "
DISPLAY display DISPLAY
" " "
} } }
= = =
$ $ $
DISPLAY display DISPLAY
; ; ;
X x X
# # #
X x X
# # #
Here here Here
comes come come
the the the
hard hard hard
bit bit bit
in in in
sh sh sh
. . .
Quote quot Quote
our our our
args arg args
. . .
X x X
# # #
Also also Also
have have have
to to to
quote quot quote
quotes quot quote
. . .
To to To
cope cope cope
with with with
csh csh csh
braindamage braindamag braindamage
, , ,
X x X
# # #
quotes quot quote
are are be
quoted quot quote
thus thus thus
; ; ;
' ' '
- - -
> > >
' ' '
\ \ \
' ' '
' ' '
X x X
# # #
So so So
for for for
an an an
arg arg arg
" " "
foo foo foo
' ' '
bar bar bar
" " "
, , ,
we we we
get get get
" " "
' ' '
foo foo foo
' ' '
\ \ \
' ' '
' ' '
bar bar bar
' ' '
" " "
. . .
X x X
# # #
Xforeach xforeach Xforeach
( ( (
@ @ @
ARGV argv ARGV
) ) )
{ { {
X x X
s s s
# # #
\ \ \
' ' '
# # #
\ \ \
' ' '
\ \ \
\ \ \
\ \ \
' ' '
\ \ \
' ' '
# # #
g g g
; ; ;
X x X
s s s
# # #
( ( (
. . .
* * *
) ) )
# # #
\ \ \
' ' '
$ $ $
1 1 1
\ \ \
' ' '
# # #
; ; ;
X x X
} } }
X x X
# # #
X x X
# # #
So so So
what what what
we we we
doing do do
? ? ?
X x X
# # #
XPROG xprog XPROG
: : :
{ { {
X x X
if if if
( ( (
$ $ $
argv argv argv
0 0 0
eq eq eq
" " "
rx rx rx
" " "
) ) )
{ { {
last last last
PROG prog PROG
; ; ;
} } }
X x X
if if if
( ( (
$ $ $
argv argv argv
0 0 0
eq eq eq
" " "
rxterm rxterm rxterm
" " "
) ) )
{ { {
X x X
# # #
unshift unshift unshift
( ( (
@ @ @
ARGV argv ARGV
, , ,
" " "
- - -
ls ls l
" " "
) ) )
if if if
( ( (
$ $ $
Diff diff Diff
) ) )
; ; ;
X x X
unshift unshift unshift
( ( (
@ @ @
ARGV argv ARGV
, , ,
" " "
xterm xterm xterm
" " "
, , ,
" " "
- - -
ls ls l
" " "
, , ,
" " "
- - -
n n n
" " "
, , ,
$ $ $
MACH mach MACH
) ) )
; ; ;
X x X
last last last
PROG prog PROG
; ; ;
X x X
} } }
X x X
if if if
( ( (
$ $ $
argv argv argv
0 0 0
= = =
~ ~ ~
/ / /
r r r
( ( (
. . .
* * *
) ) )
/ / /
) ) )
{ { {
unshift unshift unshift
( ( (
@ @ @
ARGV argv ARGV
, , ,
$ $ $
1 1 1
) ) )
; ; ;
last last last
PROG prog PROG
; ; ;
} } }
X x X
warn warn warn
" " "
$ $ $
argv argv argv
0 0 0
: : :
don don don
' ' '
t t t
recognise recognis recognise
my my my
name name name
. . .
" " "
; ; ;
X x X
} } }
X x X
# # #
X x X
# # #
If if If
nothing noth nothing
else els else
, , ,
become becom become
an an an
rxterm rxterm rxterm
. . .
X x X
# # #
Xif xif Xif
( ( (
@ @ @
ARGV argv ARGV
= = =
= = =
0 0 0
) ) )
{ { {
X x X
# # #
unshift unshift unshift
( ( (
@ @ @
ARGV argv ARGV
, , ,
" " "
- - -
ls ls l
" " "
) ) )
if if if
( ( (
$ $ $
Diff diff Diff
) ) )
; ; ;
X x X
unshift unshift unshift
( ( (
@ @ @
ARGV argv ARGV
, , ,
" " "
xterm xterm xterm
" " "
, , ,
" " "
- - -
ls ls l
" " "
, , ,
" " "
- - -
n n n
" " "
, , ,
$ $ $
MACH mach MACH
) ) )
; ; ;
X x X
} } }
X x X
# # #
X x X
# # #
Some some Some
special special special
considerations consider consideration
if if if
we we we
are are be
not not not
ourselves ourselv ourselves
on on on
the the the
other other other
side side side
. . .
X x X
# # #
Xif xif Xif
( ( (
$ $ $
OffSite offsit OffSite
| | |
| | |
$ $ $
User user User
) ) )
{ { {
X x X
# # #
X x X
# # #
We we We
want want want
to to to
pass pass pass
a a a
cookie cooki cookie
here here here
. . .
X x X
# # #
X x X
if if if
( ( (
- - -
e e e
$ $ $
XAUTH xauth XAUTH
) ) )
{ { {
X x X
# # #
X x X
# # #
This this This
is is be
going go go
to to to
be be be
unsecure unsecur unsecure
, , ,
as as a
the the the
cookie cooki cookie
will will will
appear appear appear
in in in
a a a
number number number
X x X
# # #
of of of
command command command
line line line
args arg args
. . .
But but But
at at at
least least least
it it it
' ' '
ll ll ll
work work work
. . .
X x X
# # #
This this This
will will will
need need need
enhanced enhanc enhanced
if if if
we we we
ever ever ever
fix fix fix
the the the
code code code
above abov above
to to to
X x X
# # #
set set set
DISPLAY display DISPLAY
to to to
" " "
: : :
0 0 0
. . .
0 0 0
" " "
, , ,
when when when
we we we
return return return
to to to
the the the
server server server
. . .
X x X
# # #
X x X
$ $ $
CooKie cooki CooKie
= = =
` ` `
PATH path PATH
= = =
\ \ \
$ $ $
PATH path PATH
: : :
$ $ $
XPATHS xpath XPATHS
xauth xauth xauth
list list list
$ $ $
DISPLAY display DISPLAY
` ` `
; ; ;
X x X
chop chop chop
( ( (
$ $ $
CooKie cooki CooKie
) ) )
; ; ;
X x X
@ @ @
CooKs cook CooKs
= = =
split split split
( ( (
' ' '
' ' '
, , ,
$ $ $
CooKie cooki CooKie
) ) )
; ; ;
X x X
shift shift shift
( ( (
@ @ @
CooKs cook CooKs
) ) )
; ; ;
X x X
unshift unshift unshift
( ( (
@ @ @
STUFF stuff STUFF
, , ,
" " "
xauth xauth xauth
" " "
, , ,
" " "
add add add
" " "
, , ,
$ $ $
DISPLAY display DISPLAY
, , ,
@ @ @
CooKs cook CooKs
, , ,
" " "
; ; ;
" " "
) ) )
if if if
( ( (
@ @ @
CooKs cook CooKs
= = =
= = =
2 2 2
) ) )
; ; ;
X x X
} } }
else els else
{ { {
X x X
# # #
X x X
# # #
Yuk yuk Yuk
. . .
What what What
a a a
crock crock crock
. . .
I i I
hate hate hate
doing do do
this this this
. . .
X x X
# # #
X x X
system system system
( ( (
" " "
xhost xhost xhost
+ + +
$ $ $
MACH mach MACH
> > >
/ / /
dev dev dev
/ / /
null null null
2 2 2
> > >
/ / /
dev dev dev
/ / /
null null null
" " "
) ) )
if if if
( ( (
$ $ $
Diff diff Diff
) ) )
; ; ;
X x X
} } }
X x X
# # #
X x X
# # #
We we We
really realli really
only onli only
want want want
to to to
pass pass pass
a a a
value valu value
for for for
$ $ $
DISPLAY display DISPLAY
. . .
X x X
# # #
X x X
@ @ @
VARS var VARS
= = =
( ( (
" " "
DISPLAY display DISPLAY
" " "
, , ,
split split split
( ( (
' ' '
' ' '
, , ,
$ $ $
ENV env ENV
{ { {
" " "
RXENV rxenv RXENV
" " "
} } }
) ) )
) ) )
; ; ;
X x X
} } }
else els else
{ { {
X x X
# # #
X x X
# # #
Some some Some
variables variabl variable
we we we
wish wish wish
to to to
export export export
X x X
# # #
X x X
@ @ @
VARS var VARS
= = =
( ( (
X x X
" " "
DISPLAY display DISPLAY
" " "
, , ,
X x X
" " "
XENVIRONMENT xenviron XENVIRONMENT
" " "
, , ,
X x X
" " "
XFILESEARCHPATH xfilesearchpath XFILESEARCHPATH
" " "
, , ,
X x X
" " "
XUSERFILESEARCHPATH xuserfilesearchpath XUSERFILESEARCHPATH
" " "
, , ,
X x X
" " "
XAPPLRESDIR xapplresdir XAPPLRESDIR
" " "
, , ,
X x X
" " "
OPENWINHOME openwinhom OPENWINHOME
" " "
, , ,
X x X
" " "
LD ld LD
_ _ _
LIBRARY librari LIBRARY
_ _ _
PATH path PATH
" " "
, , ,
X x X
# # #
" " "
MANPATH manpath MANPATH
" " "
, , ,
# # #
for for for
" " "
rxman rxman rxman
" " "
, , ,
and and and
bourne bourn bourne
shell shell shell
users user user
. . .
X x X
" " "
XAUTHORITY xauthor XAUTHORITY
" " "
, , ,
X x X
split split split
( ( (
' ' '
' ' '
, , ,
$ $ $
ENV env ENV
{ { {
" " "
RXENV rxenv RXENV
" " "
} } }
) ) )
, , ,
X x X
) ) )
; ; ;
X x X
# # #
X x X
# # #
Braindead braindead Braindead
bourne bourn bourne
shell shell shell
, , ,
needs need need
to to to
be be be
given given give
a a a
$ $ $
PATH path PATH
. . .
. . .
. . .
X x X
# # #
We we We
would would would
rather rather rather
not not not
pass pass pass
the the the
current current current
$ $ $
PATH path PATH
, , ,
because becaus because
it it it
might might might
not not not
work work work
X x X
# # #
on on on
the the the
destination destin destination
machine machin machine
. . .
I i I
' ' '
d d d
rather rather rather
it it it
was was be
set set set
by by by
the the the
user user user
' ' '
s s s
X x X
# # #
remote remot remote
shell shell shell
during dure during
the the the
rsh rsh rsh
. . .
X x X
# # #
Fortunately fortun Fortunately
, , ,
all all all
* * *
my my my
* * *
X x X
programs program program
are are be
in in in
an an an
arch arch arch
independant independ independant
place place place
, , ,
and and and
X x X
# # #
so so so
it it it
shouldn shouldn shouldn
' ' '
t t t
cos cos cos
a a a
problem problem problem
, , ,
locally local locally
. . .
X x X
# # #
We we We
check check check
against against against
$ $ $
RSHELL rshell RSHELL
, , ,
because becaus because
they they they
might might might
be be be
running run run
another anoth another
shell shell shell
, , ,
X x X
# # #
differant differ differant
from from from
their their their
login login login
shell shell shell
. . .
I i I
know know know
, , ,
sounds sound sound
weird weird weird
, , ,
but but but
it it it
' ' '
s s s
too too too
X x X
# # #
common common common
round round round
here here here
. . .
X x X
# # #
I i I
' ' '
ve ve ve
also also also
included includ include
ksh ksh ksh
in in in
the the the
brain brain brain
- - -
damage damag damage
, , ,
cos cos co
I i I
can can can
' ' '
t t t
see see see
an an an
easy easi easy
way way way
X x X
# # #
to to to
pass pass pass
throught throught throught
$ $ $
ENV env ENV
{ { {
" " "
ENV env ENV
" " "
} } }
without without without
it it it
being be be
too too too
late late late
. . .
( ( (
We we We
only onli only
have have have
X x X
# # #
one one one
person person person
who who who
has has have
ksh ksh ksh
as as a
a a a
login login login
shell shell shell
anyway anyway anyway
. . .
. . .
. . .
) ) )
X x X
# # #
Oh oh Oh
, , ,
yeah yeah yeah
. . .
. . .
we we we
are are be
assuming assum assume
that that that
if if if
it it it
' ' '
s s s
bourne bourn bourne
shell shell shell
here here here
, , ,
then then then
it it it
' ' '
s s s
X x X
# # #
bourne bourn bourne
shell shell shell
there there there
. . .
Much much Much
more more more
important import important
than than than
this this this
is is be
that that that
it it it
it it it
ISNT isnt ISNT
X x X
# # #
bourne bourn bourne
shell shell shell
here here here
, , ,
it it it
better better good
not not not
be be be
bourne bourn bourne
shell shell shell
there there there
. . .
X x X
# # #
X x X
if if if
( ( (
$ $ $
RSHELL rshell RSHELL
= = =
~ ~ ~
m m m
# # #
/ / /
( ( (
k k k
) ) )
? ? ?
sh sh sh
# # #
) ) )
{ { {
push push push
( ( (
@ @ @
VARS var VARS
, , ,
" " "
PATH path PATH
" " "
) ) )
; ; ;
} } }
X x X
} } }
X x X
# # #
X x X
# # #
Validate valid Validate
$ $ $
PWD pwd PWD
routine routin routine
. . .
. . .
. . .
X x X
# # #
Xsub xsub Xsub
validate valid validate
_ _ _
pwd pwd pwd
{ { {
X x X
local local local
( ( (
@ @ @
pwdstats pwdstat pwdstats
, , ,
@ @ @
dotstats dotstat dotstats
) ) )
; ; ;
X x X
local local local
( ( (
$ $ $
pwd pwd pwd
) ) )
= = =
$ $ $
_ _ _
[ [ [
0 0 0
] ] ]
; ; ;
X x X
X x X
unless unless unless
( ( (
defined defin define
( ( (
$ $ $
pwd pwd pwd
) ) )
) ) )
{ { {
return return return
undef undef undef
; ; ;
} } }
; ; ;
X x X
unless unless unless
( ( (
@ @ @
dotstats dotstat dotstats
= = =
stat stat stat
( ( (
" " "
. . .
" " "
) ) )
) ) )
{ { {
return return return
undef undef undef
; ; ;
} } }
; ; ;
X x X
unless unless unless
( ( (
@ @ @
pwdstats pwdstat pwdstats
= = =
stat stat stat
( ( (
$ $ $
pwd pwd pwd
) ) )
) ) )
{ { {
return return return
undef undef undef
; ; ;
} } }
; ; ;
X x X
if if if
( ( (
( ( (
$ $ $
pwdstats pwdstat pwdstats
[ [ [
$ $ $
ST st ST
_ _ _
DEV dev DEV
] ] ]
! ! !
= = =
$ $ $
dotstats dotstat dotstats
[ [ [
$ $ $
ST st ST
_ _ _
DEV dev DEV
] ] ]
) ) )
| | |
| | |
X x X
( ( (
$ $ $
pwdstats pwdstat pwdstats
[ [ [
$ $ $
ST st ST
_ _ _
INO ino INO
] ] ]
! ! !
= = =
$ $ $
dotstats dotstat dotstats
[ [ [
$ $ $
ST st ST
_ _ _
INO ino INO
] ] ]
) ) )
) ) )
{ { {
return return return
undef undef undef
; ; ;
} } }
; ; ;
X x X
$ $ $
pwd pwd pwd
; ; ;
X x X
} } }
X x X
# # #
X x X
# # #
Try tri Try
and and and
find find find
a a a
nice nice nice
, , ,
valid valid valid
, , ,
pwd pwd pwd
. . .
X x X
# # #
XPRESENT xpresent XPRESENT
: : :
{ { {
X x X
if if if
( ( (
$ $ $
PWD pwd PWD
= = =
$ $ $
ENV env ENV
{ { {
" " "
PWD pwd PWD
" " "
} } }
) ) )
{ { {
X x X
$ $ $
FOOPWD foopwd FOOPWD
= = =
$ $ $
PWD pwd PWD
; ; ;
X x X
$ $ $
FOOPWD foopwd FOOPWD
= = =
~ ~ ~
s s s
# # #
( ( (
/ / /
tmp tmp tmp
_ _ _
mnt mnt mnt
| | |
/ / /
export export export
) ) )
? ? ?
/ / /
( ( (
. . .
* * *
) ) )
# # #
/ / /
$ $ $
2 2 2
# # #
; ; ;
X x X
$ $ $
PWD pwd PWD
= = =
& & &
validate valid validate
_ _ _
pwd pwd pwd
( ( (
$ $ $
FOOPWD foopwd FOOPWD
) ) )
| | |
| | |
& & &
validate valid validate
_ _ _
pwd pwd pwd
( ( (
$ $ $
PWD pwd PWD
) ) )
; ; ;
X x X
} } }
; ; ;
X x X
unless unless unless
( ( (
$ $ $
PWD pwd PWD
) ) )
{ { {
X x X
chop chop chop
( ( (
$ $ $
PWD pwd PWD
= = =
` ` `
pwd pwd pwd
` ` `
) ) )
; ; ;
X x X
$ $ $
FOOPWD foopwd FOOPWD
= = =
$ $ $
PWD pwd PWD
; ; ;
X x X
$ $ $
FOOPWD foopwd FOOPWD
= = =
~ ~ ~
s s s
# # #
( ( (
/ / /
tmp tmp tmp
_ _ _
mnt mnt mnt
| | |
/ / /
export export export
) ) )
? ? ?
/ / /
( ( (
. . .
* * *
) ) )
# # #
/ / /
$ $ $
2 2 2
# # #
; ; ;
X x X
$ $ $
PWD pwd PWD
= = =
& & &
validate valid validate
_ _ _
pwd pwd pwd
( ( (
$ $ $
FOOPWD foopwd FOOPWD
) ) )
| | |
| | |
& & &
validate valid validate
_ _ _
pwd pwd pwd
( ( (
$ $ $
PWD pwd PWD
) ) )
| | |
| | |
$ $ $
HOME home HOME
; ; ;
X x X
} } }
X x X
} } }
X x X
$ $ $
PWD pwd PWD
= = =
~ ~ ~
s s s
# # #
( ( (
. . .
* * *
) ) )
# # #
\ \ \
' ' '
$ $ $
1 1 1
\ \ \
' ' '
# # #
; ; ;
X x X
# # #
X x X
# # #
Try tri Try
to to to
find find find
somewhere somewher somewhere
nice nice nice
to to to
live live live
on on on
the the the
other other other
side side side
. . .
X x X
# # #
Xunless xunless Xunless
( ( (
$ $ $
OffSite offsit OffSite
) ) )
{ { {
X x X
unshift unshift unshift
( ( (
@ @ @
STUFF stuff STUFF
, , ,
" " "
test test test
" " "
, , ,
" " "
- - -
d d d
" " "
, , ,
$ $ $
PWD pwd PWD
, , ,
" " "
& & &
& & &
" " "
, , ,
" " "
cd cd cd
" " "
, , ,
$ $ $
PWD pwd PWD
, , ,
" " "
; ; ;
" " "
) ) )
; ; ;
X x X
} } }
X x X
# # #
X x X
# # #
Start start Start
building build build
the the the
full full full
command command command
. . .
X x X
# # #
Xforeach xforeach Xforeach
$ $ $
var var var
( ( (
@ @ @
VARS var VARS
) ) )
{ { {
X x X
( ( (
$ $ $
val val val
= = =
$ $ $
ENV env ENV
{ { {
$ $ $
var var var
} } }
) ) )
& & &
& & &
X x X
unshift unshift unshift
( ( (
@ @ @
STUFF stuff STUFF
, , ,
" " "
setenv setenv setenv
" " "
, , ,
" " "
$ $ $
var var var
" " "
, , ,
" " "
\ \ \
' ' '
" " "
. . .
" " "
$ $ $
val val val
" " "
. . .
" " "
\ \ \
' ' '
" " "
, , ,
" " "
; ; ;
" " "
) ) )
; ; ;
X x X
} } }
X x X
# # #
X x X
# # #
Some some Some
commands command command
to to to
do do do
on on on
the the the
other other other
side side side
. . .
. . .
. . .
X x X
# # #
Xunshift xunshift Xunshift
( ( (
@ @ @
STUFF stuff STUFF
, , ,
" " "
set set set
" " "
, , ,
" " "
nonomatch nonomatch nonomatch
" " "
, , ,
" " "
; ; ;
" " "
) ) )
; ; ;
# # #
only onli only
if if if
we we we
are are be
using use use
csh csh csh
. . .
X x X
# # #
X x X
# # #
Build build Build
the the the
remote remot remote
command command command
. . .
X x X
# # #
X x X
$ $ $
REMOTE remot REMOTE
= = =
( ( (
" " "
( ( (
umask umask umask
077 077 077
; ; ;
( ( (
( ( (
" " "
. . .
join join join
( ( (
" " "
" " "
, , ,
@ @ @
STUFF stuff STUFF
, , ,
@ @ @
ARGV argv ARGV
) ) )
. . .
" " "
) ) )
< < <
/ / /
dev dev dev
/ / /
null null null
> > >
& & &
$ $ $
LOGF logf LOGF
& & &
) ) )
) ) )
" " "
) ) )
; ; ;
X x X
$ $ $
REMOTE remot REMOTE
= = =
~ ~ ~
s s s
# # #
\ \ \
" " "
# # #
\ \ \
\ \ \
\ \ \
" " "
# # #
g g g
; ; ;
X x X
$ $ $
REMOTE remot REMOTE
= = =
" " "
\ \ \
" " "
" " "
. . .
$ $ $
REMOTE remot REMOTE
. . .
" " "
\ \ \
" " "
" " "
; ; ;
X x X
# # #
X x X
# # #
Build build Build
the the the
arg arg arg
list list list
for for for
the the the
exec exec exec
. . .
X x X
# # #
X x X
@ @ @
COMM comm COMM
= = =
( ( (
$ $ $
RSH rsh RSH
, , ,
@ @ @
LUser luser LUser
, , ,
" " "
$ $ $
MACH mach MACH
" " "
, , ,
" " "
csh csh csh
" " "
, , ,
" " "
- - -
fc fc fc
" " "
, , ,
$ $ $
REMOTE remot REMOTE
) ) )
; ; ;
X x X
# # #
X x X
# # #
Do do Do
it it it
! ! !
X x X
# # #
Xif xif Xif
( ( (
$ $ $
debug debug debug
) ) )
{ { {
X x X
print print print
" " "
@ @ @
COMM comm COMM
\ \ \
n n n
" " "
; ; ;
X x X
} } }
else els else
{ { {
X x X
exec exec exec
@ @ @
COMM comm COMM
; ; ;
X x X
} } }
X x X
# # #
X x X
# # #
Rsh rsh Rsh
doesn doesn doesn
' ' '
t t t
return return return
any ani any
indication indic indication
of of of
how how how
it it it
went went go
over over over
X x X
# # #
on on on
the the the
other other other
side side side
, , ,
but but but
that that that
' ' '
s s s
OK ok OK
, , ,
cos cos co
we we we
aint aint aint
going go go
to to to
X x X
# # #
wait wait wait
around around around
to to to
see see see
what what what
happened happen happen
. . .
X x X
# # #
Xexit xexit Xexit
0 0 0
; ; ;
X x X
# # #
X x X
# # #
tHe the tHe
ENd end ENd
END end END
_ _ _
OF of OF
_ _ _
FILE file FILE
if if if
test test test
9028 9028 9028
- - -
ne ne ne
` ` `
wc wc wc
- - -
c c c
< < <
' ' '
rx rx rx
. . .
pl pl pl
' ' '
` ` `
; ; ;
then then then
echo echo echo
shar shar shar
: : :
\ \ \
" " "
' ' '
rx rx rx
. . .
pl pl pl
' ' '
\ \ \
" " "
unpacked unpack unpack
with with with
wrong wrong wrong
size size size
! ! !
fi fi fi
chmod chmod chmod
+ + +
x x x
' ' '
rx rx rx
. . .
pl pl pl
' ' '
# # #
end end end
of of of
' ' '
rx rx rx
. . .
pl pl pl
' ' '
fi fi fi
echo echo echo
shar shar shar
: : :
End end End
of of of
archive archiv archive
1 1 1
\ \ \
( ( (
of of of
1 1 1
\ \ \
) ) )
. . .
cp cp cp
/ / /
dev dev dev
/ / /
null null null
ark ark ark
1 1 1
isdone isdon isdone
MISSING miss MISSING
= = =
" " "
" " "
for for for
I i I
in in in
1 1 1
; ; ;
do do do
if if if
test test test
! ! !
- - -
f f f
ark ark ark
$ $ $
{ { {
I i I
} } }
isdone isdon isdone
; ; ;
then then then
MISSING miss MISSING
= = =
" " "
$ $ $
{ { {
MISSING miss MISSING
} } }
$ $ $
{ { {
I i I
} } }
" " "
fi fi fi
done done do
if if if
test test test
" " "
$ $ $
{ { {
MISSING miss MISSING
} } }
" " "
= = =
" " "
" " "
; ; ;
then then then
echo echo echo
You you You
have have have
the the the
archive archiv archive
. . .
rm rm rm
- - -
f f f
ark ark ark
[ [ [
1 1 1
- - -
9 9 9
] ] ]
isdone isdon isdone
else els else
echo echo echo
You you You
still still still
need need need
to to to
unpack unpack unpack
the the the
following follow following
archives archiv archive
: : :
echo echo echo
" " "
" " "
$ $ $
{ { {
MISSING miss MISSING
} } }
fi fi fi
# # #
# # #
End end End
of of of
shell shell shell
archive archiv archive
. . .
exit exit exit
0 0 0
- - -
- - -
Duncan duncan Duncan
Sinclair sinclair Sinclair
| | |
sinclair sinclair sinclair
@ @ @
dcs dcs dc
. . .
gla gla gla
. . .
ac ac ac
. . .
uk uk uk
| | |
sinclair sinclair sinclair
@ @ @
uk uk uk
. . .
ac ac ac
. . .
gla gla gla
. . .
dcs dcs dcs
- - -
- - -
- - -
Would would Would
the the the
* * *
real real real
* * *
UNIX unix UNIX
Operating oper Operating
System system System
please pleas please
stand stand stand
up up up
. . .
- - -
- - -
- - -
