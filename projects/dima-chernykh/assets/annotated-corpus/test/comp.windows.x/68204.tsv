From from From
: : :
duggan duggan duggan
@ @ @
ecs ec ec
. . .
umass umass uma
. . .
edu edu edu
Subject subject Subject
: : :
Creating creat Creating
Your your Your
own own own
ColorMap colormap ColorMap
, , ,
i i i
. . .
e e e
. . .
Lookup lookup Lookup
Table tabl Table
in in in
X x X
11 11 11
R r R
4 4 4
Lines line Lines
: : :
99 99 99
Hello hello Hello
, , ,
Below below Below
I i I
have have have
the the the
copy copi copy
of of of
some some some
source sourc source
I i I
am am be
using use use
to to to
setup setup setup
a a a
user user user
- - -
specified specifi specify
color color color
- - -
map map map
for for for
X x X
R r R
11 11 11
V v V
4 4 4
. . .
I i I
am am be
attempting attempt attempt
to to to
create creat create
user user user
defined defin define
colors color color
in in in
terms term term
of of of
RGB rgb RGB
color color color
ranges rang range
. . .
The the The
calls call call
to to to
XAllocColor xalloccolor XAllocColor
prove prove prove
ineffective ineffect ineffective
. . .
Variables variabl Variables
are are be
defined defin define
are are be
as as a
follows follow follow
: : :
int int int
i i i
, , ,
j j j
, , ,
k k k
, , ,
lut lut lut
_ _ _
index index index
color color color
_ _ _
type type type
min min min
_ _ _
image imag image
, , ,
max max max
_ _ _
image imag image
; ; ;
color color color
_ _ _
type type type
image imag image
Pixel pixel Pixel
_ _ _
Value valu Value
_ _ _
Range rang Range
, , ,
last last last
_ _ _
image imag image
, , ,
start start start
, , ,
end end end
, , ,
jump jump jump
, , ,
lut lut lut
[ [ [
512 512 512
] ] ]
; ; ;
unsigned unsign unsigned
long long long
pixel pixel pixel
; ; ;
double doubl double
red red red
, , ,
green green green
, , ,
blue blue blue
; ; ;
/ / /
* * *
* * *
Data data Data
structure structur structure
used use use
by by by
color color color
operations oper operation
* * *
typedef typedef typedef
struct struct struct
{ { {
unsigned unsign unsigned
long long long
pixel pixel pixel
; ; ;
unsigned unsign unsigned
short short short
red red red
, , ,
green green green
, , ,
blue blue blue
; ; ;
char char char
flags flag flag
; ; ;
/ / /
- - -
* * *
do do do
_ _ _
red red red
, , ,
do do do
_ _ _
green green green
, , ,
do do do
_ _ _
blue blue blue
* * *
- - -
/ / /
char char char
pad pad pad
; ; ;
} } }
XColor xcolor XColor
; ; ;
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
/ / /
XColor xcolor XColor
rgbcolor rgbcolor rgbcolor
, , ,
hardwarecolor hardwarecolor hardwarecolor
; ; ;
With with With
color color color
_ _ _
type type type
defined defin define
as as a
{ { {
double doubl double
red red red
, , ,
double doubl double
green green green
, , ,
double doubl double
blue blue blue
} } }
. . .
What what What
I i I
need need need
to to to
know know know
is is be
how how how
to to to
set set set
[ [ [
is is be
it it it
possible possibl possible
] ] ]
the the the
values valu value
in in in
hardwarecolor hardwarecolor hardwarecolor
to to to
work work work
within within within
the the the
call call call
to to to
XAllocColor xalloccolor XAllocColor
: : :
start start start
. . .
red red red
= = =
( ( (
int int int
) ) )
255 255 255
* * *
min min min
_ _ _
image imag image
. . .
red red red
; ; ;
/ / /
* * *
0 0 0
. . .
. . .
255 255 255
* * *
/ / /
end end end
. . .
red red red
= = =
( ( (
int int int
) ) )
255 255 255
* * *
max max max
_ _ _
image imag image
. . .
red red red
; ; ;
/ / /
* * *
0 0 0
. . .
. . .
255 255 255
* * *
/ / /
jump jump jump
. . .
red red red
= = =
( ( (
int int int
) ) )
( ( (
( ( (
end end end
. . .
red red red
- - -
start start start
. . .
red red red
) ) )
/ / /
7 7 7
) ) )
; ; ;
start start start
. . .
green green green
= = =
( ( (
int int int
) ) )
255 255 255
* * *
min min min
_ _ _
image imag image
. . .
green green green
; ; ;
/ / /
* * *
0 0 0
. . .
. . .
255 255 255
* * *
/ / /
end end end
. . .
green green green
= = =
( ( (
int int int
) ) )
255 255 255
* * *
max max max
_ _ _
image imag image
. . .
green green green
; ; ;
/ / /
* * *
0 0 0
. . .
. . .
255 255 255
* * *
/ / /
jump jump jump
. . .
green green green
= = =
( ( (
int int int
) ) )
( ( (
( ( (
end end end
. . .
green green green
- - -
start start start
. . .
green green green
) ) )
/ / /
7 7 7
) ) )
; ; ;
start start start
. . .
blue blue blue
= = =
( ( (
int int int
) ) )
255 255 255
* * *
min min min
_ _ _
image imag image
. . .
blue blue blue
; ; ;
/ / /
* * *
0 0 0
. . .
. . .
255 255 255
* * *
/ / /
end end end
. . .
blue blue blue
= = =
( ( (
int int int
) ) )
255 255 255
* * *
max max max
_ _ _
image imag image
. . .
blue blue blue
; ; ;
/ / /
* * *
0 0 0
. . .
. . .
255 255 255
* * *
/ / /
jump jump jump
. . .
blue blue blue
= = =
( ( (
int int int
) ) )
( ( (
( ( (
end end end
. . .
blue blue blue
- - -
start start start
. . .
blue blue blue
) ) )
/ / /
7 7 7
) ) )
; ; ;
lut lut lut
_ _ _
index index index
= = =
0 0 0
; ; ;
for for for
( ( (
i i i
= = =
0 0 0
; ; ;
i i i
< < <
8 8 8
; ; ;
i i i
+ + +
+ + +
) ) )
for for for
( ( (
j j j
= = =
0 0 0
; ; ;
j j j
< < <
8 8 8
; ; ;
j j j
+ + +
+ + +
) ) )
for for for
( ( (
k k k
= = =
0 0 0
; ; ;
k k k
< < <
8 8 8
; ; ;
k k k
+ + +
+ + +
) ) )
{ { {
if if if
( ( (
i i i
= = =
= = =
0 0 0
| | |
| | |
jump jump jump
. . .
red red red
< < <
1 1 1
) ) )
lut lut lut
[ [ [
lut lut lut
_ _ _
index index index
] ] ]
. . .
red red red
= = =
start start start
. . .
red red red
; ; ;
else els else
lut lut lut
[ [ [
lut lut lut
_ _ _
index index index
] ] ]
. . .
red red red
= = =
jump jump jump
. . .
red red red
* * *
i i i
- - -
1 1 1
; ; ;
if if if
( ( (
j j j
= = =
= = =
0 0 0
| | |
| | |
jump jump jump
. . .
green green green
< < <
1 1 1
) ) )
lut lut lut
[ [ [
lut lut lut
_ _ _
index index index
] ] ]
. . .
green green green
= = =
start start start
. . .
green green green
; ; ;
else els else
lut lut lut
[ [ [
lut lut lut
_ _ _
index index index
] ] ]
. . .
green green green
= = =
jump jump jump
. . .
green green green
* * *
j j j
- - -
1 1 1
; ; ;
if if if
( ( (
k k k
= = =
= = =
0 0 0
| | |
| | |
jump jump jump
. . .
blue blue blue
< < <
1 1 1
) ) )
lut lut lut
[ [ [
lut lut lut
_ _ _
index index index
] ] ]
. . .
blue blue blue
= = =
start start start
. . .
blue blue blue
; ; ;
else els else
lut lut lut
[ [ [
lut lut lut
_ _ _
index index index
] ] ]
. . .
blue blue blue
= = =
jump jump jump
. . .
blue blue blue
* * *
k k k
- - -
1 1 1
; ; ;
hardwarecolor hardwarecolor hardwarecolor
. . .
red red red
= = =
( ( (
short short short
) ) )
lut lut lut
[ [ [
lut lut lut
_ _ _
index index index
] ] ]
. . .
red red red
; ; ;
hardwarecolor hardwarecolor hardwarecolor
. . .
green green green
= = =
( ( (
short short short
) ) )
lut lut lut
[ [ [
lut lut lut
_ _ _
index index index
] ] ]
. . .
green green green
; ; ;
hardwarecolor hardwarecolor hardwarecolor
. . .
blue blue blue
= = =
( ( (
short short short
) ) )
lut lut lut
[ [ [
lut lut lut
_ _ _
index index index
] ] ]
. . .
blue blue blue
; ; ;
hardwarecolor hardwarecolor hardwarecolor
. . .
pixel pixel pixel
= = =
lut lut lut
_ _ _
index index index
; ; ;
printf printf printf
( ( (
" " "
HW hw HW
1 1 1
: : :
i i i
= = =
% % %
d d d
: : :
% % %
d d d
% % %
d d d
% % %
d d d
: : :
pixel pixel pixel
= = =
% % %
d d d
\ \ \
n n n
" " "
, , ,
lut lut lut
_ _ _
index index index
, , ,
hardwarecolor hardwarecolor hardwarecolor
. . .
red red red
, , ,
hardwarecolor hardwarecolor hardwarecolor
. . .
green green green
, , ,
hardwarecolor hardwarecolor hardwarecolor
. . .
blue blue blue
, , ,
hardwarecolor hardwarecolor hardwarecolor
. . .
pixel pixel pixel
) ) )
; ; ;
status status status
= = =
XAllocColor xalloccolor XAllocColor
( ( (
dpy dpi dpy
, , ,
colormap colormap colormap
, , ,
& & &
hardwarecolor hardwarecolor hardwarecolor
) ) )
; ; ;
printf printf printf
( ( (
" " "
HW hw HW
2 2 2
: : :
i i i
= = =
% % %
d d d
: : :
% % %
d d d
% % %
d d d
% % %
d d d
: : :
pixel pixel pixel
= = =
% % %
d d d
\ \ \
n n n
" " "
, , ,
lut lut lut
_ _ _
index index index
, , ,
hardwarecolor hardwarecolor hardwarecolor
. . .
red red red
, , ,
hardwarecolor hardwarecolor hardwarecolor
. . .
green green green
, , ,
hardwarecolor hardwarecolor hardwarecolor
. . .
blue blue blue
, , ,
hardwarecolor hardwarecolor hardwarecolor
. . .
pixel pixel pixel
) ) )
; ; ;
if if if
( ( (
status status status
! ! !
= = =
0 0 0
) ) )
{ { {
XSetForeground xsetforeground XSetForeground
( ( (
dpy dpi dpy
, , ,
gc gc gc
, , ,
hardwarecolor hardwarecolor hardwarecolor
. . .
pixel pixel pixel
) ) )
; ; ;
XFillRectangle xfillrectangl XFillRectangle
( ( (
dpy dpi dpy
, , ,
win win win
, , ,
gc gc gc
, , ,
1 1 1
, , ,
1 1 1
, , ,
MAXCOLUMN maxcolumn MAXCOLUMN
, , ,
MAXROW maxrow MAXROW
) ) )
; ; ;
XFlush xflush XFlush
( ( (
dpy dpi dpy
) ) )
; ; ;
sleep sleep sleep
( ( (
10 10 10
) ) )
; ; ;
printf printf printf
( ( (
" " "
% % %
d d d
: : :
% % %
f f f
% % %
f f f
% % %
f f f
at at at
% % %
d d d
\ \ \
n n n
" " "
, , ,
lut lut lut
_ _ _
index index index
, , ,
lut lut lut
[ [ [
lut lut lut
_ _ _
index index index
] ] ]
. . .
re re re
lut lut lut
[ [ [
lut lut lut
_ _ _
index index index
] ] ]
. . .
green green green
, , ,
lut lut lut
[ [ [
lut lut lut
_ _ _
index index index
] ] ]
. . .
blue blue blue
, , ,
hardwarecolor hardwarecolor hardwarecolor
. . .
pixel pixel pixel
) ) )
; ; ;
} } }
lut lut lut
_ _ _
index index index
= = =
lut lut lut
_ _ _
index index index
+ + +
1 1 1
; ; ;
} } }
Thanks thank Thanks
in in in
advance advanc advance
to to to
anyone anyon anyone
who who who
can can can
help help help
me me me
with with with
this this this
problem problem problem
. . .
Sincerely sincer Sincerely
, , ,
John john John
F f F
. . .
Duggan duggan Duggan
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
John john John
F f F
. . .
Duggan duggan Duggan
alias alia alias
: : :
Genghis genghi Genghis
Khan khan Khan
Engineering engin Engineering
Computer comput Computer
Services servic Services
, , ,
internet internet internet
: : :
DUGGAN duggan DUGGAN
@ @ @
ecs ec ec
. . .
umass umass uma
. . .
edu edu edu
Univ univ Univ
. . .
of of of
Massachusetts massachusett Massachusetts
, , ,
Amherst amherst Amherst
, , ,
MA ma MA
01003 01003 01003
Bitnet bitnet Bitnet
: : :
DUGGAN duggan DUGGAN
@ @ @
umaecs umaec umaecs
