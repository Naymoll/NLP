From from From
: : :
bill bill bill
@ @ @
solaria solaria solarium
( ( (
Bill bill Bill
Neisius neisius Neisius
) ) )
Subject subject Subject
: : :
Re re Re
: : :
RGB rgb RGB
to to to
HVS hvs HVS
, , ,
and and and
back back back
Reply repli Reply
- - -
To to To
: : :
bill bill bill
@ @ @
solaria solaria solarium
. . .
hac hac hac
. . .
com com com
Lines line Lines
: : :
83 83 83
X x X
- - -
Newsreader newsread Newsreader
: : :
TIN tin TIN
[ [ [
version version version
1 1 1
. . .
1 1 1
PL pl PL
6 6 6
] ] ]
Remco remco Remco
Hartog hartog Hartog
( ( (
remcoha remcoha remcoha
@ @ @
htsa htsa htsa
. . .
aha aha aha
. . .
nl nl nl
) ) )
wrote wrote write
: : :
: : :
I i I
have have have
a a a
little littl little
question question question
: : :
: : :
: : :
I i I
need need need
to to to
convert convert convert
RGB rgb RGB
- - -
coded code cod
( ( (
Red red Red
- - -
Green green Green
- - -
Blue blue Blue
) ) )
colors color color
into into into
HVS hvs HVS
- - -
coded code cod
: : :
( ( (
Hue hue Hue
- - -
Value valu Value
- - -
Saturnation saturn Saturnation
) ) )
colors color color
. . .
Does doe Does
anyone anyon anyone
know know know
which which which
formulas formula formulas
to to to
: : :
use use use
? ? ?
Lets let Lets
see see see
if if if
I i I
have have have
this this this
right right right
. . .
. . .
. . .
HSV hsv HSV
= = =
= = =
HSB hsb HSB
= = =
= = =
HSL hsl HSL
. . .
. . .
. . .
and and and
none none none
of of of
those those those
are are be
the the the
same same same
as as a
HLS hls HLS
. . .
Hopefully hope Hopefully
, , ,
HVS hvs HVS
is is be
just just just
a a a
transposition transposit transposition
of of of
HSV hsv HSV
, , ,
and and and
not not not
yet yet yet
another anoth another
color color color
model model model
. . .
. . .
. . .
The the The
following follow following
code code code
should should should
do do do
the the the
HSV hsv HSV
( ( (
HSL hsl HSL
) ) )
coding code coding
( ( (
I i I
haven haven haven
' ' '
t t t
tried tri try
it it it
yet yet yet
) ) )
( ( (
Thanks thank Thanks
to to to
bultman bultman bultman
@ @ @
dgw dgw dgw
. . .
rws rws rws
. . .
nl nl nl
) ) )
Another anoth Another
possibility possibl possibility
is is be
/ / /
mirrors mirror mirror
/ / /
msdos msdos msdos
/ / /
graphics graphic graphic
/ / /
graphgem graphgem graphgem
. . .
zip zip zip
on on on
wuarchive wuarchiv wuarchive
. . .
wustl wustl wustl
. . .
edu edu edu
. . .
Bill bill Bill
Neisius neisius Neisius
bill bill bill
@ @ @
solaria solaria solarium
. . .
hac hac hac
. . .
com com com
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
The the The
following follow following
code code code
is is be
from from from
the the the
starbase starbas starbase
( ( (
HP hp HP
) ) )
manual manual manual
: : :
( ( (
all all all
coordinates coordin coordinate
noralised noralis noralised
at at at
0 0 0
- - -
1 1 1
interval interv interval
) ) )
hsl hsl hsl
_ _ _
to to to
_ _ _
rgb rgb rgb
( ( (
hue hue hue
, , ,
saturation satur saturation
, , ,
luminosity luminos luminosity
, , ,
red red red
, , ,
green green green
, , ,
blue blue blue
) ) )
float float float
hue hue hue
, , ,
saturation satur saturation
, , ,
luminosity luminos luminosity
; ; ;
/ / /
* * *
input input input
in in in
HSL hsl HSL
* * *
/ / /
float float float
* * *
red red red
, , ,
* * *
green green green
, , ,
* * *
blue blue blue
; ; ;
/ / /
* * *
output output output
in in in
RGB rgb RGB
* * *
/ / /
{ { {
float float float
frac frac frac
, , ,
lx lx lx
, , ,
ly ly ly
, , ,
lz lz lz
; ; ;
/ / /
* * *
temporaries temporari temporary
* * *
/ / /
hue hue hue
= = =
6 6 6
* * *
hue hue hue
; ; ;
frac frac frac
= = =
hue hue hue
- - -
( ( (
int int int
) ) )
hue hue hue
; ; ;
lx lx lx
= = =
luminosity luminos luminosity
* * *
( ( (
1 1 1
- - -
saturation satur saturation
) ) )
; ; ;
ly ly ly
= = =
luminosity luminos luminosity
* * *
( ( (
1 1 1
- - -
saturation satur saturation
* * *
frac frac frac
) ) )
; ; ;
lz lz lz
= = =
luminosity luminos luminosity
* * *
( ( (
1 1 1
- - -
saturation satur saturation
* * *
( ( (
1 1 1
- - -
frac frac frac
) ) )
) ) )
; ; ;
switch switch switch
( ( (
( ( (
int int int
) ) )
hue hue hue
) ) )
{ { {
case case case
0 0 0
: : :
case case case
6 6 6
: : :
* * *
red red red
= = =
luminosity luminos luminosity
; ; ;
* * *
green green green
= = =
lz lz lz
; ; ;
* * *
blue blue blue
= = =
lx lx lx
; ; ;
break break break
; ; ;
case case case
1 1 1
: : :
* * *
red red red
= = =
ly ly ly
; ; ;
* * *
green green green
= = =
luminosity luminos luminosity
; ; ;
* * *
blue blue blue
= = =
lx lx lx
; ; ;
break break break
; ; ;
case case case
2 2 2
: : :
* * *
red red red
= = =
lx lx lx
; ; ;
* * *
green green green
= = =
luminosity luminos luminosity
; ; ;
* * *
blue blue blue
= = =
lz lz lz
; ; ;
break break break
; ; ;
case case case
3 3 3
: : :
* * *
red red red
= = =
lx lx lx
; ; ;
* * *
green green green
= = =
ly ly ly
; ; ;
* * *
blue blue blue
= = =
luminosity luminos luminosity
; ; ;
break break break
; ; ;
case case case
4 4 4
: : :
* * *
red red red
= = =
lz lz lz
; ; ;
* * *
green green green
= = =
lx lx lx
; ; ;
* * *
blue blue blue
= = =
luminosity luminos luminosity
; ; ;
break break break
; ; ;
case case case
5 5 5
: : :
* * *
red red red
= = =
luminosity luminos luminosity
; ; ;
* * *
green green green
= = =
lx lx lx
; ; ;
* * *
blue blue blue
= = =
ly ly ly
; ; ;
break break break
; ; ;
} } }
} } }
/ / /
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
* * *
/ / /
rgb rgb rgb
_ _ _
to to to
_ _ _
hsl hsl hsl
( ( (
red red red
, , ,
green green green
, , ,
blue blue blue
, , ,
hue hue hue
, , ,
saturation satur saturation
, , ,
luminosity luminos luminosity
) ) )
# # #
define defin define
max max max
( ( (
a a a
, , ,
b b b
, , ,
c c c
) ) )
( ( (
( ( (
a a a
> > >
b b b
? ? ?
a a a
: : :
b b b
) ) )
> > >
c c c
? ? ?
( ( (
a a a
> > >
b b b
? ? ?
a a a
: : :
b b b
) ) )
: : :
c c c
) ) )
# # #
define defin define
min min min
( ( (
a a a
, , ,
b b b
, , ,
c c c
) ) )
( ( (
( ( (
a a a
< < <
b b b
? ? ?
a a a
: : :
b b b
) ) )
< < <
c c c
? ? ?
( ( (
a a a
< < <
b b b
? ? ?
a a a
: : :
b b b
) ) )
: : :
c c c
) ) )
float float float
red red red
, , ,
green green green
, , ,
blue blue blue
; ; ;
/ / /
* * *
input input input
in in in
RGB rgb RGB
* * *
/ / /
float float float
* * *
hue hue hue
, , ,
* * *
saturation satur saturation
, , ,
* * *
luminosity luminos luminosity
; ; ;
/ / /
* * *
output output output
in in in
HSL hsl HSL
* * *
/ / /
{ { {
float float float
x x x
, , ,
tempr tempr tempr
, , ,
tempg tempg tempg
, , ,
tempb tempb tempb
; ; ;
/ / /
* * *
temporary temporari temporary
values valu value
* * *
/ / /
* * *
hue hue hue
= = =
0 0 0
. . .
0 0 0
; ; ;
* * *
saturation satur saturation
= = =
1 1 1
. . .
0 0 0
; ; ;
* * *
luminosity luminos luminosity
= = =
max max max
( ( (
red red red
, , ,
green green green
, , ,
blue blue blue
) ) )
; ; ;
x x x
= = =
min min min
( ( (
red red red
, , ,
green green green
, , ,
blue blue blue
) ) )
; ; ;
if if if
( ( (
* * *
luminosity luminos luminosity
! ! !
= = =
0 0 0
. . .
0 0 0
) ) )
{ { {
/ / /
* * *
calculate calcul calculate
only onli only
if if if
necessary necessari necessary
* * *
/ / /
* * *
saturation satur saturation
= = =
( ( (
* * *
luminosity luminos luminosity
- - -
x x x
) ) )
/ / /
* * *
luminosity luminos luminosity
; ; ;
if if if
( ( (
* * *
saturation satur saturation
! ! !
= = =
0 0 0
. . .
0 0 0
) ) )
{ { {
/ / /
* * *
calculate calcul calculate
only onli only
if if if
necessary necessari necessary
* * *
/ / /
tempr tempr tempr
= = =
( ( (
* * *
luminosity luminos luminosity
- - -
red red red
) ) )
/ / /
( ( (
* * *
luminosity luminos luminosity
- - -
x x x
) ) )
; ; ;
tempg tempg tempg
= = =
( ( (
* * *
luminosity luminos luminosity
- - -
green green green
) ) )
/ / /
( ( (
* * *
luminosity luminos luminosity
- - -
x x x
) ) )
; ; ;
tempb tempb tempb
= = =
( ( (
* * *
luminosity luminos luminosity
- - -
blue blue blue
) ) )
/ / /
( ( (
* * *
luminosity luminos luminosity
- - -
x x x
) ) )
; ; ;
if if if
( ( (
red red red
= = =
= = =
* * *
luminosity luminos luminosity
) ) )
* * *
hue hue hue
= = =
( ( (
green green green
= = =
= = =
x x x
? ? ?
5 5 5
+ + +
tempb tempb tempb
: : :
1 1 1
- - -
tempg tempg tempg
) ) )
; ; ;
else els else
if if if
( ( (
green green green
= = =
= = =
* * *
luminosity luminos luminosity
) ) )
* * *
hue hue hue
= = =
( ( (
blue blue blue
= = =
= = =
x x x
? ? ?
1 1 1
+ + +
tempr tempr tempr
: : :
3 3 3
- - -
tempb tempb tempb
) ) )
; ; ;
else els else
* * *
hue hue hue
= = =
( ( (
red red red
= = =
= = =
x x x
? ? ?
3 3 3
+ + +
tempg tempg tempg
: : :
5 5 5
- - -
tempr tempr tempr
) ) )
; ; ;
* * *
hue hue hue
/ / /
= = =
6 6 6
; ; ;
} } }
} } }
} } }
