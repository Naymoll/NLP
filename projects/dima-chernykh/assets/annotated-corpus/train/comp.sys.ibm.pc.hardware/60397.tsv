From from From
: : :
eyal eyal eyal
@ @ @
fir fir fir
. . .
canberra canberra canberra
. . .
edu edu edu
. . .
au au au
( ( (
Eyal eyal Eyal
Lebedinsky lebedinski Lebedinsky
) ) )
Subject subject Subject
: : :
Re re Re
: : :
int int int
15 15 15
h h h
for for for
joysticks joystick joystick
is is be
slow slow slow
. . .
. . .
. . .
. . .
Organization organ Organization
: : :
Info info Info
Sci sci Sci
& & &
Eng eng Eng
, , ,
University univers University
of of of
Canberra canberra Canberra
, , ,
AUSTRALIA australia AUSTRALIA
Lines line Lines
: : :
89 89 89
In in In
< < <
1 1 1
ql ql ql
6 6 6
i i i
3 3 3
INN inn INN
8 8 8
uh uh uh
@ @ @
no no no
- - -
names name name
. . .
nerdc nerdc nerdc
. . .
ufl ufl ufl
. . .
edu edu edu
> > >
lioness lioness lioness
@ @ @
oak oak oak
. . .
circa circa circa
. . .
ufl ufl ufl
. . .
edu edu edu
writes write write
: : :
> > >
I i I
' ' '
m m m
using use use
int int int
15 15 15
h h h
to to to
read read read
my my my
joystick joystick joystick
, , ,
and and and
it it it
is is be
hideously hideous hideously
slow slow slow
. . .
Something someth Something
> > >
like like like
90 90 90
% % %
of of of
my my my
CPU cpu CPU
time time time
is is be
being be be
spent spent spent
reading read read
the the the
joystick joystick joystick
, , ,
and and and
this this this
> > >
is is be
in in in
a a a
program program program
that that that
does doe do
nothing noth nothing
but but but
printf printf printf
( ( (
) ) )
and and and
JoyRead joyread JoyRead
( ( (
) ) )
. . .
If if If
you you you
only onli only
do do do
read read read
/ / /
print print print
then then then
there there there
is is be
no no no
reason reason reason
for for for
the the the
joystick joystick joystick
stuff stuff stuff
not not not
to to to
take take take
90 90 90
% % %
of of of
the the the
time time time
even even even
if if if
it it it
is is be
efficient effici efficient
. . .
> > >
The the The
problem problem problem
is is be
that that that
a a a
lot lot lot
of of of
programs program program
trap trap trap
int int int
15 15 15
h h h
( ( (
like like like
SMARTDRV smartdrv SMARTDRV
) ) )
and and and
> > >
so so so
it it it
is is be
a a a
slow slow slow
as as a
hell hell hell
interface interfac interface
. . .
Can can Can
I i I
read read read
the the the
joystick joystick joystick
port port port
in in in
> > >
a a a
reasonably reason reasonably
safe safe safe
fashion fashion fashion
via via via
polling poll polling
? ? ?
And and And
that that that
isn isn isn
' ' '
t t t
platform platform platform
or or or
> > >
clockspeed clockspe clockspeed
specific specif specific
? ? ?
The the The
truth truth truth
is is be
that that that
int int int
15 15 15
H h H
joystick joystick joystick
reading read reading
IS is IS
slow slow slow
. . .
I i I
read read read
it it it
directly direct directly
from from from
the the the
hardware hardwar hardware
port port port
. . .
Note note Note
that that that
doing do do
so so so
exposes expos expose
you you you
to to to
intermittent intermitt intermittent
disturbance disturb disturbance
from from from
interrupts interrupt interrupt
, , ,
so so so
you you you
may may may
want want want
to to to
read read read
( ( (
say say say
) ) )
twice twice twice
in in in
a a a
row row row
and and and
keep keep keep
the the the
lower lower low
results result result
. . .
Don don Don
' ' '
t t t
just just just
turn turn turn
interrupts interrupt interrupt
off off off
, , ,
it it it
may may may
prove prove prove
detrimental detriment detrimental
to to to
the the the
health health health
of of of
any ani any
high high high
speed speed speed
comms comm comms
and and and
other other other
devices devic device
. . .
Here here Here
is is be
an an an
example exampl example
of of of
how how how
to to to
do do do
this this this
: : :
/ / /
* * *
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
joy joy joy
. . .
c c c
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
* * *
/ / /
/ / /
* * *
An an An
example exampl example
of of of
how how how
to to to
read read read
PC pc PC
joystick joystick joystick
port port port
by by by
polling poll poll
the the the
hardware hardwar hardware
port port port
* * *
directly direct directly
. . .
* * *
Uses use Uses
inp inp inp
( ( (
) ) )
/ / /
outp outp outp
( ( (
) ) )
for for for
byte byte byte
port port port
access access access
. . .
* * *
Will will Will
timeout timeout timeout
when when when
' ' '
int int int
count count count
= = =
0 0 0
' ' '
counts count count
up up up
to to to
zero zero zero
. . .
* * *
This this This
sample sampl sample
reads read read
one one one
port port port
( ( (
A a A
is is be
presented present present
and and and
B b B
is is be
in in in
the the the
comments comment comment
) ) )
. . .
* * *
You you You
can can can
read read read
both both both
at at at
once onc once
by by by
merging merg merge
the the the
two two two
, , ,
but but but
it it it
will will will
time time time
out out out
* * *
when when when
either either either
joystick joystick joystick
is is be
not not not
connected connect connect
. . .
* * *
* * *
There there There
is is be
no no no
need need need
to to to
optimize optim optimize
this this this
routine routin routine
since sinc since
it it it
runs run run
for for for
as as as
long long long
as as a
* * *
the the the
joystick joystick joystick
circuitry circuitri circuitry
needs need need
. . .
* * *
* * *
Written written Written
by by by
Eyal eyal Eyal
Lebedinsky lebedinski Lebedinsky
( ( (
eyal eyal eyal
@ @ @
ise ise ise
. . .
canberra canberra canberra
. . .
edu edu edu
. . .
au au au
) ) )
. . .
* * *
/ / /
# # #
include includ include
< < <
stdio stdio stdio
. . .
h h h
> > >
# # #
include includ include
< < <
stdlib stdlib stdlib
. . .
h h h
> > >
# # #
include includ include
< < <
conio conio conio
. . .
h h h
> > >
extern extern extern
int int int
readjoy readjoy readjoy
( ( (
int int int
* * *
x x x
, , ,
int int int
* * *
y y y
, , ,
int int int
* * *
b b b
1 1 1
, , ,
int int int
* * *
b b b
2 2 2
) ) )
; ; ;
# # #
define defin define
JOYPORT joyport JOYPORT
0 0 0
x x x
201 201 201
# # #
define defin define
XJOY xjoy XJOY
0 0 0
x x x
01 01 01
/ / /
* * *
for for for
joystick joystick joystick
B b B
use use use
0 0 0
x x x
04 04 04
* * *
/ / /
# # #
define defin define
YJOY yjoy YJOY
0 0 0
x x x
02 02 02
/ / /
* * *
for for for
joystick joystick joystick
B b B
use use use
0 0 0
x x x
08 08 08
* * *
/ / /
# # #
define defin define
XYMASK xymask XYMASK
( ( (
XJOY xjoy XJOY
| | |
YJOY yjoy YJOY
) ) )
# # #
define defin define
BUT but BUT
1 1 1
0 0 0
x x x
10 10 10
/ / /
* * *
for for for
joystick joystick joystick
B b B
use use use
0 0 0
x x x
40 40 40
* * *
/ / /
# # #
define defin define
BUT but BUT
2 2 2
0 0 0
x x x
20 20 20
/ / /
* * *
for for for
joystick joystick joystick
B b B
use use use
0 0 0
x x x
80 80 80
* * *
/ / /
int int int
/ / /
* * *
returns return return
0 0 0
if if if
ok ok ok
* * *
/ / /
readjoy readjoy readjoy
( ( (
int int int
* * *
x x x
, , ,
int int int
* * *
y y y
, , ,
int int int
* * *
b b b
1 1 1
, , ,
int int int
* * *
b b b
2 2 2
) ) )
{ { {
register regist register
int int int
count count count
; ; ;
register regist register
char char char
temp temp temp
, , ,
joy joy joy
; ; ;
temp temp temp
= = =
( ( (
char char char
) ) )
XYMASK xymask XYMASK
; ; ;
count count count
= = =
0 0 0
; ; ;
outp outp outp
( ( (
JOYPORT joyport JOYPORT
, , ,
0 0 0
) ) )
; ; ;
/ / /
* * *
set set set
trigger trigger trigger
* * *
/ / /
do do do
{ { {
temp temp temp
^ ^ ^
= = =
( ( (
joy joy joy
= = =
( ( (
char char char
) ) )
inp inp inp
( ( (
JOYPORT joyport JOYPORT
) ) )
) ) )
; ; ;
if if if
( ( (
temp temp temp
& & &
XJOY xjoy XJOY
) ) )
* * *
x x x
= = =
count count count
; ; ;
if if if
( ( (
temp temp temp
& & &
YJOY yjoy YJOY
) ) )
* * *
y y y
= = =
count count count
; ; ;
} } }
while while while
( ( (
+ + +
+ + +
count count count
& & &
& & &
( ( (
( ( (
temp temp temp
= = =
joy joy joy
) ) )
& & &
XYMASK xymask XYMASK
) ) )
) ) )
; ; ;
* * *
b b b
1 1 1
= = =
! ! !
( ( (
joy joy joy
& & &
BUT but BUT
1 1 1
) ) )
; ; ;
* * *
b b b
2 2 2
= = =
! ! !
( ( (
joy joy joy
& & &
BUT but BUT
2 2 2
) ) )
; ; ;
return return return
( ( (
! ! !
count count count
) ) )
; ; ;
} } }
/ / /
* * *
This this This
main main main
( ( (
) ) )
is is be
for for for
demonstration demonstr demonstration
. . .
* * *
/ / /
int int int
main main main
( ( (
) ) )
{ { {
int int int
rc rc rc
, , ,
x x x
, , ,
y y y
, , ,
b b b
1 1 1
, , ,
b b b
2 2 2
; ; ;
printf printf printf
( ( (
" " "
Hit hit Hit
any ani any
key key key
to to to
exit exit exit
\ \ \
n n n
" " "
) ) )
; ; ;
while while while
( ( (
! ! !
kbhit kbhit kbhit
( ( (
) ) )
) ) )
{ { {
rc rc rc
= = =
readjoy readjoy readjoy
( ( (
& & &
x x x
, , ,
& & &
y y y
, , ,
& & &
b b b
1 1 1
, , ,
& & &
b b b
2 2 2
) ) )
; ; ;
printf printf printf
( ( (
" " "
\ \ \
r r r
% % %
d d d
% % %
3 3 3
d d d
% % %
3 3 3
d d d
% % %
d d d
% % %
d d d
" " "
, , ,
rc rc rc
, , ,
x x x
, , ,
y y y
, , ,
b b b
1 1 1
, , ,
b b b
2 2 2
) ) )
; ; ;
} } }
} } }
