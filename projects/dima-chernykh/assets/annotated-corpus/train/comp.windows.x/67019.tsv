From from From
: : :
dyoung dyoung dyoung
@ @ @
media media medium
. . .
mit mit mit
. . .
edu edu edu
( ( (
David david David
Young young Young
) ) )
Subject subject Subject
: : :
Drawing draw Drawing
Lines line Lines
( ( (
inverse invers inverse
/ / /
xor xor xor
) ) )
Organization organ Organization
: : :
MIT mit MIT
Media media Media
Laboratory laboratori Laboratory
Lines line Lines
: : :
40 40 40
I i I
' ' '
m m m
trying tri try
to to to
write write write
some some some
code code code
that that that
lets let let
me me me
draw draw draw
lines line line
and and and
do do do
rubber rubber rubber
- - -
band band band
boxes box box
in in in
Motif motif Motif
/ / /
X x X
. . .
I i I
' ' '
m m m
running run run
on on on
an an an
8 8 8
- - -
bit bit bit
display display display
for for for
which which which
I i I
' ' '
ve ve ve
created creat create
a a a
colormap colormap colormap
and and and
am am be
using use use
almost almost almost
all all all
of of of
the the the
colors color color
. . .
I i I
want want want
to to to
draw draw draw
the the the
lines line line
in in in
a a a
drawing draw drawing
area area area
widget widget widget
- - -
- - -
a a a
widget widget widget
in in in
which which which
I i I
' ' '
m m m
displaying display display
a a a
bitmap bitmap bitmap
using use use
XPutImage xputimag XPutImage
( ( (
) ) )
. . .
If if If
doesn doesn doesn
' ' '
t t t
matter matter matter
if if if
the the the
lines line line
I i I
draw draw draw
interactively interact interactively
stay stay stay
around around around
when when when
the the the
window window window
is is be
refreshed refresh refresh
. . .
Currently current Currently
, , ,
to to to
draw draw draw
interactively interact interactively
, , ,
I i I
begin begin begin
with with with
: : :
/ / /
* * *
drawIndex drawindex drawIndex
is is be
an an an
colortable colort colortable
index index index
I i I
reserve reserv reserve
for for for
the the the
Foreground foreground Foreground
* * *
/ / /
/ / /
* * *
my my my
_ _ _
default default default
_ _ _
bg bg bg
_ _ _
color color color
is is be
the the the
color color color
index index index
for for for
the the the
background background background
of of of
my my my
image imag image
* * *
/ / /
palette palett palette
_ _ _
colors color color
[ [ [
drawIndex drawindex drawIndex
] ] ]
. . .
red red red
= = =
palette palett palette
_ _ _
colors color color
[ [ [
my my my
_ _ _
default default default
_ _ _
bg bg bg
_ _ _
color color color
] ] ]
. . .
red red red
; ; ;
palette palett palette
_ _ _
colors color color
[ [ [
drawIndex drawindex drawIndex
] ] ]
. . .
green green green
= = =
palette palett palette
_ _ _
colors color color
[ [ [
my my my
_ _ _
default default default
_ _ _
bg bg bg
_ _ _
color color color
] ] ]
. . .
green green green
; ; ;
palette palett palette
_ _ _
colors color color
[ [ [
drawIndex drawindex drawIndex
] ] ]
. . .
blue blue blue
= = =
palette palett palette
_ _ _
colors color color
[ [ [
my my my
_ _ _
default default default
_ _ _
bg bg bg
_ _ _
color color color
] ] ]
. . .
blue blue blue
; ; ;
XStoreColors xstorecolor XStoreColors
( ( (
myDisplay mydisplay myDisplay
, , ,
my my my
_ _ _
cmap cmap cmap
, , ,
& & &
palette palett palette
_ _ _
colors color color
[ [ [
DrawIndex drawindex DrawIndex
] ] ]
, , ,
1 1 1
) ) )
; ; ;
XFlush xflush XFlush
( ( (
myDisplay mydisplay myDisplay
) ) )
; ; ;
XSetFunction xsetfunct XSetFunction
( ( (
myDisplay mydisplay myDisplay
, , ,
gc gc gc
, , ,
GXxor gxxor GXxor
) ) )
; ; ;
XSetForeground xsetforeground XSetForeground
( ( (
myDisplay mydisplay myDisplay
, , ,
gc gc gc
, , ,
drawIndex drawindex drawIndex
) ) )
; ; ;
Then then Then
to to to
draw draw draw
I i I
do do do
: : :
XDrawLine xdrawlin XDrawLine
( ( (
myDisplay mydisplay myDisplay
, , ,
XtWindow xtwindow XtWindow
( ( (
drawingArea drawingarea drawingArea
1 1 1
) ) )
, , ,
gc gc gc
, , ,
x x x
1 1 1
, , ,
y y y
1 1 1
, , ,
x x x
2 2 2
, , ,
y y y
2 2 2
) ) )
; ; ;
XFlush xflush XFlush
( ( (
myDisplay mydisplay myDisplay
) ) )
; ; ;
And and And
when when when
I i I
' ' '
m m m
all all all
done done do
, , ,
to to to
return return return
things thing thing
to to to
normal normal normal
I i I
do do do
: : :
XSetFunction xsetfunct XSetFunction
( ( (
myDisplay mydisplay myDisplay
, , ,
gc gc gc
, , ,
GXcopy gxcopi GXcopy
) ) )
; ; ;
What what What
I i I
' ' '
d d d
like like like
to to to
happen happen happen
is is be
for for for
the the the
lines line line
I i I
draw draw draw
to to to
be be be
the the the
inverse invers inverse
of of of
whatever whatev whatever
I i I
' ' '
m m m
drawing draw draw
over over over
. . .
Instead instead Instead
what what what
happens happen happen
is is be
I i I
get get get
white white white
lines line line
. . .
If if If
the the the
lines line line
are are be
over over over
a a a
white white white
background background background
- - -
nothing noth nothing
shows show show
up up up
. . .
If if If
the the the
lines line line
are are be
over over over
a a a
black black black
area area area
- - -
nothing noth nothing
shows show show
up up up
! ! !
It it It
' ' '
s s s
very veri very
strange strang strange
. . .
But but But
the the the
GXxor gxxor GXxor
function function function
seems seem seem
right right right
- - -
since sinc since
if if if
I i I
do do do
a a a
rubber rubber rubber
- - -
banding band banding
box box box
, , ,
it it it
erases eras erase
and and and
redraws redraw redraws
itself itself itself
correctly correct correctly
( ( (
ie ie ie
. . .
not not not
disturbing disturb disturb
the the the
underlying under underlying
image imag image
) ) )
. . .
Any ani Any
suggestions suggest suggestion
what what what
I i I
' ' '
m m m
doing do do
wrong wrong wrong
? ? ?
david david david
