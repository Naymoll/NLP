From from From
: : :
ninassup ninassup ninassup
@ @ @
athena athena athena
. . .
mit mit mit
. . .
edu edu edu
( ( (
Nikos niko Nikos
I i I
Nassuphis nassuphi Nassuphis
) ) )
Subject subject Subject
: : :
LGA lga LGA
ncrypt ncrypt ncrypt
source sourc source
Organization organ Organization
: : :
Massachusetts massachusett Massachusetts
Institute institut Institute
of of of
Technology technolog Technology
Lines line Lines
: : :
1135 1135 1135
NNTP nntp NNTP
- - -
Posting post Posting
- - -
Host host Host
: : :
w w w
20 20 20
- - -
575 575 575
- - -
104 104 104
. . .
mit mit mit
. . .
edu edu edu
I i I
got got get
a a a
number number number
of of of
requests request request
for for for
code code code
. . .
So so So
, , ,
here here here
it it it
is is be
. . .
Its it Its
written written write
in in in
80 80 80
x x x
86 86 86
ASM asm ASM
. . .
Borland borland Borland
TASM tasm TASM
will will will
do do do
. . .
TASM tasm TASM
LGA lga LGA
. . .
ASM asm ASM
TLINK tlink TLINK
/ / /
t t t
LGA lga LGA
. . .
ASM asm ASM
The the The
code code code
: : :
; ; ;
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
; ; ;
LGA lga LGA
ncryption ncryption ncryption
; ; ;
( ( (
C c C
) ) )
by by by
Nick nick Nick
Nassuphis nassuphi Nassuphis
; ; ;
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
CODE code CODE
SEGMENT segment SEGMENT
ASSUME assum ASSUME
CS cs CS
: : :
CODE code CODE
, , ,
DS ds DS
: : :
CODE code CODE
ORG org ORG
100 100 100
h h h
Start start Start
: : :
JMP jmp JMP
Begin begin Begin
; ; ;
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
; ; ;
; ; ;
Gas gas Gas
particle particl particle
assigment assig assigment
: : :
; ; ;
; ; ;
BIT bit BIT
0 0 0
particle particl particle
moving move move
EAST east EAST
; ; ;
BIT bit BIT
1 1 1
particle particl particle
moving move move
WEST west WEST
; ; ;
BIT bit BIT
2 2 2
particle particl particle
moving move move
NORTH north NORTH
; ; ;
BIT bit BIT
3 3 3
particle particl particle
moving move move
SOUTH south SOUTH
; ; ;
; ; ;
BIT bit BIT
4 4 4
particle particl particle
moving move move
EAST east EAST
; ; ;
BIT bit BIT
5 5 5
particle particl particle
moving move move
WEST west WEST
; ; ;
BIT bit BIT
6 6 6
particle particl particle
moving move move
NORTH north NORTH
; ; ;
BIT bit BIT
7 7 7
particle particl particle
moving move move
SOUTH south SOUTH
; ; ;
; ; ;
; ; ;
Collisiong collisiong Collisiong
Rules rule Rules
: : :
; ; ;
; ; ;
1 1 1
. . .
Gas gas Gas
Rules rule Rules
; ; ;
; ; ;
IF if IF
( ( (
E e E
& & &
W w W
) ) )
AND and AND
! ! !
( ( (
N n N
& & &
S s S
) ) )
THEN then THEN
( ( (
E e E
, , ,
W w W
) ) )
- - -
> > >
( ( (
N n N
, , ,
S s S
) ) )
; ; ;
IF if IF
( ( (
N n N
& & &
S s S
) ) )
AND and AND
! ! !
( ( (
E e E
& & &
W w W
) ) )
THEN then THEN
( ( (
N n N
, , ,
S s S
) ) )
- - -
> > >
( ( (
E e E
, , ,
W w W
) ) )
; ; ;
; ; ;
for for for
nibbles nibbl nibble
: : :
; ; ;
; ; ;
1100 1100 1100
- - -
> > >
0011 0011 0011
; ; ;
0011 0011 0011
- - -
> > >
0011 0011 0011
; ; ;
; ; ;
and and and
for for for
bytes byte byte
: : :
; ; ;
; ; ;
11000000 11000000 11000000
- - -
> > >
00110000 00110000 00110000
; ; ;
00110000 00110000 00110000
- - -
> > >
11000000 11000000 11000000
; ; ;
00001100 00001100 00001100
- - -
> > >
00000011 00000011 00000011
; ; ;
00000011 00000011 00000011
- - -
> > >
00001100 00001100 00001100
; ; ;
00110011 00110011 00110011
- - -
> > >
11001100 11001100 11001100
; ; ;
00111100 00111100 00111100
- - -
> > >
11000011 11000011 11000011
; ; ;
11000011 11000011 11000011
- - -
> > >
00111100 00111100 00111100
; ; ;
11001100 11001100 11001100
- - -
> > >
00110011 00110011 00110011
; ; ;
; ; ;
; ; ;
2 2 2
. . .
Reflection reflect Reflection
Rules rule Rules
; ; ;
; ; ;
just just just
swap swap swap
bits bit bit
along along along
directions direct direction
; ; ;
; ; ;
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
; ; ;
; ; ;
This this This
look look look
- - -
up up up
table tabl table
implements implement implement
two two two
particle particl particle
collisions collis collision
; ; ;
for for for
the the the
HPP hpp HPP
lattice lattic lattice
gas gas gas
; ; ;
HPPRule hpprule HPPRule
: : :
DB db DB
00000000 00000000 00000000
B b B
; ; ;
00000000 00000000 00000000
DB db DB
00000001 00000001 00000001
B b B
; ; ;
00000001 00000001 00000001
DB db DB
00000010 00000010 00000010
B b B
; ; ;
00000010 00000010 00000010
DB db DB
00001100 00001100 00001100
B b B
; ; ;
00000011 00000011 00000011
DB db DB
00000100 00000100 00000100
B b B
; ; ;
00000100 00000100 00000100
DB db DB
00000101 00000101 00000101
B b B
; ; ;
00000101 00000101 00000101
DB db DB
00000110 00000110 00000110
B b B
; ; ;
00000110 00000110 00000110
DB db DB
00000111 00000111 00000111
B b B
; ; ;
00000111 00000111 00000111
DB db DB
00001000 00001000 00001000
B b B
; ; ;
00001000 00001000 00001000
DB db DB
00001001 00001001 00001001
B b B
; ; ;
00001001 00001001 00001001
DB db DB
00001010 00001010 00001010
B b B
; ; ;
00001010 00001010 00001010
DB db DB
00001011 00001011 00001011
B b B
; ; ;
00001011 00001011 00001011
DB db DB
00000011 00000011 00000011
B b B
; ; ;
00001100 00001100 00001100
DB db DB
00001101 00001101 00001101
B b B
; ; ;
00001101 00001101 00001101
DB db DB
00001110 00001110 00001110
B b B
; ; ;
00001110 00001110 00001110
DB db DB
00001111 00001111 00001111
B b B
; ; ;
00001111 00001111 00001111
DB db DB
00010000 00010000 00010000
B b B
; ; ;
00010000 00010000 00010000
DB db DB
00010001 00010001 00010001
B b B
; ; ;
00010001 00010001 00010001
DB db DB
00010010 00010010 00010010
B b B
; ; ;
00010010 00010010 00010010
DB db DB
00011100 00011100 00011100
B b B
; ; ;
00010011 00010011 00010011
DB db DB
00010100 00010100 00010100
B b B
; ; ;
00010100 00010100 00010100
DB db DB
00010101 00010101 00010101
B b B
; ; ;
00010101 00010101 00010101
DB db DB
00010110 00010110 00010110
B b B
; ; ;
00010110 00010110 00010110
DB db DB
00010111 00010111 00010111
B b B
; ; ;
00010111 00010111 00010111
DB db DB
00011000 00011000 00011000
B b B
; ; ;
00011000 00011000 00011000
DB db DB
00011001 00011001 00011001
B b B
; ; ;
00011001 00011001 00011001
DB db DB
00011010 00011010 00011010
B b B
; ; ;
00011010 00011010 00011010
DB db DB
00011011 00011011 00011011
B b B
; ; ;
00011011 00011011 00011011
DB db DB
00010011 00010011 00010011
B b B
; ; ;
00011100 00011100 00011100
DB db DB
00011101 00011101 00011101
B b B
; ; ;
00011101 00011101 00011101
DB db DB
00011110 00011110 00011110
B b B
; ; ;
00011110 00011110 00011110
DB db DB
00011111 00011111 00011111
B b B
; ; ;
00011111 00011111 00011111
DB db DB
00100000 00100000 00100000
B b B
; ; ;
00100000 00100000 00100000
DB db DB
00100001 00100001 00100001
B b B
; ; ;
00100001 00100001 00100001
DB db DB
00100010 00100010 00100010
B b B
; ; ;
00100010 00100010 00100010
DB db DB
00101100 00101100 00101100
B b B
; ; ;
00100011 00100011 00100011
DB db DB
00100100 00100100 00100100
B b B
; ; ;
00100100 00100100 00100100
DB db DB
00100101 00100101 00100101
B b B
; ; ;
00100101 00100101 00100101
DB db DB
00100110 00100110 00100110
B b B
; ; ;
00100110 00100110 00100110
DB db DB
00100111 00100111 00100111
B b B
; ; ;
00100111 00100111 00100111
DB db DB
00101000 00101000 00101000
B b B
; ; ;
00101000 00101000 00101000
DB db DB
00101001 00101001 00101001
B b B
; ; ;
00101001 00101001 00101001
DB db DB
00101010 00101010 00101010
B b B
; ; ;
00101010 00101010 00101010
DB db DB
00101011 00101011 00101011
B b B
; ; ;
00101011 00101011 00101011
DB db DB
00100011 00100011 00100011
B b B
; ; ;
00101100 00101100 00101100
DB db DB
00101101 00101101 00101101
B b B
; ; ;
00101101 00101101 00101101
DB db DB
00101110 00101110 00101110
B b B
; ; ;
00101110 00101110 00101110
DB db DB
00101111 00101111 00101111
B b B
; ; ;
00101111 00101111 00101111
DB db DB
11000000 11000000 11000000
B b B
; ; ;
00110000 00110000 00110000
DB db DB
11000001 11000001 11000001
B b B
; ; ;
00110001 00110001 00110001
DB db DB
11000010 11000010 11000010
B b B
; ; ;
00110010 00110010 00110010
DB db DB
11001100 11001100 11001100
B b B
; ; ;
00110011 00110011 00110011
DB db DB
11000100 11000100 11000100
B b B
; ; ;
00110100 00110100 00110100
DB db DB
11000101 11000101 11000101
B b B
; ; ;
00110101 00110101 00110101
DB db DB
11000110 11000110 11000110
B b B
; ; ;
00110110 00110110 00110110
DB db DB
11000111 11000111 11000111
B b B
; ; ;
00110111 00110111 00110111
DB db DB
11001000 11001000 11001000
B b B
; ; ;
00111000 00111000 00111000
DB db DB
11001001 11001001 11001001
B b B
; ; ;
00111001 00111001 00111001
DB db DB
11001010 11001010 11001010
B b B
; ; ;
00111010 00111010 00111010
DB db DB
11001011 11001011 11001011
B b B
; ; ;
00111011 00111011 00111011
DB db DB
11000011 11000011 11000011
B b B
; ; ;
00111100 00111100 00111100
DB db DB
11001101 11001101 11001101
B b B
; ; ;
00111101 00111101 00111101
DB db DB
11001110 11001110 11001110
B b B
; ; ;
00111110 00111110 00111110
DB db DB
11001111 11001111 11001111
B b B
; ; ;
00111111 00111111 00111111
DB db DB
01000000 01000000 01000000
B b B
; ; ;
01000000 01000000 01000000
DB db DB
01000001 01000001 01000001
B b B
; ; ;
01000001 01000001 01000001
DB db DB
01000010 01000010 01000010
B b B
; ; ;
01000010 01000010 01000010
DB db DB
01001100 01001100 01001100
B b B
; ; ;
01000011 01000011 01000011
DB db DB
01000100 01000100 01000100
B b B
; ; ;
01000100 01000100 01000100
DB db DB
01000101 01000101 01000101
B b B
; ; ;
01000101 01000101 01000101
DB db DB
01000110 01000110 01000110
B b B
; ; ;
01000110 01000110 01000110
DB db DB
01000111 01000111 01000111
B b B
; ; ;
01000111 01000111 01000111
DB db DB
01001000 01001000 01001000
B b B
; ; ;
01001000 01001000 01001000
DB db DB
01001001 01001001 01001001
B b B
; ; ;
01001001 01001001 01001001
DB db DB
01001010 01001010 01001010
B b B
; ; ;
01001010 01001010 01001010
DB db DB
01001011 01001011 01001011
B b B
; ; ;
01001011 01001011 01001011
DB db DB
01000011 01000011 01000011
B b B
; ; ;
01001100 01001100 01001100
DB db DB
01001101 01001101 01001101
B b B
; ; ;
01001101 01001101 01001101
DB db DB
01001110 01001110 01001110
B b B
; ; ;
01001110 01001110 01001110
DB db DB
01001111 01001111 01001111
B b B
; ; ;
01001111 01001111 01001111
DB db DB
01010000 01010000 01010000
B b B
; ; ;
01010000 01010000 01010000
DB db DB
01010001 01010001 01010001
B b B
; ; ;
01010001 01010001 01010001
DB db DB
01010010 01010010 01010010
B b B
; ; ;
01010010 01010010 01010010
DB db DB
01011100 01011100 01011100
B b B
; ; ;
01010011 01010011 01010011
DB db DB
01010100 01010100 01010100
B b B
; ; ;
01010100 01010100 01010100
DB db DB
01010101 01010101 01010101
B b B
; ; ;
01010101 01010101 01010101
DB db DB
01010110 01010110 01010110
B b B
; ; ;
01010110 01010110 01010110
DB db DB
01010111 01010111 01010111
B b B
; ; ;
01010111 01010111 01010111
DB db DB
01011000 01011000 01011000
B b B
; ; ;
01011000 01011000 01011000
DB db DB
01011001 01011001 01011001
B b B
; ; ;
01011001 01011001 01011001
DB db DB
01011010 01011010 01011010
B b B
; ; ;
01011010 01011010 01011010
DB db DB
01011011 01011011 01011011
B b B
; ; ;
01011011 01011011 01011011
DB db DB
01010011 01010011 01010011
B b B
; ; ;
01011100 01011100 01011100
DB db DB
01011101 01011101 01011101
B b B
; ; ;
01011101 01011101 01011101
DB db DB
01011110 01011110 01011110
B b B
; ; ;
01011110 01011110 01011110
DB db DB
01011111 01011111 01011111
B b B
; ; ;
01011111 01011111 01011111
DB db DB
01100000 01100000 01100000
B b B
; ; ;
01100000 01100000 01100000
DB db DB
01100001 01100001 01100001
B b B
; ; ;
01100001 01100001 01100001
DB db DB
01100010 01100010 01100010
B b B
; ; ;
01100010 01100010 01100010
DB db DB
01101100 01101100 01101100
B b B
; ; ;
01100011 01100011 01100011
DB db DB
01100100 01100100 01100100
B b B
; ; ;
01100100 01100100 01100100
DB db DB
01100101 01100101 01100101
B b B
; ; ;
01100101 01100101 01100101
DB db DB
01100110 01100110 01100110
B b B
; ; ;
01100110 01100110 01100110
DB db DB
01100111 01100111 01100111
B b B
; ; ;
01100111 01100111 01100111
DB db DB
01101000 01101000 01101000
B b B
; ; ;
01101000 01101000 01101000
DB db DB
01101001 01101001 01101001
B b B
; ; ;
01101001 01101001 01101001
DB db DB
01101010 01101010 01101010
B b B
; ; ;
01101010 01101010 01101010
DB db DB
01101011 01101011 01101011
B b B
; ; ;
01101011 01101011 01101011
DB db DB
01100011 01100011 01100011
B b B
; ; ;
01101100 01101100 01101100
DB db DB
01101101 01101101 01101101
B b B
; ; ;
01101101 01101101 01101101
DB db DB
01101110 01101110 01101110
B b B
; ; ;
01101110 01101110 01101110
DB db DB
01101111 01101111 01101111
B b B
; ; ;
01101111 01101111 01101111
DB db DB
01110000 01110000 01110000
B b B
; ; ;
01110000 01110000 01110000
DB db DB
01110001 01110001 01110001
B b B
; ; ;
01110001 01110001 01110001
DB db DB
01110010 01110010 01110010
B b B
; ; ;
01110010 01110010 01110010
DB db DB
01111100 01111100 01111100
B b B
; ; ;
01110011 01110011 01110011
DB db DB
01110100 01110100 01110100
B b B
; ; ;
01110100 01110100 01110100
DB db DB
01110101 01110101 01110101
B b B
; ; ;
01110101 01110101 01110101
DB db DB
01110110 01110110 01110110
B b B
; ; ;
01110110 01110110 01110110
DB db DB
01110111 01110111 01110111
B b B
; ; ;
01110111 01110111 01110111
DB db DB
01111000 01111000 01111000
B b B
; ; ;
01111000 01111000 01111000
DB db DB
01111001 01111001 01111001
B b B
; ; ;
01111001 01111001 01111001
DB db DB
01111010 01111010 01111010
B b B
; ; ;
01111010 01111010 01111010
DB db DB
01111011 01111011 01111011
B b B
; ; ;
01111011 01111011 01111011
DB db DB
01110011 01110011 01110011
B b B
; ; ;
01111100 01111100 01111100
DB db DB
01111101 01111101 01111101
B b B
; ; ;
01111101 01111101 01111101
DB db DB
01111110 01111110 01111110
B b B
; ; ;
01111110 01111110 01111110
DB db DB
01111111 01111111 01111111
B b B
; ; ;
01111111 01111111 01111111
DB db DB
10000000 10000000 10000000
B b B
; ; ;
10000000 10000000 10000000
DB db DB
10000001 10000001 10000001
B b B
; ; ;
10000001 10000001 10000001
DB db DB
10000010 10000010 10000010
B b B
; ; ;
10000010 10000010 10000010
DB db DB
10001100 10001100 10001100
B b B
; ; ;
10000011 10000011 10000011
DB db DB
10000100 10000100 10000100
B b B
; ; ;
10000100 10000100 10000100
DB db DB
10000101 10000101 10000101
B b B
; ; ;
10000101 10000101 10000101
DB db DB
10000110 10000110 10000110
B b B
; ; ;
10000110 10000110 10000110
DB db DB
10000111 10000111 10000111
B b B
; ; ;
10000111 10000111 10000111
DB db DB
10001000 10001000 10001000
B b B
; ; ;
10001000 10001000 10001000
DB db DB
10001001 10001001 10001001
B b B
; ; ;
10001001 10001001 10001001
DB db DB
10001010 10001010 10001010
B b B
; ; ;
10001010 10001010 10001010
DB db DB
10001011 10001011 10001011
B b B
; ; ;
10001011 10001011 10001011
DB db DB
10000011 10000011 10000011
B b B
; ; ;
10001100 10001100 10001100
DB db DB
10001101 10001101 10001101
B b B
; ; ;
10001101 10001101 10001101
DB db DB
10001110 10001110 10001110
B b B
; ; ;
10001110 10001110 10001110
DB db DB
10001111 10001111 10001111
B b B
; ; ;
10001111 10001111 10001111
DB db DB
10010000 10010000 10010000
B b B
; ; ;
10010000 10010000 10010000
DB db DB
10010001 10010001 10010001
B b B
; ; ;
10010001 10010001 10010001
DB db DB
10010010 10010010 10010010
B b B
; ; ;
10010010 10010010 10010010
DB db DB
10011100 10011100 10011100
B b B
; ; ;
10010011 10010011 10010011
DB db DB
10010100 10010100 10010100
B b B
; ; ;
10010100 10010100 10010100
DB db DB
10010101 10010101 10010101
B b B
; ; ;
10010101 10010101 10010101
DB db DB
10010110 10010110 10010110
B b B
; ; ;
10010110 10010110 10010110
DB db DB
10010111 10010111 10010111
B b B
; ; ;
10010111 10010111 10010111
DB db DB
10011000 10011000 10011000
B b B
; ; ;
10011000 10011000 10011000
DB db DB
10011001 10011001 10011001
B b B
; ; ;
10011001 10011001 10011001
DB db DB
10011010 10011010 10011010
B b B
; ; ;
10011010 10011010 10011010
DB db DB
10011011 10011011 10011011
B b B
; ; ;
10011011 10011011 10011011
DB db DB
10010011 10010011 10010011
B b B
; ; ;
10011100 10011100 10011100
DB db DB
10011101 10011101 10011101
B b B
; ; ;
10011101 10011101 10011101
DB db DB
10011110 10011110 10011110
B b B
; ; ;
10011110 10011110 10011110
DB db DB
10011111 10011111 10011111
B b B
; ; ;
10011111 10011111 10011111
DB db DB
10100000 10100000 10100000
B b B
; ; ;
10100000 10100000 10100000
DB db DB
10100001 10100001 10100001
B b B
; ; ;
10100001 10100001 10100001
DB db DB
10100010 10100010 10100010
B b B
; ; ;
10100010 10100010 10100010
DB db DB
10101100 10101100 10101100
B b B
; ; ;
10100011 10100011 10100011
DB db DB
10100100 10100100 10100100
B b B
; ; ;
10100100 10100100 10100100
DB db DB
10100101 10100101 10100101
B b B
; ; ;
10100101 10100101 10100101
DB db DB
10100110 10100110 10100110
B b B
; ; ;
10100110 10100110 10100110
DB db DB
10100111 10100111 10100111
B b B
; ; ;
10100111 10100111 10100111
DB db DB
10101000 10101000 10101000
B b B
; ; ;
10101000 10101000 10101000
DB db DB
10101001 10101001 10101001
B b B
; ; ;
10101001 10101001 10101001
DB db DB
10101010 10101010 10101010
B b B
; ; ;
10101010 10101010 10101010
DB db DB
10101011 10101011 10101011
B b B
; ; ;
10101011 10101011 10101011
DB db DB
10100011 10100011 10100011
B b B
; ; ;
10101100 10101100 10101100
DB db DB
10101101 10101101 10101101
B b B
; ; ;
10101101 10101101 10101101
DB db DB
10101110 10101110 10101110
B b B
; ; ;
10101110 10101110 10101110
DB db DB
10101111 10101111 10101111
B b B
; ; ;
10101111 10101111 10101111
DB db DB
10110000 10110000 10110000
B b B
; ; ;
10110000 10110000 10110000
DB db DB
10110001 10110001 10110001
B b B
; ; ;
10110001 10110001 10110001
DB db DB
10110010 10110010 10110010
B b B
; ; ;
10110010 10110010 10110010
DB db DB
10111100 10111100 10111100
B b B
; ; ;
10110011 10110011 10110011
DB db DB
10110100 10110100 10110100
B b B
; ; ;
10110100 10110100 10110100
DB db DB
10110101 10110101 10110101
B b B
; ; ;
10110101 10110101 10110101
DB db DB
10110110 10110110 10110110
B b B
; ; ;
10110110 10110110 10110110
DB db DB
10110111 10110111 10110111
B b B
; ; ;
10110111 10110111 10110111
DB db DB
10111000 10111000 10111000
B b B
; ; ;
10111000 10111000 10111000
DB db DB
10111001 10111001 10111001
B b B
; ; ;
10111001 10111001 10111001
DB db DB
10111010 10111010 10111010
B b B
; ; ;
10111010 10111010 10111010
DB db DB
10111011 10111011 10111011
B b B
; ; ;
10111011 10111011 10111011
DB db DB
10110011 10110011 10110011
B b B
; ; ;
10111100 10111100 10111100
DB db DB
10111101 10111101 10111101
B b B
; ; ;
10111101 10111101 10111101
DB db DB
10111110 10111110 10111110
B b B
; ; ;
10111110 10111110 10111110
DB db DB
10111111 10111111 10111111
B b B
; ; ;
10111111 10111111 10111111
DB db DB
00110000 00110000 00110000
B b B
; ; ;
11000000 11000000 11000000
DB db DB
00110001 00110001 00110001
B b B
; ; ;
11000001 11000001 11000001
DB db DB
00110010 00110010 00110010
B b B
; ; ;
11000010 11000010 11000010
DB db DB
00111100 00111100 00111100
B b B
; ; ;
11000011 11000011 11000011
DB db DB
00110100 00110100 00110100
B b B
; ; ;
11000100 11000100 11000100
DB db DB
00110101 00110101 00110101
B b B
; ; ;
11000101 11000101 11000101
DB db DB
00110110 00110110 00110110
B b B
; ; ;
11000110 11000110 11000110
DB db DB
00110111 00110111 00110111
B b B
; ; ;
11000111 11000111 11000111
DB db DB
00111000 00111000 00111000
B b B
; ; ;
11001000 11001000 11001000
DB db DB
00111001 00111001 00111001
B b B
; ; ;
11001001 11001001 11001001
DB db DB
00111010 00111010 00111010
B b B
; ; ;
11001010 11001010 11001010
DB db DB
00111011 00111011 00111011
B b B
; ; ;
11001011 11001011 11001011
DB db DB
00110011 00110011 00110011
B b B
; ; ;
11001100 11001100 11001100
DB db DB
00111101 00111101 00111101
B b B
; ; ;
11001101 11001101 11001101
DB db DB
00111110 00111110 00111110
B b B
; ; ;
11001110 11001110 11001110
DB db DB
00111111 00111111 00111111
B b B
; ; ;
11001111 11001111 11001111
DB db DB
11010000 11010000 11010000
B b B
; ; ;
11010000 11010000 11010000
DB db DB
11010001 11010001 11010001
B b B
; ; ;
11010001 11010001 11010001
DB db DB
11010010 11010010 11010010
B b B
; ; ;
11010010 11010010 11010010
DB db DB
11011100 11011100 11011100
B b B
; ; ;
11010011 11010011 11010011
DB db DB
11010100 11010100 11010100
B b B
; ; ;
11010100 11010100 11010100
DB db DB
11010101 11010101 11010101
B b B
; ; ;
11010101 11010101 11010101
DB db DB
11010110 11010110 11010110
B b B
; ; ;
11010110 11010110 11010110
DB db DB
11010111 11010111 11010111
B b B
; ; ;
11010111 11010111 11010111
DB db DB
11011000 11011000 11011000
B b B
; ; ;
11011000 11011000 11011000
DB db DB
11011001 11011001 11011001
B b B
; ; ;
11011001 11011001 11011001
DB db DB
11011010 11011010 11011010
B b B
; ; ;
11011010 11011010 11011010
DB db DB
11011011 11011011 11011011
B b B
; ; ;
11011011 11011011 11011011
DB db DB
11010011 11010011 11010011
B b B
; ; ;
11011100 11011100 11011100
DB db DB
11011101 11011101 11011101
B b B
; ; ;
11011101 11011101 11011101
DB db DB
11011110 11011110 11011110
B b B
; ; ;
11011110 11011110 11011110
DB db DB
11011111 11011111 11011111
B b B
; ; ;
11011111 11011111 11011111
DB db DB
11100000 11100000 11100000
B b B
; ; ;
11100000 11100000 11100000
DB db DB
11100001 11100001 11100001
B b B
; ; ;
11100001 11100001 11100001
DB db DB
11100010 11100010 11100010
B b B
; ; ;
11100010 11100010 11100010
DB db DB
11101100 11101100 11101100
B b B
; ; ;
11100011 11100011 11100011
DB db DB
11100100 11100100 11100100
B b B
; ; ;
11100100 11100100 11100100
DB db DB
11100101 11100101 11100101
B b B
; ; ;
11100101 11100101 11100101
DB db DB
11100110 11100110 11100110
B b B
; ; ;
11100110 11100110 11100110
DB db DB
11100111 11100111 11100111
B b B
; ; ;
11100111 11100111 11100111
DB db DB
11101000 11101000 11101000
B b B
; ; ;
11101000 11101000 11101000
DB db DB
11101001 11101001 11101001
B b B
; ; ;
11101001 11101001 11101001
DB db DB
11101010 11101010 11101010
B b B
; ; ;
11101010 11101010 11101010
DB db DB
11101011 11101011 11101011
B b B
; ; ;
11101011 11101011 11101011
DB db DB
11100011 11100011 11100011
B b B
; ; ;
11101100 11101100 11101100
DB db DB
11101101 11101101 11101101
B b B
; ; ;
11101101 11101101 11101101
DB db DB
11101110 11101110 11101110
B b B
; ; ;
11101110 11101110 11101110
DB db DB
11101111 11101111 11101111
B b B
; ; ;
11101111 11101111 11101111
DB db DB
11110000 11110000 11110000
B b B
; ; ;
11110000 11110000 11110000
DB db DB
11110001 11110001 11110001
B b B
; ; ;
11110001 11110001 11110001
DB db DB
11110010 11110010 11110010
B b B
; ; ;
11110010 11110010 11110010
DB db DB
11111100 11111100 11111100
B b B
; ; ;
11110011 11110011 11110011
DB db DB
11110100 11110100 11110100
B b B
; ; ;
11110100 11110100 11110100
DB db DB
11110101 11110101 11110101
B b B
; ; ;
11110101 11110101 11110101
DB db DB
11110110 11110110 11110110
B b B
; ; ;
11110110 11110110 11110110
DB db DB
11110111 11110111 11110111
B b B
; ; ;
11110111 11110111 11110111
DB db DB
11111000 11111000 11111000
B b B
; ; ;
11111000 11111000 11111000
DB db DB
11111001 11111001 11111001
B b B
; ; ;
11111001 11111001 11111001
DB db DB
11111010 11111010 11111010
B b B
; ; ;
11111010 11111010 11111010
DB db DB
11111011 11111011 11111011
B b B
; ; ;
11111011 11111011 11111011
DB db DB
11110011 11110011 11110011
B b B
; ; ;
11111100 11111100 11111100
DB db DB
11111101 11111101 11111101
B b B
; ; ;
11111101 11111101 11111101
DB db DB
11111110 11111110 11111110
B b B
; ; ;
11111110 11111110 11111110
DB db DB
11111111 11111111 11111111
B b B
; ; ;
11111111 11111111 11111111
; ; ;
; ; ;
This this This
rule rule rule
implements implement implement
the the the
velocity veloc velocity
- - -
reversal revers reversal
needed need need
to to to
; ; ;
run run run
the the the
gas gas gas
evolution evolut evolution
in in in
reverse revers reverse
. . .
Its it Its
called call call
a a a
WallRule wallrul WallRule
; ; ;
because becaus because
its it it
the the the
same same same
as as a
is is be
all all all
particles particl particle
hit hit hit
a a a
wall wall wall
; ; ;
head head head
on on on
. . .
; ; ;
WallRule wallrul WallRule
: : :
DB db DB
00000000 00000000 00000000
B b B
; ; ;
00000000 00000000 00000000
DB db DB
00000010 00000010 00000010
B b B
; ; ;
00000001 00000001 00000001
DB db DB
00000001 00000001 00000001
B b B
; ; ;
00000010 00000010 00000010
DB db DB
00001100 00001100 00001100
B b B
; ; ;
00000011 00000011 00000011
DB db DB
00001000 00001000 00001000
B b B
; ; ;
00000100 00000100 00000100
DB db DB
00001010 00001010 00001010
B b B
; ; ;
00000101 00000101 00000101
DB db DB
00001001 00001001 00001001
B b B
; ; ;
00000110 00000110 00000110
DB db DB
00001011 00001011 00001011
B b B
; ; ;
00000111 00000111 00000111
DB db DB
00000100 00000100 00000100
B b B
; ; ;
00001000 00001000 00001000
DB db DB
00000110 00000110 00000110
B b B
; ; ;
00001001 00001001 00001001
DB db DB
00000101 00000101 00000101
B b B
; ; ;
00001010 00001010 00001010
DB db DB
00000111 00000111 00000111
B b B
; ; ;
00001011 00001011 00001011
DB db DB
00000011 00000011 00000011
B b B
; ; ;
00001100 00001100 00001100
DB db DB
00001110 00001110 00001110
B b B
; ; ;
00001101 00001101 00001101
DB db DB
00001101 00001101 00001101
B b B
; ; ;
00001110 00001110 00001110
DB db DB
00001111 00001111 00001111
B b B
; ; ;
00001111 00001111 00001111
DB db DB
00100000 00100000 00100000
B b B
; ; ;
00010000 00010000 00010000
DB db DB
00100010 00100010 00100010
B b B
; ; ;
00010001 00010001 00010001
DB db DB
00100001 00100001 00100001
B b B
; ; ;
00010010 00010010 00010010
DB db DB
00101100 00101100 00101100
B b B
; ; ;
00010011 00010011 00010011
DB db DB
00101000 00101000 00101000
B b B
; ; ;
00010100 00010100 00010100
DB db DB
00101010 00101010 00101010
B b B
; ; ;
00010101 00010101 00010101
DB db DB
00101001 00101001 00101001
B b B
; ; ;
00010110 00010110 00010110
DB db DB
00101011 00101011 00101011
B b B
; ; ;
00010111 00010111 00010111
DB db DB
00100100 00100100 00100100
B b B
; ; ;
00011000 00011000 00011000
DB db DB
00100110 00100110 00100110
B b B
; ; ;
00011001 00011001 00011001
DB db DB
00100101 00100101 00100101
B b B
; ; ;
00011010 00011010 00011010
DB db DB
00100111 00100111 00100111
B b B
; ; ;
00011011 00011011 00011011
DB db DB
00100011 00100011 00100011
B b B
; ; ;
00011100 00011100 00011100
DB db DB
00101110 00101110 00101110
B b B
; ; ;
00011101 00011101 00011101
DB db DB
00101101 00101101 00101101
B b B
; ; ;
00011110 00011110 00011110
DB db DB
00101111 00101111 00101111
B b B
; ; ;
00011111 00011111 00011111
DB db DB
00010000 00010000 00010000
B b B
; ; ;
00100000 00100000 00100000
DB db DB
00010010 00010010 00010010
B b B
; ; ;
00100001 00100001 00100001
DB db DB
00010001 00010001 00010001
B b B
; ; ;
00100010 00100010 00100010
DB db DB
00011100 00011100 00011100
B b B
; ; ;
00100011 00100011 00100011
DB db DB
00011000 00011000 00011000
B b B
; ; ;
00100100 00100100 00100100
DB db DB
00011010 00011010 00011010
B b B
; ; ;
00100101 00100101 00100101
DB db DB
00011001 00011001 00011001
B b B
; ; ;
00100110 00100110 00100110
DB db DB
00011011 00011011 00011011
B b B
; ; ;
00100111 00100111 00100111
DB db DB
00010100 00010100 00010100
B b B
; ; ;
00101000 00101000 00101000
DB db DB
00010110 00010110 00010110
B b B
; ; ;
00101001 00101001 00101001
DB db DB
00010101 00010101 00010101
B b B
; ; ;
00101010 00101010 00101010
DB db DB
00010111 00010111 00010111
B b B
; ; ;
00101011 00101011 00101011
DB db DB
00010011 00010011 00010011
B b B
; ; ;
00101100 00101100 00101100
DB db DB
00011110 00011110 00011110
B b B
; ; ;
00101101 00101101 00101101
DB db DB
00011101 00011101 00011101
B b B
; ; ;
00101110 00101110 00101110
DB db DB
00011111 00011111 00011111
B b B
; ; ;
00101111 00101111 00101111
DB db DB
11000000 11000000 11000000
B b B
; ; ;
00110000 00110000 00110000
DB db DB
11000010 11000010 11000010
B b B
; ; ;
00110001 00110001 00110001
DB db DB
11000001 11000001 11000001
B b B
; ; ;
00110010 00110010 00110010
DB db DB
11001100 11001100 11001100
B b B
; ; ;
00110011 00110011 00110011
DB db DB
11001000 11001000 11001000
B b B
; ; ;
00110100 00110100 00110100
DB db DB
11001010 11001010 11001010
B b B
; ; ;
00110101 00110101 00110101
DB db DB
11001001 11001001 11001001
B b B
; ; ;
00110110 00110110 00110110
DB db DB
11001011 11001011 11001011
B b B
; ; ;
00110111 00110111 00110111
DB db DB
11000100 11000100 11000100
B b B
; ; ;
00111000 00111000 00111000
DB db DB
11000110 11000110 11000110
B b B
; ; ;
00111001 00111001 00111001
DB db DB
11000101 11000101 11000101
B b B
; ; ;
00111010 00111010 00111010
DB db DB
11000111 11000111 11000111
B b B
; ; ;
00111011 00111011 00111011
DB db DB
11000011 11000011 11000011
B b B
; ; ;
00111100 00111100 00111100
DB db DB
11001110 11001110 11001110
B b B
; ; ;
00111101 00111101 00111101
DB db DB
11001101 11001101 11001101
B b B
; ; ;
00111110 00111110 00111110
DB db DB
11001111 11001111 11001111
B b B
; ; ;
00111111 00111111 00111111
DB db DB
10000000 10000000 10000000
B b B
; ; ;
01000000 01000000 01000000
DB db DB
10000010 10000010 10000010
B b B
; ; ;
01000001 01000001 01000001
DB db DB
10000001 10000001 10000001
B b B
; ; ;
01000010 01000010 01000010
DB db DB
10001100 10001100 10001100
B b B
; ; ;
01000011 01000011 01000011
DB db DB
10001000 10001000 10001000
B b B
; ; ;
01000100 01000100 01000100
DB db DB
10001010 10001010 10001010
B b B
; ; ;
01000101 01000101 01000101
DB db DB
10001001 10001001 10001001
B b B
; ; ;
01000110 01000110 01000110
DB db DB
10001011 10001011 10001011
B b B
; ; ;
01000111 01000111 01000111
DB db DB
10000100 10000100 10000100
B b B
; ; ;
01001000 01001000 01001000
DB db DB
10000110 10000110 10000110
B b B
; ; ;
01001001 01001001 01001001
DB db DB
10000101 10000101 10000101
B b B
; ; ;
01001010 01001010 01001010
DB db DB
10000111 10000111 10000111
B b B
; ; ;
01001011 01001011 01001011
DB db DB
10000011 10000011 10000011
B b B
; ; ;
01001100 01001100 01001100
DB db DB
10001110 10001110 10001110
B b B
; ; ;
01001101 01001101 01001101
DB db DB
10001101 10001101 10001101
B b B
; ; ;
01001110 01001110 01001110
DB db DB
10001111 10001111 10001111
B b B
; ; ;
01001111 01001111 01001111
DB db DB
10100000 10100000 10100000
B b B
; ; ;
01010000 01010000 01010000
DB db DB
10100010 10100010 10100010
B b B
; ; ;
01010001 01010001 01010001
DB db DB
10100001 10100001 10100001
B b B
; ; ;
01010010 01010010 01010010
DB db DB
10101100 10101100 10101100
B b B
; ; ;
01010011 01010011 01010011
DB db DB
10101000 10101000 10101000
B b B
; ; ;
01010100 01010100 01010100
DB db DB
10101010 10101010 10101010
B b B
; ; ;
01010101 01010101 01010101
DB db DB
10101001 10101001 10101001
B b B
; ; ;
01010110 01010110 01010110
DB db DB
10101011 10101011 10101011
B b B
; ; ;
01010111 01010111 01010111
DB db DB
10100100 10100100 10100100
B b B
; ; ;
01011000 01011000 01011000
DB db DB
10100110 10100110 10100110
B b B
; ; ;
01011001 01011001 01011001
DB db DB
10100101 10100101 10100101
B b B
; ; ;
01011010 01011010 01011010
DB db DB
10100111 10100111 10100111
B b B
; ; ;
01011011 01011011 01011011
DB db DB
10100011 10100011 10100011
B b B
; ; ;
01011100 01011100 01011100
DB db DB
10101110 10101110 10101110
B b B
; ; ;
01011101 01011101 01011101
DB db DB
10101101 10101101 10101101
B b B
; ; ;
01011110 01011110 01011110
DB db DB
10101111 10101111 10101111
B b B
; ; ;
01011111 01011111 01011111
DB db DB
10010000 10010000 10010000
B b B
; ; ;
01100000 01100000 01100000
DB db DB
10010010 10010010 10010010
B b B
; ; ;
01100001 01100001 01100001
DB db DB
10010001 10010001 10010001
B b B
; ; ;
01100010 01100010 01100010
DB db DB
10011100 10011100 10011100
B b B
; ; ;
01100011 01100011 01100011
DB db DB
10011000 10011000 10011000
B b B
; ; ;
01100100 01100100 01100100
DB db DB
10011010 10011010 10011010
B b B
; ; ;
01100101 01100101 01100101
DB db DB
10011001 10011001 10011001
B b B
; ; ;
01100110 01100110 01100110
DB db DB
10011011 10011011 10011011
B b B
; ; ;
01100111 01100111 01100111
DB db DB
10010100 10010100 10010100
B b B
; ; ;
01101000 01101000 01101000
DB db DB
10010110 10010110 10010110
B b B
; ; ;
01101001 01101001 01101001
DB db DB
10010101 10010101 10010101
B b B
; ; ;
01101010 01101010 01101010
DB db DB
10010111 10010111 10010111
B b B
; ; ;
01101011 01101011 01101011
DB db DB
10010011 10010011 10010011
B b B
; ; ;
01101100 01101100 01101100
DB db DB
10011110 10011110 10011110
B b B
; ; ;
01101101 01101101 01101101
DB db DB
10011101 10011101 10011101
B b B
; ; ;
01101110 01101110 01101110
DB db DB
10011111 10011111 10011111
B b B
; ; ;
01101111 01101111 01101111
DB db DB
10110000 10110000 10110000
B b B
; ; ;
01110000 01110000 01110000
DB db DB
10110010 10110010 10110010
B b B
; ; ;
01110001 01110001 01110001
DB db DB
10110001 10110001 10110001
B b B
; ; ;
01110010 01110010 01110010
DB db DB
10111100 10111100 10111100
B b B
; ; ;
01110011 01110011 01110011
DB db DB
10111000 10111000 10111000
B b B
; ; ;
01110100 01110100 01110100
DB db DB
10111010 10111010 10111010
B b B
; ; ;
01110101 01110101 01110101
DB db DB
10111001 10111001 10111001
B b B
; ; ;
01110110 01110110 01110110
DB db DB
10111011 10111011 10111011
B b B
; ; ;
01110111 01110111 01110111
DB db DB
10110100 10110100 10110100
B b B
; ; ;
01111000 01111000 01111000
DB db DB
10110110 10110110 10110110
B b B
; ; ;
01111001 01111001 01111001
DB db DB
10110101 10110101 10110101
B b B
; ; ;
01111010 01111010 01111010
DB db DB
10110111 10110111 10110111
B b B
; ; ;
01111011 01111011 01111011
DB db DB
10110011 10110011 10110011
B b B
; ; ;
01111100 01111100 01111100
DB db DB
10111110 10111110 10111110
B b B
; ; ;
01111101 01111101 01111101
DB db DB
10111101 10111101 10111101
B b B
; ; ;
01111110 01111110 01111110
DB db DB
10111111 10111111 10111111
B b B
; ; ;
01111111 01111111 01111111
DB db DB
01000000 01000000 01000000
B b B
; ; ;
10000000 10000000 10000000
DB db DB
01000010 01000010 01000010
B b B
; ; ;
10000001 10000001 10000001
DB db DB
01000001 01000001 01000001
B b B
; ; ;
10000010 10000010 10000010
DB db DB
01001100 01001100 01001100
B b B
; ; ;
10000011 10000011 10000011
DB db DB
01001000 01001000 01001000
B b B
; ; ;
10000100 10000100 10000100
DB db DB
01001010 01001010 01001010
B b B
; ; ;
10000101 10000101 10000101
DB db DB
01001001 01001001 01001001
B b B
; ; ;
10000110 10000110 10000110
DB db DB
01001011 01001011 01001011
B b B
; ; ;
10000111 10000111 10000111
DB db DB
01000100 01000100 01000100
B b B
; ; ;
10001000 10001000 10001000
DB db DB
01000110 01000110 01000110
B b B
; ; ;
10001001 10001001 10001001
DB db DB
01000101 01000101 01000101
B b B
; ; ;
10001010 10001010 10001010
DB db DB
01000111 01000111 01000111
B b B
; ; ;
10001011 10001011 10001011
DB db DB
01000011 01000011 01000011
B b B
; ; ;
10001100 10001100 10001100
DB db DB
01001110 01001110 01001110
B b B
; ; ;
10001101 10001101 10001101
DB db DB
01001101 01001101 01001101
B b B
; ; ;
10001110 10001110 10001110
DB db DB
01001111 01001111 01001111
B b B
; ; ;
10001111 10001111 10001111
DB db DB
01100000 01100000 01100000
B b B
; ; ;
10010000 10010000 10010000
DB db DB
01100010 01100010 01100010
B b B
; ; ;
10010001 10010001 10010001
DB db DB
01100001 01100001 01100001
B b B
; ; ;
10010010 10010010 10010010
DB db DB
01101100 01101100 01101100
B b B
; ; ;
10010011 10010011 10010011
DB db DB
01101000 01101000 01101000
B b B
; ; ;
10010100 10010100 10010100
DB db DB
01101010 01101010 01101010
B b B
; ; ;
10010101 10010101 10010101
DB db DB
01101001 01101001 01101001
B b B
; ; ;
10010110 10010110 10010110
DB db DB
01101011 01101011 01101011
B b B
; ; ;
10010111 10010111 10010111
DB db DB
01100100 01100100 01100100
B b B
; ; ;
10011000 10011000 10011000
DB db DB
01100110 01100110 01100110
B b B
; ; ;
10011001 10011001 10011001
DB db DB
01100101 01100101 01100101
B b B
; ; ;
10011010 10011010 10011010
DB db DB
01100111 01100111 01100111
B b B
; ; ;
10011011 10011011 10011011
DB db DB
01100011 01100011 01100011
B b B
; ; ;
10011100 10011100 10011100
DB db DB
01101110 01101110 01101110
B b B
; ; ;
10011101 10011101 10011101
DB db DB
01101101 01101101 01101101
B b B
; ; ;
10011110 10011110 10011110
DB db DB
01101111 01101111 01101111
B b B
; ; ;
10011111 10011111 10011111
DB db DB
01010000 01010000 01010000
B b B
; ; ;
10100000 10100000 10100000
DB db DB
01010010 01010010 01010010
B b B
; ; ;
10100001 10100001 10100001
DB db DB
01010001 01010001 01010001
B b B
; ; ;
10100010 10100010 10100010
DB db DB
01011100 01011100 01011100
B b B
; ; ;
10100011 10100011 10100011
DB db DB
01011000 01011000 01011000
B b B
; ; ;
10100100 10100100 10100100
DB db DB
01011010 01011010 01011010
B b B
; ; ;
10100101 10100101 10100101
DB db DB
01011001 01011001 01011001
B b B
; ; ;
10100110 10100110 10100110
DB db DB
01011011 01011011 01011011
B b B
; ; ;
10100111 10100111 10100111
DB db DB
01010100 01010100 01010100
B b B
; ; ;
10101000 10101000 10101000
DB db DB
01010110 01010110 01010110
B b B
; ; ;
10101001 10101001 10101001
DB db DB
01010101 01010101 01010101
B b B
; ; ;
10101010 10101010 10101010
DB db DB
01010111 01010111 01010111
B b B
; ; ;
10101011 10101011 10101011
DB db DB
01010011 01010011 01010011
B b B
; ; ;
10101100 10101100 10101100
DB db DB
01011110 01011110 01011110
B b B
; ; ;
10101101 10101101 10101101
DB db DB
01011101 01011101 01011101
B b B
; ; ;
10101110 10101110 10101110
DB db DB
01011111 01011111 01011111
B b B
; ; ;
10101111 10101111 10101111
DB db DB
01110000 01110000 01110000
B b B
; ; ;
10110000 10110000 10110000
DB db DB
01110010 01110010 01110010
B b B
; ; ;
10110001 10110001 10110001
DB db DB
01110001 01110001 01110001
B b B
; ; ;
10110010 10110010 10110010
DB db DB
01111100 01111100 01111100
B b B
; ; ;
10110011 10110011 10110011
DB db DB
01111000 01111000 01111000
B b B
; ; ;
10110100 10110100 10110100
DB db DB
01111010 01111010 01111010
B b B
; ; ;
10110101 10110101 10110101
DB db DB
01111001 01111001 01111001
B b B
; ; ;
10110110 10110110 10110110
DB db DB
01111011 01111011 01111011
B b B
; ; ;
10110111 10110111 10110111
DB db DB
01110100 01110100 01110100
B b B
; ; ;
10111000 10111000 10111000
DB db DB
01110110 01110110 01110110
B b B
; ; ;
10111001 10111001 10111001
DB db DB
01110101 01110101 01110101
B b B
; ; ;
10111010 10111010 10111010
DB db DB
01110111 01110111 01110111
B b B
; ; ;
10111011 10111011 10111011
DB db DB
01110011 01110011 01110011
B b B
; ; ;
10111100 10111100 10111100
DB db DB
01111110 01111110 01111110
B b B
; ; ;
10111101 10111101 10111101
DB db DB
01111101 01111101 01111101
B b B
; ; ;
10111110 10111110 10111110
DB db DB
01111111 01111111 01111111
B b B
; ; ;
10111111 10111111 10111111
DB db DB
00110000 00110000 00110000
B b B
; ; ;
11000000 11000000 11000000
DB db DB
00110010 00110010 00110010
B b B
; ; ;
11000001 11000001 11000001
DB db DB
00110001 00110001 00110001
B b B
; ; ;
11000010 11000010 11000010
DB db DB
00111100 00111100 00111100
B b B
; ; ;
11000011 11000011 11000011
DB db DB
00111000 00111000 00111000
B b B
; ; ;
11000100 11000100 11000100
DB db DB
00111010 00111010 00111010
B b B
; ; ;
11000101 11000101 11000101
DB db DB
00111001 00111001 00111001
B b B
; ; ;
11000110 11000110 11000110
DB db DB
00111011 00111011 00111011
B b B
; ; ;
11000111 11000111 11000111
DB db DB
00110100 00110100 00110100
B b B
; ; ;
11001000 11001000 11001000
DB db DB
00110110 00110110 00110110
B b B
; ; ;
11001001 11001001 11001001
DB db DB
00110101 00110101 00110101
B b B
; ; ;
11001010 11001010 11001010
DB db DB
00110111 00110111 00110111
B b B
; ; ;
11001011 11001011 11001011
DB db DB
00110011 00110011 00110011
B b B
; ; ;
11001100 11001100 11001100
DB db DB
00111110 00111110 00111110
B b B
; ; ;
11001101 11001101 11001101
DB db DB
00111101 00111101 00111101
B b B
; ; ;
11001110 11001110 11001110
DB db DB
00111111 00111111 00111111
B b B
; ; ;
11001111 11001111 11001111
DB db DB
11100000 11100000 11100000
B b B
; ; ;
11010000 11010000 11010000
DB db DB
11100010 11100010 11100010
B b B
; ; ;
11010001 11010001 11010001
DB db DB
11100001 11100001 11100001
B b B
; ; ;
11010010 11010010 11010010
DB db DB
11101100 11101100 11101100
B b B
; ; ;
11010011 11010011 11010011
DB db DB
11101000 11101000 11101000
B b B
; ; ;
11010100 11010100 11010100
DB db DB
11101010 11101010 11101010
B b B
; ; ;
11010101 11010101 11010101
DB db DB
11101001 11101001 11101001
B b B
; ; ;
11010110 11010110 11010110
DB db DB
11101011 11101011 11101011
B b B
; ; ;
11010111 11010111 11010111
DB db DB
11100100 11100100 11100100
B b B
; ; ;
11011000 11011000 11011000
DB db DB
11100110 11100110 11100110
B b B
; ; ;
11011001 11011001 11011001
DB db DB
11100101 11100101 11100101
B b B
; ; ;
11011010 11011010 11011010
DB db DB
11100111 11100111 11100111
B b B
; ; ;
11011011 11011011 11011011
DB db DB
11100011 11100011 11100011
B b B
; ; ;
11011100 11011100 11011100
DB db DB
11101110 11101110 11101110
B b B
; ; ;
11011101 11011101 11011101
DB db DB
11101101 11101101 11101101
B b B
; ; ;
11011110 11011110 11011110
DB db DB
11101111 11101111 11101111
B b B
; ; ;
11011111 11011111 11011111
DB db DB
11010000 11010000 11010000
B b B
; ; ;
11100000 11100000 11100000
DB db DB
11010010 11010010 11010010
B b B
; ; ;
11100001 11100001 11100001
DB db DB
11010001 11010001 11010001
B b B
; ; ;
11100010 11100010 11100010
DB db DB
11011100 11011100 11011100
B b B
; ; ;
11100011 11100011 11100011
DB db DB
11011000 11011000 11011000
B b B
; ; ;
11100100 11100100 11100100
DB db DB
11011010 11011010 11011010
B b B
; ; ;
11100101 11100101 11100101
DB db DB
11011001 11011001 11011001
B b B
; ; ;
11100110 11100110 11100110
DB db DB
11011011 11011011 11011011
B b B
; ; ;
11100111 11100111 11100111
DB db DB
11010100 11010100 11010100
B b B
; ; ;
11101000 11101000 11101000
DB db DB
11010110 11010110 11010110
B b B
; ; ;
11101001 11101001 11101001
DB db DB
11010101 11010101 11010101
B b B
; ; ;
11101010 11101010 11101010
DB db DB
11010111 11010111 11010111
B b B
; ; ;
11101011 11101011 11101011
DB db DB
11010011 11010011 11010011
B b B
; ; ;
11101100 11101100 11101100
DB db DB
11011110 11011110 11011110
B b B
; ; ;
11101101 11101101 11101101
DB db DB
11011101 11011101 11011101
B b B
; ; ;
11101110 11101110 11101110
DB db DB
11011111 11011111 11011111
B b B
; ; ;
11101111 11101111 11101111
DB db DB
11110000 11110000 11110000
B b B
; ; ;
11110000 11110000 11110000
DB db DB
11110010 11110010 11110010
B b B
; ; ;
11110001 11110001 11110001
DB db DB
11110001 11110001 11110001
B b B
; ; ;
11110010 11110010 11110010
DB db DB
11111100 11111100 11111100
B b B
; ; ;
11110011 11110011 11110011
DB db DB
11111000 11111000 11111000
B b B
; ; ;
11110100 11110100 11110100
DB db DB
11111010 11111010 11111010
B b B
; ; ;
11110101 11110101 11110101
DB db DB
11111001 11111001 11111001
B b B
; ; ;
11110110 11110110 11110110
DB db DB
11111011 11111011 11111011
B b B
; ; ;
11110111 11110111 11110111
DB db DB
11110100 11110100 11110100
B b B
; ; ;
11111000 11111000 11111000
DB db DB
11110110 11110110 11110110
B b B
; ; ;
11111001 11111001 11111001
DB db DB
11110101 11110101 11110101
B b B
; ; ;
11111010 11111010 11111010
DB db DB
11110111 11110111 11110111
B b B
; ; ;
11111011 11111011 11111011
DB db DB
11110011 11110011 11110011
B b B
; ; ;
11111100 11111100 11111100
DB db DB
11111110 11111110 11111110
B b B
; ; ;
11111101 11111101 11111101
DB db DB
11111101 11111101 11111101
B b B
; ; ;
11111110 11111110 11111110
DB db DB
11111111 11111111 11111111
B b B
; ; ;
11111111 11111111 11111111
MAXBYTE maxbyt MAXBYTE
EQU equ EQU
55 55 55
LINENO lineno LINENO
EQU equ EQU
23 23 23
SrcPtr srcptr SrcPtr
DW dw DW
OFFSET offset OFFSET
Buffer buffer Buffer
1 1 1
DesPtr desptr DesPtr
DW dw DW
OFFSET offset OFFSET
Buffer buffer Buffer
2 2 2
SaveBuff savebuff SaveBuff
: : :
DB db DB
MAXBYTE maxbyt MAXBYTE
* * *
( ( (
LINENO lineno LINENO
+ + +
1 1 1
) ) )
DUP dup DUP
( ( (
0 0 0
) ) )
Buffer buffer Buffer
1 1 1
: : :
DB db DB
MAXBYTE maxbyt MAXBYTE
* * *
( ( (
LINENO lineno LINENO
+ + +
1 1 1
) ) )
DUP dup DUP
( ( (
0 0 0
) ) )
DB db DB
256 256 256
DUP dup DUP
( ( (
0 0 0
) ) )
Buffer buffer Buffer
2 2 2
: : :
DB db DB
MAXBYTE maxbyt MAXBYTE
* * *
( ( (
LINENO lineno LINENO
+ + +
1 1 1
) ) )
DUP dup DUP
( ( (
0 0 0
) ) )
DB db DB
256 256 256
DUP dup DUP
( ( (
0 0 0
) ) )
; ; ;
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
; ; ;
; ; ;
; ; ;
; ; ;
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
Data data Data
: : :
DB db DB
" " "
" " "
DB db DB
" " "
" " "
DB db DB
" " "
" " "
DB db DB
" " "
This this This
is is be
a a a
test test test
for for for
a a a
Lattice lattic Lattice
Gas gas Gas
based base base
encryption encrypt encryption
" " "
DB db DB
" " "
algorithm algorithm algorithm
. . .
The the The
data data data
is is be
encoded encod encode
as as a
particles particl particle
of of of
a a a
" " "
DB db DB
" " "
digital digit digital
gas gas gas
, , ,
whose whose whose
time time time
evolution evolut evolution
is is be
then then then
simulated simul simulate
" " "
DB db DB
" " "
with with with
a a a
cellular cellular cellular
- - -
automaton automaton automaton
type type type
algorithm algorithm algorithm
. . .
Decryption decrypt Decryption
" " "
DB db DB
" " "
can can can
be be be
achieved achiev achieve
by by by
running run run
the the the
simulation simul simulation
in in in
reverse revers reverse
. . .
" " "
DB db DB
" " "
A a A
thermodynamic thermodynam thermodynamic
argument argument argument
ensures ensur ensure
that that that
even even even
if if if
a a a
single singl single
" " "
DB db DB
" " "
bit bit bit
is is be
flipped flip flip
, , ,
no no no
decryption decrypt decryption
of of of
the the the
data data data
is is be
possible possibl possible
" " "
DB db DB
" " "
" " "
DB db DB
" " "
After after After
the the the
gas gas gas
is is be
let let let
to to to
evolve evolv evolve
for for for
256 256 256
timesteps timestep timesteps
, , ,
" " "
DB db DB
" " "
one one one
can can can
either either either
run run run
the the the
reverse revers reverse
evolution evolut evolution
by by by
pressing press press
" " "
DB db DB
" " "
space space space
, , ,
or or or
flip flip flip
a a a
bit bit bit
and and and
then then then
run run run
by by by
pressing press press
' ' '
0 0 0
' ' '
" " "
DB db DB
" " "
" " "
DB db DB
" " "
For for For
a a a
cryptographic cryptograph cryptographic
application applic application
, , ,
the the the
key key key
would would would
consist consist consist
" " "
DB db DB
" " "
of of of
the the the
number number number
of of of
time time time
steps step step
and and and
the the the
time time time
and and and
location locat location
" " "
DB db DB
" " "
of of of
specific specif specific
bit bit bit
inversions invers inversion
. . .
" " "
DB db DB
" " "
" " "
DB db DB
" " "
" " "
DB db DB
" " "
" " "
DB db DB
" " "
" " "
DB db DB
" " "
" " "
; ; ;
; ; ;
Fill fill Fill
the the the
gas gas gas
with with with
a a a
piece piec piece
of of of
code code code
; ; ;
InitGas initga InitGas
: : :
MOV mov MOV
DI di DI
, , ,
CS cs CS
: : :
SrcPtr srcptr SrcPtr
MOV mov MOV
SI si SI
, , ,
OFFSET offset OFFSET
Data data Data
MOV mov MOV
CX cx CX
, , ,
LINENO lineno LINENO
IG ig IG
0 0 0
: : :
PUSH push PUSH
DI di DI
PUSH push PUSH
CX cx CX
MOV mov MOV
CX cx CX
, , ,
MAXBYTE maxbyt MAXBYTE
IG ig IG
1 1 1
: : :
MOV mov MOV
AL al AL
, , ,
CS cs CS
: : :
[ [ [
SI si SI
] ] ]
MOV mov MOV
CS cs CS
: : :
[ [ [
DI di DI
] ] ]
, , ,
AL al AL
INC inc INC
SI si SI
INC inc INC
DI di DI
LOOP loop LOOP
IG ig IG
1 1 1
POP pop POP
CX cx CX
POP pop POP
DI di DI
ADD add ADD
DI di DI
, , ,
MAXBYTE maxbyt MAXBYTE
LOOP loop LOOP
IG ig IG
0 0 0
MOV mov MOV
SI si SI
, , ,
CS cs CS
: : :
SrcPtr srcptr SrcPtr
MOV mov MOV
DI di DI
, , ,
OFFSET offset OFFSET
InitGas initga InitGas
MOV mov MOV
CX cx CX
, , ,
MAXBYTE maxbyt MAXBYTE
* * *
3 3 3
MOV mov MOV
AL al AL
, , ,
0 0 0
LG lg LG
2 2 2
: : :
MOV mov MOV
BYTE byte BYTE
PTR ptr PTR
CS cs CS
: : :
[ [ [
SI si SI
] ] ]
, , ,
AL al AL
NOT not NOT
AL al AL
INC inc INC
SI si SI
LOOP loop LOOP
LG lg LG
2 2 2
RET ret RET
; ; ;
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
; ; ;
; ; ;
Display display Display
gas gas gas
molecules molecul molecule
bouncing bounc bounce
around around around
; ; ;
ShowGas showga ShowGas
: : :
PUSH push PUSH
ES es ES
PUSH push PUSH
SI si SI
PUSH push PUSH
DI di DI
PUSH push PUSH
CX cx CX
PUSH push PUSH
BX bx BX
MOV mov MOV
AX ax AX
, , ,
0 0 0
B b B
800 800 800
h h h
MOV mov MOV
ES es ES
, , ,
AX ax AX
MOV mov MOV
SI si SI
, , ,
CS cs CS
: : :
SrcPtr srcptr SrcPtr
MOV mov MOV
DI di DI
, , ,
160 160 160
* * *
2 2 2
+ + +
10 10 10
* * *
2 2 2
MOV mov MOV
CX cx CX
, , ,
LINENO lineno LINENO
- - -
3 3 3
ADD add ADD
SI si SI
, , ,
MAXBYTE maxbyt MAXBYTE
* * *
3 3 3
SG sg SG
1 1 1
: : :
PUSH push PUSH
CX cx CX
PUSH push PUSH
DI di DI
MOV mov MOV
CX cx CX
, , ,
MAXBYTE maxbyt MAXBYTE
SG sg SG
2 2 2
: : :
MOV mov MOV
AL al AL
, , ,
CS cs CS
: : :
[ [ [
SI si SI
] ] ]
MOV mov MOV
BYTE byte BYTE
PTR ptr PTR
ES es ES
: : :
[ [ [
DI di DI
] ] ]
, , ,
AL al AL
INC inc INC
SI si SI
ADD add ADD
DI di DI
, , ,
2 2 2
DEC dec DEC
CX cx CX
JNZ jnz JNZ
SG sg SG
2 2 2
POP pop POP
DI di DI
POP pop POP
CX cx CX
ADD add ADD
DI di DI
, , ,
160 160 160
LOOP loop LOOP
SG sg SG
1 1 1
POP pop POP
BX bx BX
POP pop POP
CX cx CX
POP pop POP
DI di DI
POP pop POP
SI si SI
POP pop POP
ES es ES
RET ret RET
; ; ;
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
; ; ;
; ; ;
CS cs CS
: : :
SI si SI
- - -
> > >
Sourse sours Sourse
of of of
Data data Data
; ; ;
CS cs CS
: : :
DI di DI
- - -
> > >
Destination destin Destination
of of of
Data data Data
; ; ;
ScanOneMiddleLine scanonemiddlelin ScanOneMiddleLine
: : :
; ; ;
; ; ;
first first first
byte byte byte
is is be
a a a
special special special
case case case
because becaus because
of of of
warparound warparound warparound
; ; ;
MOV mov MOV
BL bl BL
, , ,
0 0 0
; ; ;
AL al AL
is is be
the the the
" " "
assembled assembl assemble
" " "
byte byte byte
. . .
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
- - -
MAXBYTE maxbyt MAXBYTE
] ] ]
; ; ;
NORTH north NORTH
is is be
one one one
line line line
" " "
up up up
" " "
( ( (
lower lower low
) ) )
AND and AND
BH bh BH
, , ,
10001000 10001000 10001000
B b B
; ; ;
and and and
at at at
bits bit bit
7 7 7
and and and
3 3 3
OR or OR
BL bl BL
, , ,
BH bh BH
; ; ;
OR or OR
them them them
into into into
the the the
assembled assembl assembled
byte byte byte
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
+ + +
MAXBYTE maxbyt MAXBYTE
] ] ]
; ; ;
SOUTH south SOUTH
is is be
one one one
line line line
" " "
down down down
" " "
( ( (
higher higher high
) ) )
AND and AND
BH bh BH
, , ,
01000100 01000100 01000100
B b B
; ; ;
and and and
at at at
bits bit bit
6 6 6
and and and
2 2 2
OR or OR
BL bl BL
, , ,
BH bh BH
; ; ;
place place place
the the the
stuff stuff stuff
into into into
AL al AL
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
+ + +
( ( (
MAXBYTE maxbyt MAXBYTE
- - -
1 1 1
) ) )
] ] ]
; ; ;
WEST west WEST
is is be
one one one
byte byte byte
" " "
left left leave
" " "
( ( (
lower lower low
) ) )
AND and AND
BH bh BH
, , ,
00100010 00100010 00100010
B b B
; ; ;
and and and
at at at
bits bit bit
5 5 5
and and and
1 1 1
OR or OR
BL bl BL
, , ,
BH bh BH
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
+ + +
1 1 1
] ] ]
; ; ;
EAST east EAST
is is be
one one one
byte byte byte
" " "
right right right
" " "
( ( (
higher higher high
) ) )
AND and AND
BH bh BH
, , ,
00010001 00010001 00010001
B b B
; ; ;
and and and
at at at
bits bit bit
4 4 4
and and and
0 0 0
OR or OR
BL bl BL
, , ,
BH bh BH
MOV mov MOV
BH bh BH
, , ,
0 0 0
MOV mov MOV
AL al AL
, , ,
BYTE byte BYTE
PTR ptr PTR
CS cs CS
: : :
[ [ [
BX bx BX
+ + +
OFFSET offset OFFSET
HPPRule hpprule HPPRule
] ] ]
MOV mov MOV
CS cs CS
: : :
[ [ [
DI di DI
] ] ]
, , ,
AL al AL
INC inc INC
SI si SI
INC inc INC
DI di DI
; ; ;
; ; ;
middle middl middle
bytes byte byte
can can can
be be be
handled handl handle
in in in
a a a
loop loop loop
; ; ;
MOV mov MOV
CX cx CX
, , ,
MAXBYTE maxbyt MAXBYTE
- - -
2 2 2
SOL sol SOL
1 1 1
: : :
MOV mov MOV
BL bl BL
, , ,
0 0 0
; ; ;
AL al AL
is is be
the the the
" " "
assembled assembl assemble
" " "
byte byte byte
. . .
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
- - -
MAXBYTE maxbyt MAXBYTE
] ] ]
; ; ;
NORTH north NORTH
is is be
one one one
line line line
" " "
up up up
" " "
( ( (
lower lower low
) ) )
AND and AND
BH bh BH
, , ,
10001000 10001000 10001000
B b B
; ; ;
and and and
at at at
bits bit bit
7 7 7
and and and
3 3 3
OR or OR
BL bl BL
, , ,
BH bh BH
; ; ;
OR or OR
them them them
into into into
the the the
assembled assembl assembled
byte byte byte
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
+ + +
MAXBYTE maxbyt MAXBYTE
] ] ]
; ; ;
SOUTH south SOUTH
is is be
one one one
line line line
" " "
down down down
" " "
( ( (
higher higher high
) ) )
AND and AND
BH bh BH
, , ,
01000100 01000100 01000100
B b B
; ; ;
and and and
at at at
bits bit bit
6 6 6
and and and
2 2 2
OR or OR
BL bl BL
, , ,
BH bh BH
; ; ;
place place place
the the the
stuff stuff stuff
into into into
AL al AL
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
- - -
1 1 1
] ] ]
; ; ;
WEST west WEST
is is be
one one one
byte byte byte
" " "
left left leave
" " "
( ( (
lower lower low
) ) )
AND and AND
BH bh BH
, , ,
00100010 00100010 00100010
B b B
; ; ;
and and and
at at at
bits bit bit
5 5 5
and and and
1 1 1
OR or OR
BL bl BL
, , ,
BH bh BH
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
+ + +
1 1 1
] ] ]
; ; ;
EAST east EAST
is is be
one one one
byte byte byte
" " "
right right right
" " "
( ( (
higher higher high
) ) )
AND and AND
BH bh BH
, , ,
00010001 00010001 00010001
B b B
; ; ;
and and and
at at at
bits bit bit
4 4 4
and and and
0 0 0
OR or OR
BL bl BL
, , ,
BH bh BH
MOV mov MOV
BH bh BH
, , ,
0 0 0
MOV mov MOV
AL al AL
, , ,
BYTE byte BYTE
PTR ptr PTR
CS cs CS
: : :
[ [ [
BX bx BX
+ + +
OFFSET offset OFFSET
HPPRule hpprule HPPRule
] ] ]
MOV mov MOV
CS cs CS
: : :
[ [ [
DI di DI
] ] ]
, , ,
AL al AL
INC inc INC
SI si SI
INC inc INC
DI di DI
LOOP loop LOOP
SOL sol SOL
1 1 1
; ; ;
; ; ;
last last last
byte byte byte
is is be
also also also
special special special
; ; ;
MOV mov MOV
BL bl BL
, , ,
0 0 0
; ; ;
AL al AL
is is be
the the the
" " "
assembled assembl assemble
" " "
byte byte byte
. . .
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
- - -
MAXBYTE maxbyt MAXBYTE
] ] ]
; ; ;
NORTH north NORTH
is is be
one one one
line line line
" " "
up up up
" " "
( ( (
lower lower low
) ) )
AND and AND
BH bh BH
, , ,
10001000 10001000 10001000
B b B
; ; ;
and and and
at at at
bits bit bit
7 7 7
and and and
3 3 3
OR or OR
BL bl BL
, , ,
BH bh BH
; ; ;
OR or OR
them them them
into into into
the the the
assembled assembl assembled
byte byte byte
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
+ + +
MAXBYTE maxbyt MAXBYTE
] ] ]
; ; ;
SOUTH south SOUTH
is is be
one one one
line line line
" " "
down down down
" " "
( ( (
higher higher high
) ) )
AND and AND
BH bh BH
, , ,
01000100 01000100 01000100
B b B
; ; ;
and and and
at at at
bits bit bit
6 6 6
and and and
2 2 2
OR or OR
BL bl BL
, , ,
BH bh BH
; ; ;
place place place
the the the
stuff stuff stuff
into into into
AL al AL
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
- - -
1 1 1
] ] ]
; ; ;
WEST west WEST
is is be
one one one
byte byte byte
" " "
left left leave
" " "
( ( (
lower lower low
) ) )
AND and AND
BH bh BH
, , ,
00100010 00100010 00100010
B b B
; ; ;
and and and
at at at
bits bit bit
5 5 5
and and and
1 1 1
OR or OR
BL bl BL
, , ,
BH bh BH
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
- - -
( ( (
MAXBYTE maxbyt MAXBYTE
- - -
1 1 1
) ) )
] ] ]
; ; ;
EAST east EAST
is is be
one one one
byte byte byte
" " "
right right right
" " "
( ( (
higher higher high
) ) )
AND and AND
BH bh BH
, , ,
00010001 00010001 00010001
B b B
; ; ;
and and and
at at at
bits bit bit
4 4 4
and and and
0 0 0
OR or OR
BL bl BL
, , ,
BH bh BH
MOV mov MOV
BH bh BH
, , ,
0 0 0
MOV mov MOV
AL al AL
, , ,
BYTE byte BYTE
PTR ptr PTR
CS cs CS
: : :
[ [ [
BX bx BX
+ + +
OFFSET offset OFFSET
HPPRule hpprule HPPRule
] ] ]
MOV mov MOV
CS cs CS
: : :
[ [ [
DI di DI
] ] ]
, , ,
AL al AL
INC inc INC
SI si SI
INC inc INC
DI di DI
RET ret RET
; ; ;
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
; ; ;
; ; ;
CS cs CS
: : :
SI si SI
- - -
> > >
Sourse sours Sourse
of of of
Data data Data
; ; ;
CS cs CS
: : :
DI di DI
- - -
> > >
Destination destin Destination
of of of
Data data Data
; ; ;
ScanFirstLine scanfirstlin ScanFirstLine
: : :
; ; ;
; ; ;
first first first
byte byte byte
is is be
a a a
special special special
case case case
because becaus because
of of of
warparound warparound warparound
; ; ;
MOV mov MOV
BL bl BL
, , ,
0 0 0
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
+ + +
MAXBYTE maxbyt MAXBYTE
* * *
( ( (
LINENO lineno LINENO
- - -
1 1 1
) ) )
] ] ]
AND and AND
BH bh BH
, , ,
10001000 10001000 10001000
B b B
; ; ;
and and and
at at at
bits bit bit
7 7 7
and and and
3 3 3
OR or OR
BL bl BL
, , ,
BH bh BH
; ; ;
OR or OR
them them them
into into into
the the the
assembled assembl assembled
byte byte byte
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
+ + +
MAXBYTE maxbyt MAXBYTE
] ] ]
AND and AND
BH bh BH
, , ,
01000100 01000100 01000100
B b B
; ; ;
and and and
at at at
bits bit bit
6 6 6
and and and
2 2 2
OR or OR
BL bl BL
, , ,
BH bh BH
; ; ;
place place place
the the the
stuff stuff stuff
into into into
AL al AL
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
+ + +
MAXBYTE maxbyt MAXBYTE
- - -
1 1 1
] ] ]
; ; ;
WEST west WEST
is is be
one one one
byte byte byte
" " "
left left leave
" " "
( ( (
lower lower low
) ) )
AND and AND
BH bh BH
, , ,
00100010 00100010 00100010
B b B
; ; ;
and and and
at at at
bits bit bit
5 5 5
and and and
1 1 1
OR or OR
BL bl BL
, , ,
BH bh BH
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
+ + +
1 1 1
] ] ]
; ; ;
EAST east EAST
is is be
one one one
byte byte byte
" " "
right right right
" " "
( ( (
higher higher high
) ) )
AND and AND
BH bh BH
, , ,
00010001 00010001 00010001
B b B
; ; ;
and and and
at at at
bits bit bit
4 4 4
and and and
0 0 0
OR or OR
BL bl BL
, , ,
BH bh BH
MOV mov MOV
BH bh BH
, , ,
0 0 0
MOV mov MOV
AL al AL
, , ,
BYTE byte BYTE
PTR ptr PTR
CS cs CS
: : :
[ [ [
BX bx BX
+ + +
OFFSET offset OFFSET
HPPRule hpprule HPPRule
] ] ]
MOV mov MOV
CS cs CS
: : :
[ [ [
DI di DI
] ] ]
, , ,
AL al AL
INC inc INC
SI si SI
INC inc INC
DI di DI
; ; ;
; ; ;
middle middl middle
bytes byte byte
can can can
be be be
handled handl handle
in in in
a a a
loop loop loop
; ; ;
MOV mov MOV
CX cx CX
, , ,
MAXBYTE maxbyt MAXBYTE
- - -
2 2 2
SFL sfl SFL
1 1 1
: : :
MOV mov MOV
BL bl BL
, , ,
0 0 0
; ; ;
AL al AL
is is be
the the the
" " "
assembled assembl assemble
" " "
byte byte byte
. . .
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
+ + +
MAXBYTE maxbyt MAXBYTE
* * *
( ( (
LINENO lineno LINENO
- - -
1 1 1
) ) )
] ] ]
AND and AND
BH bh BH
, , ,
10001000 10001000 10001000
B b B
; ; ;
and and and
at at at
bits bit bit
7 7 7
and and and
3 3 3
OR or OR
BL bl BL
, , ,
BH bh BH
; ; ;
OR or OR
them them them
into into into
the the the
assembled assembl assembled
byte byte byte
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
+ + +
MAXBYTE maxbyt MAXBYTE
] ] ]
AND and AND
BH bh BH
, , ,
01000100 01000100 01000100
B b B
; ; ;
and and and
at at at
bits bit bit
6 6 6
and and and
2 2 2
OR or OR
BL bl BL
, , ,
BH bh BH
; ; ;
place place place
the the the
stuff stuff stuff
into into into
AL al AL
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
- - -
1 1 1
] ] ]
; ; ;
WEST west WEST
is is be
one one one
byte byte byte
" " "
left left leave
" " "
( ( (
lower lower low
) ) )
AND and AND
BH bh BH
, , ,
00100010 00100010 00100010
B b B
; ; ;
and and and
at at at
bits bit bit
5 5 5
and and and
1 1 1
OR or OR
BL bl BL
, , ,
BH bh BH
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
+ + +
1 1 1
] ] ]
; ; ;
EAST east EAST
is is be
one one one
byte byte byte
" " "
right right right
" " "
( ( (
higher higher high
) ) )
AND and AND
BH bh BH
, , ,
00010001 00010001 00010001
B b B
; ; ;
and and and
at at at
bits bit bit
4 4 4
and and and
0 0 0
OR or OR
BL bl BL
, , ,
BH bh BH
MOV mov MOV
BH bh BH
, , ,
0 0 0
MOV mov MOV
AL al AL
, , ,
BYTE byte BYTE
PTR ptr PTR
CS cs CS
: : :
[ [ [
BX bx BX
+ + +
OFFSET offset OFFSET
HPPRule hpprule HPPRule
] ] ]
MOV mov MOV
CS cs CS
: : :
[ [ [
DI di DI
] ] ]
, , ,
AL al AL
INC inc INC
SI si SI
INC inc INC
DI di DI
LOOP loop LOOP
SFL sfl SFL
1 1 1
; ; ;
; ; ;
last last last
byte byte byte
is is be
also also also
special special special
; ; ;
MOV mov MOV
BL bl BL
, , ,
0 0 0
; ; ;
AL al AL
is is be
the the the
" " "
assembled assembl assemble
" " "
byte byte byte
. . .
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
+ + +
MAXBYTE maxbyt MAXBYTE
* * *
( ( (
LINENO lineno LINENO
- - -
1 1 1
) ) )
] ] ]
AND and AND
BH bh BH
, , ,
10001000 10001000 10001000
B b B
; ; ;
and and and
at at at
bits bit bit
7 7 7
and and and
3 3 3
OR or OR
BL bl BL
, , ,
BH bh BH
; ; ;
OR or OR
them them them
into into into
the the the
assembled assembl assembled
byte byte byte
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
+ + +
MAXBYTE maxbyt MAXBYTE
] ] ]
AND and AND
BH bh BH
, , ,
01000100 01000100 01000100
B b B
; ; ;
and and and
at at at
bits bit bit
6 6 6
and and and
2 2 2
OR or OR
BL bl BL
, , ,
BH bh BH
; ; ;
place place place
the the the
stuff stuff stuff
into into into
AL al AL
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
- - -
1 1 1
] ] ]
; ; ;
WEST west WEST
is is be
one one one
byte byte byte
" " "
left left leave
" " "
( ( (
lower lower low
) ) )
AND and AND
BH bh BH
, , ,
00100010 00100010 00100010
B b B
; ; ;
and and and
at at at
bits bit bit
5 5 5
and and and
1 1 1
OR or OR
BL bl BL
, , ,
BH bh BH
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
- - -
( ( (
MAXBYTE maxbyt MAXBYTE
- - -
1 1 1
) ) )
] ] ]
; ; ;
EAST east EAST
is is be
one one one
byte byte byte
" " "
right right right
" " "
( ( (
higher higher high
) ) )
AND and AND
BH bh BH
, , ,
00010001 00010001 00010001
B b B
; ; ;
and and and
at at at
bits bit bit
4 4 4
and and and
0 0 0
OR or OR
BL bl BL
, , ,
BH bh BH
MOV mov MOV
BH bh BH
, , ,
0 0 0
MOV mov MOV
AL al AL
, , ,
BYTE byte BYTE
PTR ptr PTR
CS cs CS
: : :
[ [ [
BX bx BX
+ + +
OFFSET offset OFFSET
HPPRule hpprule HPPRule
] ] ]
MOV mov MOV
CS cs CS
: : :
[ [ [
DI di DI
] ] ]
, , ,
AL al AL
RET ret RET
; ; ;
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
; ; ;
; ; ;
CS cs CS
: : :
SI si SI
- - -
> > >
Sourse sours Sourse
of of of
Data data Data
; ; ;
CS cs CS
: : :
DI di DI
- - -
> > >
Destination destin Destination
of of of
Data data Data
; ; ;
ScanLastLine scanlastlin ScanLastLine
: : :
; ; ;
; ; ;
first first first
byte byte byte
is is be
a a a
special special special
case case case
because becaus because
of of of
warparound warparound warparound
; ; ;
MOV mov MOV
BL bl BL
, , ,
0 0 0
; ; ;
AL al AL
is is be
the the the
" " "
assembled assembl assemble
" " "
byte byte byte
. . .
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
- - -
MAXBYTE maxbyt MAXBYTE
] ] ]
AND and AND
BH bh BH
, , ,
10001000 10001000 10001000
B b B
; ; ;
and and and
at at at
bits bit bit
7 7 7
and and and
3 3 3
OR or OR
BL bl BL
, , ,
BH bh BH
; ; ;
OR or OR
them them them
into into into
the the the
assembled assembl assembled
byte byte byte
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
- - -
MAXBYTE maxbyt MAXBYTE
* * *
( ( (
LINENO lineno LINENO
- - -
1 1 1
) ) )
] ] ]
AND and AND
BH bh BH
, , ,
01000100 01000100 01000100
B b B
; ; ;
and and and
at at at
bits bit bit
6 6 6
and and and
2 2 2
OR or OR
BL bl BL
, , ,
BH bh BH
; ; ;
place place place
the the the
stuff stuff stuff
into into into
AL al AL
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
+ + +
( ( (
MAXBYTE maxbyt MAXBYTE
- - -
1 1 1
) ) )
] ] ]
; ; ;
WEST west WEST
is is be
one one one
byte byte byte
" " "
left left leave
" " "
( ( (
lower lower low
) ) )
AND and AND
BH bh BH
, , ,
00100010 00100010 00100010
B b B
; ; ;
and and and
at at at
bits bit bit
5 5 5
and and and
1 1 1
OR or OR
BL bl BL
, , ,
BH bh BH
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
+ + +
1 1 1
] ] ]
; ; ;
EAST east EAST
is is be
one one one
byte byte byte
" " "
right right right
" " "
( ( (
higher higher high
) ) )
AND and AND
BH bh BH
, , ,
00010001 00010001 00010001
B b B
; ; ;
and and and
at at at
bits bit bit
4 4 4
and and and
0 0 0
OR or OR
BL bl BL
, , ,
BH bh BH
MOV mov MOV
BH bh BH
, , ,
0 0 0
MOV mov MOV
AL al AL
, , ,
BYTE byte BYTE
PTR ptr PTR
CS cs CS
: : :
[ [ [
BX bx BX
+ + +
OFFSET offset OFFSET
HPPRule hpprule HPPRule
] ] ]
MOV mov MOV
CS cs CS
: : :
[ [ [
DI di DI
] ] ]
, , ,
AL al AL
INC inc INC
SI si SI
INC inc INC
DI di DI
; ; ;
; ; ;
middle middl middle
bytes byte byte
can can can
be be be
handled handl handle
in in in
a a a
loop loop loop
; ; ;
MOV mov MOV
CX cx CX
, , ,
MAXBYTE maxbyt MAXBYTE
- - -
2 2 2
SLL sll SLL
1 1 1
: : :
MOV mov MOV
BL bl BL
, , ,
0 0 0
; ; ;
AL al AL
is is be
the the the
" " "
assembled assembl assemble
" " "
byte byte byte
. . .
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
- - -
MAXBYTE maxbyt MAXBYTE
] ] ]
AND and AND
BH bh BH
, , ,
10001000 10001000 10001000
B b B
; ; ;
and and and
at at at
bits bit bit
7 7 7
and and and
3 3 3
OR or OR
BL bl BL
, , ,
BH bh BH
; ; ;
OR or OR
them them them
into into into
the the the
assembled assembl assembled
byte byte byte
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
- - -
MAXBYTE maxbyt MAXBYTE
* * *
( ( (
LINENO lineno LINENO
- - -
1 1 1
) ) )
] ] ]
AND and AND
BH bh BH
, , ,
01000100 01000100 01000100
B b B
; ; ;
and and and
at at at
bits bit bit
6 6 6
and and and
2 2 2
OR or OR
BL bl BL
, , ,
BH bh BH
; ; ;
place place place
the the the
stuff stuff stuff
into into into
AL al AL
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
- - -
1 1 1
] ] ]
; ; ;
WEST west WEST
is is be
one one one
byte byte byte
" " "
left left leave
" " "
( ( (
lower lower low
) ) )
AND and AND
BH bh BH
, , ,
00100010 00100010 00100010
B b B
; ; ;
and and and
at at at
bits bit bit
5 5 5
and and and
1 1 1
OR or OR
BL bl BL
, , ,
BH bh BH
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
+ + +
1 1 1
] ] ]
; ; ;
EAST east EAST
is is be
one one one
byte byte byte
" " "
right right right
" " "
( ( (
higher higher high
) ) )
AND and AND
BH bh BH
, , ,
00010001 00010001 00010001
B b B
; ; ;
and and and
at at at
bits bit bit
4 4 4
and and and
0 0 0
OR or OR
BL bl BL
, , ,
BH bh BH
MOV mov MOV
BH bh BH
, , ,
0 0 0
MOV mov MOV
AL al AL
, , ,
BYTE byte BYTE
PTR ptr PTR
CS cs CS
: : :
[ [ [
BX bx BX
+ + +
OFFSET offset OFFSET
HPPRule hpprule HPPRule
] ] ]
MOV mov MOV
CS cs CS
: : :
[ [ [
DI di DI
] ] ]
, , ,
AL al AL
INC inc INC
SI si SI
INC inc INC
DI di DI
LOOP loop LOOP
SLL sll SLL
1 1 1
; ; ;
; ; ;
last last last
byte byte byte
is is be
also also also
special special special
; ; ;
MOV mov MOV
BL bl BL
, , ,
0 0 0
; ; ;
AL al AL
is is be
the the the
" " "
assembled assembl assemble
" " "
byte byte byte
. . .
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
- - -
MAXBYTE maxbyt MAXBYTE
] ] ]
AND and AND
BH bh BH
, , ,
10001000 10001000 10001000
B b B
; ; ;
and and and
at at at
bits bit bit
7 7 7
and and and
3 3 3
OR or OR
BL bl BL
, , ,
BH bh BH
; ; ;
OR or OR
them them them
into into into
the the the
assembled assembl assembled
byte byte byte
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
- - -
MAXBYTE maxbyt MAXBYTE
* * *
( ( (
LINENO lineno LINENO
- - -
1 1 1
) ) )
] ] ]
AND and AND
BH bh BH
, , ,
01000100 01000100 01000100
B b B
; ; ;
and and and
at at at
bits bit bit
6 6 6
and and and
2 2 2
OR or OR
BL bl BL
, , ,
BH bh BH
; ; ;
place place place
the the the
stuff stuff stuff
into into into
AL al AL
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
- - -
1 1 1
] ] ]
; ; ;
WEST west WEST
is is be
one one one
byte byte byte
" " "
left left leave
" " "
( ( (
lower lower low
) ) )
AND and AND
BH bh BH
, , ,
00100010 00100010 00100010
B b B
; ; ;
and and and
at at at
bits bit bit
5 5 5
and and and
1 1 1
OR or OR
BL bl BL
, , ,
BH bh BH
MOV mov MOV
BH bh BH
, , ,
CS cs CS
: : :
[ [ [
SI si SI
- - -
( ( (
MAXBYTE maxbyt MAXBYTE
- - -
1 1 1
) ) )
] ] ]
; ; ;
EAST east EAST
is is be
one one one
byte byte byte
" " "
right right right
" " "
( ( (
higher higher high
) ) )
AND and AND
BH bh BH
, , ,
00010001 00010001 00010001
B b B
; ; ;
and and and
at at at
bits bit bit
4 4 4
and and and
0 0 0
OR or OR
BL bl BL
, , ,
BH bh BH
MOV mov MOV
BH bh BH
, , ,
0 0 0
MOV mov MOV
AL al AL
, , ,
BYTE byte BYTE
PTR ptr PTR
CS cs CS
: : :
[ [ [
BX bx BX
+ + +
OFFSET offset OFFSET
HPPRule hpprule HPPRule
] ] ]
MOV mov MOV
CS cs CS
: : :
[ [ [
DI di DI
] ] ]
, , ,
AL al AL
INC inc INC
SI si SI
INC inc INC
DI di DI
RET ret RET
; ; ;
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
; ; ;
; ; ;
Invert invert Invert
all all all
velocities veloc velocity
in in in
the the the
gas gas gas
; ; ;
InvertAll invertal InvertAll
: : :
PUSH push PUSH
BX bx BX
PUSH push PUSH
CX cx CX
PUSH push PUSH
SI si SI
MOV mov MOV
SI si SI
, , ,
CS cs CS
: : :
SrcPtr srcptr SrcPtr
MOV mov MOV
BX bx BX
, , ,
0 0 0
MOV mov MOV
CX cx CX
, , ,
LINENO lineno LINENO
IA ia IA
1 1 1
: : :
PUSH push PUSH
CX cx CX
MOV mov MOV
CX cx CX
, , ,
MAXBYTE maxbyt MAXBYTE
IA ia IA
2 2 2
: : :
MOV mov MOV
BL bl BL
, , ,
CS cs CS
: : :
[ [ [
SI si SI
] ] ]
MOV mov MOV
AL al AL
, , ,
BYTE byte BYTE
PTR ptr PTR
CS cs CS
: : :
[ [ [
BX bx BX
+ + +
( ( (
OFFSET offset OFFSET
WallRule wallrul WallRule
) ) )
] ] ]
MOV mov MOV
CS cs CS
: : :
[ [ [
SI si SI
] ] ]
, , ,
AL al AL
INC inc INC
SI si SI
LOOP loop LOOP
IA ia IA
2 2 2
POP pop POP
CX cx CX
LOOP loop LOOP
IA ia IA
1 1 1
POP pop POP
SI si SI
POP pop POP
CX cx CX
POP pop POP
BX bx BX
RET ret RET
; ; ;
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
; ; ;
; ; ;
IterateOnce iterateonc IterateOnce
: : :
MOV mov MOV
SI si SI
, , ,
CS cs CS
: : :
SrcPtr srcptr SrcPtr
MOV mov MOV
DI di DI
, , ,
CS cs CS
: : :
DesPtr desptr DesPtr
MOV mov MOV
CS cs CS
: : :
SrcPtr srcptr SrcPtr
, , ,
DI di DI
MOV mov MOV
CS cs CS
: : :
DesPtr desptr DesPtr
, , ,
SI si SI
PUSH push PUSH
SI si SI
PUSH push PUSH
DI di DI
CALL call CALL
ScanFirstLine scanfirstlin ScanFirstLine
POP pop POP
DI di DI
POP pop POP
SI si SI
ADD add ADD
SI si SI
, , ,
MAXBYTE maxbyt MAXBYTE
ADD add ADD
DI di DI
, , ,
MAXBYTE maxbyt MAXBYTE
MOV mov MOV
CX cx CX
, , ,
LINENO lineno LINENO
- - -
2 2 2
; ; ;
dont dont dont
scan scan scan
first first first
and and and
last last last
L l L
1 1 1
: : :
PUSH push PUSH
SI si SI
PUSH push PUSH
DI di DI
PUSH push PUSH
CX cx CX
CALL call CALL
ScanOneMiddleLine scanonemiddlelin ScanOneMiddleLine
POP pop POP
CX cx CX
POP pop POP
DI di DI
POP pop POP
SI si SI
ADD add ADD
SI si SI
, , ,
MAXBYTE maxbyt MAXBYTE
ADD add ADD
DI di DI
, , ,
MAXBYTE maxbyt MAXBYTE
LOOP loop LOOP
L l L
1 1 1
PUSH push PUSH
SI si SI
PUSH push PUSH
DI di DI
CALL call CALL
ScanLastLine scanlastlin ScanLastLine
POP pop POP
SI si SI
POP pop POP
DI di DI
L l L
3 3 3
: : :
RET ret RET
; ; ;
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
; ; ;
; ; ;
Iterate iter Iterate
HPP hpp HPP
rule rule rule
CX cx CX
times time time
; ; ;
Iterate iter Iterate
: : :
PUSH push PUSH
CX cx CX
CALL call CALL
IterateOnce iterateonc IterateOnce
POP pop POP
CX cx CX
CALL call CALL
ShowGas showga ShowGas
LOOP loop LOOP
Iterate iter Iterate
RET ret RET
; ; ;
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
- - -
; ; ;
; ; ;
Iterate iter Iterate
HPP hpp HPP
rule rule rule
CX cx CX
times time time
; ; ;
IterateUntil iterateuntil IterateUntil
: : :
MOV mov MOV
SI si SI
, , ,
0 0 0
MOV mov MOV
CX cx CX
, , ,
OFFSET offset OFFSET
IU iu IU
4 4 4
- - -
OFFSET offset OFFSET
IU iu IU
3 3 3
IU iu IU
00 00 00
: : :
MOV mov MOV
AL al AL
, , ,
BYTE byte BYTE
PTR ptr PTR
CS cs CS
: : :
[ [ [
SI si SI
+ + +
OFFSET offset OFFSET
IU iu IU
3 3 3
] ] ]
XOR xor XOR
BYTE byte BYTE
PTR ptr PTR
CS cs CS
: : :
[ [ [
SI si SI
+ + +
OFFSET offset OFFSET
IU iu IU
4 4 4
] ] ]
, , ,
AL al AL
INC inc INC
SI si SI
LOOP loop LOOP
IU iu IU
00 00 00
IU iu IU
0 0 0
: : :
CALL call CALL
IterateOnce iterateonc IterateOnce
CALL call CALL
ShowGas showga ShowGas
MOV mov MOV
SI si SI
, , ,
CS cs CS
: : :
SrcPtr srcptr SrcPtr
MOV mov MOV
CX cx CX
, , ,
MAXBYTE maxbyt MAXBYTE
* * *
3 3 3
MOV mov MOV
BX bx BX
, , ,
0 0 0
MOV mov MOV
AH ah AH
, , ,
0 0 0
MOV mov MOV
AL al AL
, , ,
255 255 255
IU iu IU
1 1 1
: : :
MOV mov MOV
BL bl BL
, , ,
BYTE byte BYTE
PTR ptr PTR
CS cs CS
: : :
[ [ [
SI si SI
] ] ]
MOV mov MOV
DL dl DL
, , ,
BYTE byte BYTE
PTR ptr PTR
CS cs CS
: : :
[ [ [
BX bx BX
+ + +
WallRule wallrul WallRule
] ] ]
NOT not NOT
AH ah AH
XOR xor XOR
DL dl DL
, , ,
AH ah AH
AND and AND
AL al AL
, , ,
DL dl DL
INC inc INC
SI si SI
LOOP loop LOOP
IU iu IU
1 1 1
MOV mov MOV
SI si SI
, , ,
0 0 0
MOV mov MOV
CX cx CX
, , ,
OFFSET offset OFFSET
IU iu IU
4 4 4
- - -
OFFSET offset OFFSET
IU iu IU
3 3 3
IU iu IU
2 2 2
: : :
MOV mov MOV
AH ah AH
, , ,
BYTE byte BYTE
PTR ptr PTR
CS cs CS
: : :
[ [ [
SI si SI
+ + +
OFFSET offset OFFSET
IU iu IU
4 4 4
] ] ]
AND and AND
AH ah AH
, , ,
AL al AL
XOR xor XOR
BYTE byte BYTE
PTR ptr PTR
CS cs CS
: : :
[ [ [
SI si SI
+ + +
OFFSET offset OFFSET
IU iu IU
3 3 3
] ] ]
, , ,
AH ah AH
INC inc INC
SI si SI
LOOP loop LOOP
IU iu IU
2 2 2
JMP jmp JMP
IU iu IU
3 3 3
IU iu IU
3 3 3
: : :
MOV mov MOV
AX ax AX
, , ,
OFFSET offset OFFSET
IU iu IU
0 0 0
PUSH push PUSH
AX ax AX
RET ret RET
DB db DB
256 256 256
DUP dup DUP
( ( (
90 90 90
h h h
) ) )
IU iu IU
4 4 4
: : :
PUSH push PUSH
AX ax AX
PUSH push PUSH
BX bx BX
PUSH push PUSH
CX cx CX
PUSH push PUSH
DX dx DX
PUSH push PUSH
DS ds DS
MOV mov MOV
AH ah AH
, , ,
9 9 9
MOV mov MOV
DX dx DX
, , ,
CS cs CS
: : :
MsgPtr msgptr MsgPtr
INT int INT
21 21 21
H h H
POP pop POP
DS ds DS
POP pop POP
DX dx DX
POP pop POP
CX cx CX
POP pop POP
BX bx BX
POP pop POP
AX ax AX
RET ret RET
DB db DB
512 512 512
DUP dup DUP
( ( (
90 90 90
h h h
) ) )
MsgPtr msgptr MsgPtr
DW dw DW
OFFSET offset OFFSET
Msg msg Msg
Msg msg Msg
DB db DB
" " "
This this This
message messag message
is is be
printed print print
out out out
by by by
" " "
, , ,
10 10 10
, , ,
13 13 13
DB db DB
" " "
code code code
decrypted decrypt decrypt
using use use
data data data
from from from
the the the
lattice lattic lattice
" " "
, , ,
10 10 10
, , ,
13 13 13
DB db DB
" " "
which which which
was was be
applied appli apply
to to to
the the the
decoding decod decode
routine routin routine
" " "
, , ,
10 10 10
, , ,
13 13 13
DB db DB
" " "
after after after
every everi every
time time time
step step step
" " "
, , ,
10 10 10
, , ,
13 13 13
DB db DB
" " "
The the The
decoding decod decoding
function function function
left left leave
the the the
code code code
unchanged unchang unchanged
" " "
, , ,
10 10 10
, , ,
13 13 13
DB db DB
" " "
except except except
after after after
the the the
gas gas gas
evolution evolut evolution
had had have
completelly completelli completelly
" " "
, , ,
10 10 10
, , ,
13 13 13
DB db DB
" " "
reversed revers reverse
the the the
thermalization thermal thermalization
" " "
, , ,
10 10 10
, , ,
13 13 13
, , ,
" " "
$ $ $
" " "
TIMES time TIMES
EQU equ EQU
16 16 16
; ; ;
256 256 256
repetitions repetit repetition
are are be
enough enough enough
to to to
; ; ;
" " "
equilibrate equilibr equilibrate
" " "
the the the
gas gas gas
Begin begin Begin
: : :
MOV mov MOV
AX ax AX
, , ,
0600 0600 0600
h h h
MOV mov MOV
BH bh BH
, , ,
7 7 7
MOV mov MOV
DH dh DH
, , ,
25 25 25
MOV mov MOV
DL dl DL
, , ,
80 80 80
MOV mov MOV
CX cx CX
, , ,
0 0 0
INT int INT
10 10 10
h h h
MOV mov MOV
AH ah AH
, , ,
2 2 2
MOV mov MOV
BH bh BH
, , ,
0 0 0
MOV mov MOV
DH dh DH
, , ,
24 24 24
MOV mov MOV
DL dl DL
, , ,
0 0 0
INT int INT
10 10 10
h h h
CALL call CALL
InitGas initga InitGas
CALL call CALL
ShowGas showga ShowGas
MOV mov MOV
AH ah AH
, , ,
0 0 0
INT int INT
16 16 16
h h h
PUSH push PUSH
CX cx CX
MOV mov MOV
CX cx CX
, , ,
TIMES time TIMES
CALL call CALL
Iterate iter Iterate
CALL call CALL
InvertAll invertal InvertAll
CALL call CALL
ShowGas showga ShowGas
MOV mov MOV
AH ah AH
, , ,
0 0 0
INT int INT
16 16 16
h h h
CMP cmp CMP
AL al AL
, , ,
" " "
0 0 0
" " "
JNE jne JNE
Begin begin Begin
0 0 0
MOV mov MOV
SI si SI
, , ,
CS cs CS
: : :
SrcPtr srcptr SrcPtr
XOR xor XOR
BYTE byte BYTE
PTR ptr PTR
CS cs CS
: : :
[ [ [
SI si SI
] ] ]
, , ,
10000001 10000001 10000001
B b B
Begin begin Begin
0 0 0
: : :
MOV mov MOV
CX cx CX
, , ,
TIMES time TIMES
CALL call CALL
IterateUntil iterateuntil IterateUntil
CALL call CALL
InvertAll invertal InvertAll
CALL call CALL
ShowGas showga ShowGas
MOV mov MOV
AX ax AX
, , ,
4 4 4
C c C
00 00 00
h h h
INT int INT
21 21 21
h h h
CODE code CODE
ENDS end ENDS
END end END
Start start Start
